{"version":3,"file":"profile.a7f2e625.js","sources":["../../../hoppscotch-common/src/components/profile/Shortcode.vue","../../../hoppscotch-common/src/helpers/shortcodes/ShortcodeListAdapter.ts","../../../hoppscotch-common/src/components/profile/Shortcodes.vue","../../../hoppscotch-common/src/helpers/backend/mutations/Profile.ts","../../../hoppscotch-common/src/components/profile/UserDelete.vue","../../../hoppscotch-common/src/pages/profile.vue"],"sourcesContent":["<template>\n  <div\n    class=\"block w-full my-6 border divide-y lg:flex lg:my-0 lg:border-0 lg:divide-y-0 lg:divide-x divide-dividerLight border-dividerLight\"\n  >\n    <div class=\"font-mono text-tiny table-box\">\n      {{ shortcode.id }}\n    </div>\n    <div class=\"table-box\" :class=\"requestLabelColor\">\n      {{ parseShortcodeRequest.method }}\n    </div>\n    <div class=\"table-box\">\n      {{ parseShortcodeRequest.endpoint }}\n    </div>\n    <div ref=\"timeStampRef\" class=\"table-box\">\n      {{ dateStamp }}\n    </div>\n    <div class=\"justify-center table-box\">\n      <ButtonSecondary\n        v-tippy=\"{ theme: 'tooltip' }\"\n        :title=\"t('action.open_workspace')\"\n        :to=\"`${shortcodeBaseURL}/r/${shortcode.id}`\"\n        blank\n        :icon=\"IconExternalLink\"\n        class=\"px-3 text-accent hover:text-accent\"\n      />\n      <ButtonSecondary\n        v-tippy=\"{ theme: 'tooltip' }\"\n        :title=\"t('action.copy')\"\n        color=\"green\"\n        :icon=\"copyIconRefs\"\n        class=\"px-3\"\n        @click=\"copyShortcode(shortcode.id)\"\n      />\n      <ButtonSecondary\n        v-tippy=\"{ theme: 'tooltip' }\"\n        :title=\"t('action.delete')\"\n        :icon=\"IconTrash\"\n        color=\"red\"\n        class=\"px-3\"\n        @click=\"deleteShortcode(shortcode.id)\"\n      />\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed } from \"vue\"\nimport { pipe } from \"fp-ts/function\"\nimport * as RR from \"fp-ts/ReadonlyRecord\"\nimport * as O from \"fp-ts/Option\"\nimport { translateToNewRequest } from \"@hoppscotch/data\"\nimport { refAutoReset } from \"@vueuse/core\"\nimport { useI18n } from \"@composables/i18n\"\nimport { useToast } from \"@composables/toast\"\nimport { copyToClipboard } from \"~/helpers/utils/clipboard\"\nimport { Shortcode } from \"~/helpers/shortcodes/Shortcode\"\nimport { shortDateTime } from \"~/helpers/utils/date\"\n\nimport IconTrash from \"~icons/lucide/trash\"\nimport IconExternalLink from \"~icons/lucide/external-link\"\nimport IconCopy from \"~icons/lucide/copy\"\nimport IconCheck from \"~icons/lucide/check\"\n\nconst t = useI18n()\nconst toast = useToast()\n\nconst props = defineProps<{\n  shortcode: Shortcode\n}>()\n\nconst emit = defineEmits<{\n  (e: \"delete-shortcode\", codeID: string): void\n}>()\n\nconst deleteShortcode = (codeID: string) => {\n  emit(\"delete-shortcode\", codeID)\n}\n\nconst requestMethodLabels = {\n  get: \"text-green-500\",\n  post: \"text-yellow-500\",\n  put: \"text-blue-500\",\n  delete: \"text-red-500\",\n  default: \"text-gray-500\",\n} as const\n\nconst timeStampRef = ref()\n\nconst copyIconRefs = refAutoReset<typeof IconCopy | typeof IconCheck>(\n  IconCopy,\n  1000\n)\n\nconst parseShortcodeRequest = computed(() =>\n  pipe(props.shortcode.request, JSON.parse, translateToNewRequest)\n)\n\nconst requestLabelColor = computed(() =>\n  pipe(\n    requestMethodLabels,\n    RR.lookup(parseShortcodeRequest.value.method.toLowerCase()),\n    O.getOrElseW(() => requestMethodLabels.default)\n  )\n)\n\nconst dateStamp = computed(() => shortDateTime(props.shortcode.createdOn))\n\nconst shortcodeBaseURL =\n  import.meta.env.VITE_SHORTCODE_BASE_URL ?? \"https://hopp.sh\"\n\nconst copyShortcode = (codeID: string) => {\n  copyToClipboard(`${shortcodeBaseURL}/r/${codeID}`)\n  toast.success(`${t(\"state.copied_to_clipboard\")}`)\n  copyIconRefs.value = IconCheck\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.table-box {\n  @apply flex flex-1 items-center px-4 py-1 truncate;\n}\n</style>\n","import * as E from \"fp-ts/Either\"\nimport { BehaviorSubject, Subscription } from \"rxjs\"\nimport { Subscription as WSubscription } from \"wonka\"\nimport {\n  GQLError,\n  runAuthOnlyGQLSubscription,\n  runGQLQuery,\n} from \"../backend/GQLClient\"\nimport {\n  GetUserShortcodesQuery,\n  GetUserShortcodesDocument,\n  ShortcodeCreatedDocument,\n  ShortcodeDeletedDocument,\n} from \"../backend/graphql\"\nimport { BACKEND_PAGE_SIZE } from \"../backend/helpers\"\nimport { Shortcode } from \"./Shortcode\"\n\nexport default class ShortcodeListAdapter {\n  error$: BehaviorSubject<GQLError<string> | null>\n  loading$: BehaviorSubject<boolean>\n  shortcodes$: BehaviorSubject<GetUserShortcodesQuery[\"myShortcodes\"]>\n  hasMoreShortcodes$: BehaviorSubject<boolean>\n\n  private isDispose: boolean\n\n  private myShortcodesCreated: Subscription | null\n  private myShortcodesRevoked: Subscription | null\n\n  private myShortcodesCreatedSub: WSubscription | null\n  private myShortcodesRevokedSub: WSubscription | null\n\n  constructor(deferInit = false) {\n    this.error$ = new BehaviorSubject<GQLError<string> | null>(null)\n    this.loading$ = new BehaviorSubject<boolean>(false)\n    this.shortcodes$ = new BehaviorSubject<\n      GetUserShortcodesQuery[\"myShortcodes\"]\n    >([])\n    this.hasMoreShortcodes$ = new BehaviorSubject<boolean>(true)\n    this.isDispose = true\n    this.myShortcodesCreated = null\n    this.myShortcodesRevoked = null\n    this.myShortcodesCreatedSub = null\n    this.myShortcodesRevokedSub = null\n\n    if (!deferInit) this.initialize()\n  }\n\n  unsubscribeSubscriptions() {\n    this.myShortcodesCreated?.unsubscribe()\n    this.myShortcodesRevoked?.unsubscribe()\n    this.myShortcodesCreatedSub?.unsubscribe()\n    this.myShortcodesRevokedSub?.unsubscribe()\n  }\n\n  initialize() {\n    if (!this.isDispose) throw new Error(`Adapter is already initialized`)\n\n    this.fetchList()\n    this.registerSubscriptions()\n  }\n\n  /**\n   * Returns whether the shortcode adapter is active and initialized\n   */\n  public isInitialized() {\n    return !this.isDispose\n  }\n\n  public dispose() {\n    if (this.isDispose) throw new Error(`Adapter has been disposed`)\n\n    this.isDispose = true\n    this.unsubscribeSubscriptions()\n  }\n\n  fetchList() {\n    this.loadMore(true)\n  }\n\n  async loadMore(forcedAttempt = false) {\n    if (!this.hasMoreShortcodes$.value && !forcedAttempt) return\n\n    this.loading$.next(true)\n\n    const lastCodeID =\n      this.shortcodes$.value.length > 0\n        ? this.shortcodes$.value[this.shortcodes$.value.length - 1].id\n        : undefined\n\n    const result = await runGQLQuery({\n      query: GetUserShortcodesDocument,\n      variables: {\n        cursor: lastCodeID,\n      },\n    })\n    if (E.isLeft(result)) {\n      this.error$.next(result.left)\n      console.error(result.left)\n      this.loading$.next(false)\n\n      throw new Error(`Failed fetching short codes list: ${result.left}`)\n    }\n\n    const fetchedResult = result.right.myShortcodes\n\n    this.pushNewShortcodes(fetchedResult)\n\n    if (fetchedResult.length !== BACKEND_PAGE_SIZE) {\n      this.hasMoreShortcodes$.next(false)\n    }\n\n    this.loading$.next(false)\n  }\n\n  private pushNewShortcodes(results: Shortcode[]) {\n    const userShortcodes = this.shortcodes$.value\n\n    userShortcodes.push(...results)\n\n    this.shortcodes$.next(userShortcodes)\n  }\n\n  private createShortcode(shortcode: Shortcode) {\n    const userShortcodes = this.shortcodes$.value\n\n    userShortcodes.unshift(shortcode)\n\n    this.shortcodes$.next(userShortcodes)\n  }\n\n  private deleteShortcode(codeId: string) {\n    const newShortcodes = this.shortcodes$.value.filter(\n      ({ id }) => id !== codeId\n    )\n\n    this.shortcodes$.next(newShortcodes)\n  }\n\n  private registerSubscriptions() {\n    const [myShortcodeCreated$, myShortcodeCreatedSub] =\n      runAuthOnlyGQLSubscription({\n        query: ShortcodeCreatedDocument,\n      })\n\n    this.myShortcodesCreatedSub = myShortcodeCreatedSub\n    this.myShortcodesCreated = myShortcodeCreated$.subscribe((result) => {\n      if (E.isLeft(result)) {\n        console.error(result.left)\n        throw new Error(`Shortcode Create Error ${result.left}`)\n      }\n\n      this.createShortcode(result.right.myShortcodesCreated)\n    })\n\n    const [myShortcodesRevoked$, myShortcodeRevokedSub] =\n      runAuthOnlyGQLSubscription({\n        query: ShortcodeDeletedDocument,\n      })\n\n    this.myShortcodesRevokedSub = myShortcodeRevokedSub\n    this.myShortcodesRevoked = myShortcodesRevoked$.subscribe((result) => {\n      if (E.isLeft(result)) {\n        console.error(result.left)\n        throw new Error(`Shortcode Delete Error ${result.left}`)\n      }\n\n      this.deleteShortcode(result.right.myShortcodesRevoked.id)\n    })\n  }\n}\n","<template>\n  <section class=\"p-4\">\n    <h4 class=\"font-semibold text-secondaryDark\">\n      {{ t(\"settings.short_codes\") }}\n    </h4>\n    <div class=\"my-1 text-secondaryLight\">\n      {{ t(\"settings.short_codes_description\") }}\n    </div>\n    <div class=\"relative py-4 overflow-x-auto\">\n      <div v-if=\"loading\" class=\"flex flex-col items-center justify-center\">\n        <SmartSpinner class=\"mb-4\" />\n        <span class=\"text-secondaryLight\">{{ t(\"state.loading\") }}</span>\n      </div>\n      <div\n        v-if=\"!loading && myShortcodes.length === 0\"\n        class=\"flex flex-col items-center justify-center p-4 text-secondaryLight\"\n      >\n        <img\n          :src=\"`/images/states/${colorMode.value}/add_files.svg`\"\n          loading=\"lazy\"\n          class=\"inline-flex flex-col object-contain object-center w-16 h-16 mb-8\"\n          :alt=\"`${t('empty.shortcodes')}`\"\n        />\n        <span class=\"mb-4 text-center\">\n          {{ t(\"empty.shortcodes\") }}\n        </span>\n      </div>\n      <div v-else-if=\"!loading\">\n        <div\n          class=\"hidden w-full border-t rounded-t bg-primaryLight lg:flex border-x border-dividerLight\"\n        >\n          <div class=\"flex w-full overflow-y-scroll\">\n            <div class=\"table-box\">\n              {{ t(\"shortcodes.short_code\") }}\n            </div>\n            <div class=\"table-box\">\n              {{ t(\"shortcodes.method\") }}\n            </div>\n            <div class=\"table-box\">\n              {{ t(\"shortcodes.url\") }}\n            </div>\n            <div class=\"table-box\">\n              {{ t(\"shortcodes.created_on\") }}\n            </div>\n            <div class=\"justify-center table-box\">\n              {{ t(\"shortcodes.actions\") }}\n            </div>\n          </div>\n        </div>\n        <div\n          class=\"flex flex-col items-center justify-between w-full overflow-y-scroll border rounded max-h-sm lg:rounded-t-none lg:divide-y border-dividerLight divide-dividerLight\"\n        >\n          <ProfileShortcode\n            v-for=\"(shortcode, shortcodeIndex) in myShortcodes\"\n            :key=\"`shortcode-${shortcodeIndex}`\"\n            :shortcode=\"shortcode\"\n            @delete-shortcode=\"deleteShortcode\"\n          />\n          <SmartIntersection\n            v-if=\"hasMoreShortcodes && myShortcodes.length > 0\"\n            @intersecting=\"loadMoreShortcodes()\"\n          >\n            <div v-if=\"adapterLoading\" class=\"flex flex-col items-center py-3\">\n              <SmartSpinner />\n            </div>\n          </SmartIntersection>\n        </div>\n      </div>\n      <div\n        v-if=\"!loading && adapterError\"\n        class=\"flex flex-col items-center py-4\"\n      >\n        <icon-lucide-help-circle class=\"mb-4 svg-icons\" />\n        {{ getErrorMessage(adapterError) }}\n      </div>\n    </div>\n  </section>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, watchEffect, computed } from \"vue\"\nimport { pipe } from \"fp-ts/function\"\nimport * as TE from \"fp-ts/TaskEither\"\nimport { GQLError } from \"~/helpers/backend/GQLClient\"\nimport { currentUser$ } from \"~/helpers/fb/auth\"\n\nimport { onAuthEvent, onLoggedIn } from \"@composables/auth\"\nimport { useReadonlyStream } from \"@composables/stream\"\nimport { useI18n } from \"@composables/i18n\"\nimport { useToast } from \"@composables/toast\"\nimport { useColorMode } from \"@composables/theming\"\nimport { usePageHead } from \"@composables/head\"\n\nimport ShortcodeListAdapter from \"~/helpers/shortcodes/ShortcodeListAdapter\"\nimport { deleteShortcode as backendDeleteShortcode } from \"~/helpers/backend/mutations/Shortcode\"\n\nconst t = useI18n()\nconst toast = useToast()\nconst colorMode = useColorMode()\n\nusePageHead({\n  title: computed(() => t(\"navigation.profile\")),\n})\n\nconst currentUser = useReadonlyStream(currentUser$, null)\n\nconst displayName = ref(currentUser.value?.displayName)\nwatchEffect(() => (displayName.value = currentUser.value?.displayName))\n\nconst emailAddress = ref(currentUser.value?.email)\nwatchEffect(() => (emailAddress.value = currentUser.value?.email))\n\nconst adapter = new ShortcodeListAdapter(true)\nconst adapterLoading = useReadonlyStream(adapter.loading$, false)\nconst adapterError = useReadonlyStream(adapter.error$, null)\nconst myShortcodes = useReadonlyStream(adapter.shortcodes$, [])\nconst hasMoreShortcodes = useReadonlyStream(adapter.hasMoreShortcodes$, true)\n\nconst loading = computed(\n  () => adapterLoading.value && myShortcodes.value.length === 0\n)\n\nonLoggedIn(() => {\n  adapter.initialize()\n})\n\nonAuthEvent((ev) => {\n  if (ev.event === \"logout\" && adapter.isInitialized()) {\n    adapter.dispose()\n    return\n  }\n})\n\nconst deleteShortcode = (codeID: string) => {\n  pipe(\n    backendDeleteShortcode(codeID),\n    TE.match(\n      (err: GQLError<string>) => {\n        toast.error(`${getErrorMessage(err)}`)\n      },\n      () => {\n        toast.success(`${t(\"shortcodes.deleted\")}`)\n      }\n    )\n  )()\n}\n\nconst loadMoreShortcodes = () => {\n  adapter.loadMore()\n}\n\nconst getErrorMessage = (err: GQLError<string>) => {\n  if (err.type === \"network_error\") {\n    return t(\"error.network_error\")\n  } else {\n    switch (err.error) {\n      case \"shortcode/not_found\":\n        return t(\"shortcodes.not_found\")\n      default:\n        return t(\"error.something_went_wrong\")\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.table-box {\n  @apply flex flex-1 items-center px-4 py-2 truncate;\n}\n</style>\n","import { runMutation } from \"../GQLClient\"\nimport {\n  DeleteUserDocument,\n  DeleteUserMutation,\n  DeleteUserMutationVariables,\n} from \"../graphql\"\n\ntype DeleteUserErrors = \"user/not_found\"\n\nexport const deleteUser = () =>\n  runMutation<\n    DeleteUserMutation,\n    DeleteUserMutationVariables,\n    DeleteUserErrors\n  >(DeleteUserDocument, {})\n","<template>\n  <section class=\"p-4\">\n    <h4 class=\"font-semibold text-secondaryDark\">\n      {{ t(\"settings.delete_account\") }}\n    </h4>\n    <div class=\"my-1 mb-4 text-secondaryLight\">\n      {{ t(\"settings.delete_account_description\") }}\n    </div>\n    <ButtonSecondary\n      filled\n      outline\n      :label=\"t('settings.delete_account')\"\n      type=\"submit\"\n      @click=\"showDeleteAccountModal = true\"\n    />\n    <SmartModal\n      v-if=\"showDeleteAccountModal\"\n      dialog\n      :title=\"t('settings.delete_account')\"\n      @close=\"showDeleteAccountModal = false\"\n    >\n      <template #body>\n        <div v-if=\"loading\" class=\"flex flex-col items-center justify-center\">\n          <SmartSpinner class=\"mb-4\" />\n          <span class=\"text-secondaryLight\">{{ t(\"state.loading\") }}</span>\n        </div>\n        <div\n          v-else-if=\"myTeams.length\"\n          class=\"flex flex-col p-4 space-y-2 border border-red-500 rounded-lg text-secondaryDark bg-error\"\n        >\n          <h2 class=\"font-bold text-red-500\">\n            {{ t(\"error.danger_zone\") }}\n          </h2>\n          <div>\n            {{ t(\"error.delete_account\") }}\n            <ul class=\"my-4 ml-8 space-y-2 list-disc\">\n              <li v-for=\"team in myTeams\" :key=\"team.id\">\n                {{ team.name }}\n              </li>\n            </ul>\n            <span class=\"font-semibold\">\n              {{ t(\"error.delete_account_description\") }}\n            </span>\n          </div>\n        </div>\n        <div v-else>\n          <div\n            class=\"flex flex-col p-4 mb-4 space-y-2 border border-red-500 rounded-lg text-secondaryDark bg-error\"\n          >\n            <h2 class=\"font-bold text-red-500\">\n              {{ t(\"error.danger_zone\") }}\n            </h2>\n            <div class=\"font-medium text-secondaryDark\">\n              {{ t(\"settings.delete_account_description\") }}\n            </div>\n          </div>\n          <div class=\"flex flex-col\">\n            <input\n              id=\"deleteUserAccount\"\n              v-model=\"userVerificationInput\"\n              class=\"input floating-input\"\n              placeholder=\" \"\n              type=\"text\"\n              autocomplete=\"off\"\n            />\n            <label for=\"deleteUserAccount\">\n              Type\n              <span class=\"font-bold\"> delete my account </span>\n              to confirm\n            </label>\n          </div>\n        </div>\n      </template>\n      <template #footer>\n        <span class=\"flex space-x-2\">\n          <ButtonPrimary\n            :label=\"t('settings.delete_account')\"\n            :loading=\"deletingUser\"\n            filled\n            outline\n            :disabled=\"\n              loading ||\n              myTeams.length > 0 ||\n              userVerificationInput !== 'delete my account'\n            \"\n            class=\"!bg-red-500 !hover:bg-red-600 !border-red-500 !hover:border-red-600\"\n            @click=\"deleteUserAccount\"\n          />\n          <ButtonSecondary\n            :label=\"t('action.cancel')\"\n            outline\n            filled\n            @click=\"showDeleteAccountModal = false\"\n          />\n        </span>\n      </template>\n    </SmartModal>\n  </section>\n</template>\n\n<script setup lang=\"ts\">\nimport { pipe } from \"fp-ts/function\"\nimport * as TE from \"fp-ts/TaskEither\"\nimport { ref, watch } from \"vue\"\nimport { GQLError, runGQLQuery } from \"~/helpers/backend/GQLClient\"\nimport * as E from \"fp-ts/Either\"\nimport { useRouter } from \"vue-router\"\nimport { useI18n } from \"~/composables/i18n\"\nimport { useToast } from \"~/composables/toast\"\nimport { GetMyTeamsDocument, GetMyTeamsQuery } from \"~/helpers/backend/graphql\"\nimport { deleteUser } from \"~/helpers/backend/mutations/Profile\"\nimport { signOutUser } from \"~/helpers/fb/auth\"\n\nconst t = useI18n()\nconst toast = useToast()\nconst router = useRouter()\n\nconst showDeleteAccountModal = ref(false)\nconst userVerificationInput = ref(\"\")\n\nconst loading = ref(true)\nconst myTeams = ref<GetMyTeamsQuery[\"myTeams\"]>([])\n\nwatch(showDeleteAccountModal, (isModalOpen) => {\n  if (isModalOpen) {\n    fetchMyTeams()\n  }\n})\n\nconst fetchMyTeams = async () => {\n  loading.value = true\n  const result = await runGQLQuery({\n    query: GetMyTeamsDocument,\n  })\n  loading.value = false\n\n  if (E.isLeft(result)) {\n    throw new Error(\n      `Failed fetching teams list: ${JSON.stringify(result.left)}`\n    )\n  }\n\n  myTeams.value = result.right.myTeams.filter((team) => {\n    return team.ownersCount === 1 && team.myRole === \"OWNER\"\n  })\n}\n\nconst deletingUser = ref(false)\n\nconst deleteUserAccount = async () => {\n  if (deletingUser.value) return\n  deletingUser.value = true\n\n  pipe(\n    deleteUser(),\n    TE.match(\n      (err: GQLError<string>) => {\n        deletingUser.value = false\n        toast.error(getErrorMessage(err))\n      },\n      () => {\n        deletingUser.value = false\n        showDeleteAccountModal.value = false\n        toast.success(t(\"settings.account_deleted\"))\n        signOutUser()\n        router.push(`/`)\n      }\n    )\n  )()\n}\n\nconst getErrorMessage = (err: GQLError<string>) => {\n  if (err.type === \"network_error\") {\n    return t(\"error.network_error\")\n  } else {\n    switch (err.error) {\n      case \"shortcode/not_found\":\n        return t(\"shortcodes.not_found\")\n      default:\n        return t(\"error.something_went_wrong\")\n    }\n  }\n}\n</script>\n","<template>\n  <div>\n    <div class=\"container\">\n      <div class=\"p-4\">\n        <div\n          v-if=\"loadingCurrentUser\"\n          class=\"flex flex-col items-center justify-center flex-1 p-4\"\n        >\n          <SmartSpinner class=\"mb-4\" />\n        </div>\n        <div\n          v-else-if=\"currentUser === null\"\n          class=\"flex flex-col items-center justify-center\"\n        >\n          <img\n            :src=\"`/images/states/${colorMode.value}/login.svg`\"\n            loading=\"lazy\"\n            class=\"inline-flex flex-col object-contain object-center w-24 h-24 my-4\"\n            :alt=\"`${t('empty.parameters')}`\"\n          />\n          <p class=\"pb-4 text-center text-secondaryLight\">\n            {{ t(\"empty.profile\") }}\n          </p>\n          <ButtonPrimary\n            :label=\"t('auth.login')\"\n            class=\"mb-4\"\n            @click=\"invokeAction('modals.login.toggle')\"\n          />\n        </div>\n        <div v-else class=\"space-y-8\">\n          <div\n            class=\"h-24 rounded bg-primaryLight -mb-11 md:h-32\"\n            style=\"background-image: url('/images/cover.svg')\"\n          ></div>\n          <div class=\"flex flex-col justify-between px-4 space-y-8 md:flex-row\">\n            <div class=\"flex items-end\">\n              <ProfilePicture\n                v-if=\"currentUser.photoURL\"\n                :url=\"currentUser.photoURL\"\n                :alt=\"\n                  currentUser.displayName || t('profile.default_displayname')\n                \"\n                class=\"ring-primary ring-4\"\n                size=\"16\"\n                rounded=\"lg\"\n              />\n              <ProfilePicture\n                v-else\n                :initial=\"currentUser.displayName || currentUser.email\"\n                rounded=\"lg\"\n                size=\"16\"\n                class=\"ring-primary ring-4\"\n              />\n              <div class=\"ml-4\">\n                <label class=\"heading\">\n                  {{\n                    currentUser.displayName ||\n                    t(\"profile.default_hopp_displayname\")\n                  }}\n                </label>\n                <p class=\"flex items-center text-secondaryLight\">\n                  {{ currentUser.email }}\n                  <icon-lucide-verified\n                    v-if=\"currentUser.emailVerified\"\n                    v-tippy=\"{ theme: 'tooltip' }\"\n                    :title=\"t('settings.verified_email')\"\n                    class=\"ml-2 text-green-500 svg-icons focus:outline-none cursor-help\"\n                  />\n                  <ButtonSecondary\n                    v-else\n                    :label=\"t('settings.verify_email')\"\n                    :icon=\"IconVerified\"\n                    class=\"px-1 py-0 ml-2\"\n                    :loading=\"verifyingEmailAddress\"\n                    @click=\"sendEmailVerification\"\n                  />\n                </p>\n              </div>\n            </div>\n            <div class=\"flex items-end space-x-2\">\n              <div>\n                <SmartItem\n                  to=\"/settings\"\n                  :icon=\"IconSettings\"\n                  :label=\"t('profile.app_settings')\"\n                  outline\n                />\n              </div>\n              <FirebaseLogout outline />\n            </div>\n          </div>\n          <SmartTabs\n            v-model=\"selectedProfileTab\"\n            styles=\"sticky overflow-x-auto flex-shrink-0 bg-primary top-0 z-10\"\n            render-inactive-tabs\n          >\n            <SmartTab :id=\"'sync'\" :label=\"t('settings.account')\">\n              <div class=\"grid grid-cols-1\">\n                <section class=\"p-4\">\n                  <h4 class=\"font-semibold text-secondaryDark\">\n                    {{ t(\"settings.profile\") }}\n                  </h4>\n                  <div class=\"my-1 text-secondaryLight\">\n                    {{ t(\"settings.profile_description\") }}\n                  </div>\n                  <div class=\"py-4\">\n                    <label for=\"displayName\">\n                      {{ t(\"settings.profile_name\") }}\n                    </label>\n                    <form\n                      class=\"flex mt-2 md:max-w-sm\"\n                      @submit.prevent=\"updateDisplayName\"\n                    >\n                      <input\n                        id=\"displayName\"\n                        v-model=\"displayName\"\n                        class=\"input\"\n                        :placeholder=\"`${t('settings.profile_name')}`\"\n                        type=\"text\"\n                        autocomplete=\"off\"\n                        required\n                      />\n                      <ButtonSecondary\n                        filled\n                        outline\n                        :label=\"t('action.save')\"\n                        class=\"ml-2 min-w-16\"\n                        type=\"submit\"\n                        :loading=\"updatingDisplayName\"\n                      />\n                    </form>\n                  </div>\n                  <div class=\"py-4\">\n                    <label for=\"emailAddress\">\n                      {{ t(\"settings.profile_email\") }}\n                    </label>\n                    <form\n                      class=\"flex mt-2 md:max-w-sm\"\n                      @submit.prevent=\"updateEmailAddress\"\n                    >\n                      <input\n                        id=\"emailAddress\"\n                        v-model=\"emailAddress\"\n                        class=\"input\"\n                        :placeholder=\"`${t('settings.profile_name')}`\"\n                        type=\"email\"\n                        autocomplete=\"off\"\n                        required\n                      />\n                      <ButtonSecondary\n                        filled\n                        outline\n                        :label=\"t('action.save')\"\n                        class=\"ml-2 min-w-16\"\n                        type=\"submit\"\n                        :loading=\"updatingEmailAddress\"\n                      />\n                    </form>\n                  </div>\n                </section>\n\n                <ProfileUserDelete />\n\n                <section class=\"p-4\">\n                  <h4 class=\"font-semibold text-secondaryDark\">\n                    {{ t(\"settings.sync\") }}\n                  </h4>\n                  <div class=\"my-1 text-secondaryLight\">\n                    {{ t(\"settings.sync_description\") }}\n                  </div>\n                  <div class=\"py-4 space-y-4\">\n                    <div class=\"flex items-center\">\n                      <SmartToggle\n                        :on=\"SYNC_COLLECTIONS\"\n                        @change=\"toggleSetting('syncCollections')\"\n                      >\n                        {{ t(\"settings.sync_collections\") }}\n                      </SmartToggle>\n                    </div>\n                    <div class=\"flex items-center\">\n                      <SmartToggle\n                        :on=\"SYNC_ENVIRONMENTS\"\n                        @change=\"toggleSetting('syncEnvironments')\"\n                      >\n                        {{ t(\"settings.sync_environments\") }}\n                      </SmartToggle>\n                    </div>\n                    <div class=\"flex items-center\">\n                      <SmartToggle\n                        :on=\"SYNC_HISTORY\"\n                        @change=\"toggleSetting('syncHistory')\"\n                      >\n                        {{ t(\"settings.sync_history\") }}\n                      </SmartToggle>\n                    </div>\n                  </div>\n                </section>\n\n                <ProfileShortcodes />\n              </div>\n            </SmartTab>\n            <SmartTab :id=\"'teams'\" :label=\"t('team.title')\">\n              <Teams :modal=\"false\" class=\"p-4\" />\n            </SmartTab>\n          </SmartTabs>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, watchEffect, computed } from \"vue\"\nimport {\n  currentUser$,\n  probableUser$,\n  setDisplayName,\n  setEmailAddress,\n  verifyEmailAddress,\n} from \"~/helpers/fb/auth\"\nimport { invokeAction } from \"~/helpers/actions\"\n\nimport { useReadonlyStream } from \"@composables/stream\"\nimport { useI18n } from \"@composables/i18n\"\nimport { useToast } from \"@composables/toast\"\nimport { useSetting } from \"@composables/settings\"\nimport { useColorMode } from \"@composables/theming\"\nimport { usePageHead } from \"@composables/head\"\n\nimport { toggleSetting } from \"~/newstore/settings\"\n\nimport IconVerified from \"~icons/lucide/verified\"\nimport IconSettings from \"~icons/lucide/settings\"\n\ntype ProfileTabs = \"sync\" | \"teams\"\n\nconst selectedProfileTab = ref<ProfileTabs>(\"sync\")\n\nconst t = useI18n()\nconst toast = useToast()\nconst colorMode = useColorMode()\n\nusePageHead({\n  title: computed(() => t(\"navigation.profile\")),\n})\n\nconst SYNC_COLLECTIONS = useSetting(\"syncCollections\")\nconst SYNC_ENVIRONMENTS = useSetting(\"syncEnvironments\")\nconst SYNC_HISTORY = useSetting(\"syncHistory\")\nconst currentUser = useReadonlyStream(currentUser$, null)\nconst probableUser = useReadonlyStream(probableUser$, null)\n\nconst loadingCurrentUser = computed(() => {\n  if (!probableUser.value) return false\n  else if (!currentUser.value) return true\n  else return false\n})\n\nconst displayName = ref(currentUser.value?.displayName)\nconst updatingDisplayName = ref(false)\nwatchEffect(() => (displayName.value = currentUser.value?.displayName))\n\nconst updateDisplayName = () => {\n  updatingDisplayName.value = true\n  setDisplayName(displayName.value as string)\n    .then(() => {\n      toast.success(`${t(\"profile.updated\")}`)\n    })\n    .catch(() => {\n      toast.error(`${t(\"error.something_went_wrong\")}`)\n    })\n    .finally(() => {\n      updatingDisplayName.value = false\n    })\n}\n\nconst emailAddress = ref(currentUser.value?.email)\nconst updatingEmailAddress = ref(false)\nwatchEffect(() => (emailAddress.value = currentUser.value?.email))\n\nconst updateEmailAddress = () => {\n  updatingEmailAddress.value = true\n  setEmailAddress(emailAddress.value as string)\n    .then(() => {\n      toast.success(`${t(\"profile.updated\")}`)\n    })\n    .catch(() => {\n      toast.error(`${t(\"error.something_went_wrong\")}`)\n    })\n    .finally(() => {\n      updatingEmailAddress.value = false\n    })\n}\n\nconst verifyingEmailAddress = ref(false)\n\nconst sendEmailVerification = () => {\n  verifyingEmailAddress.value = true\n  verifyEmailAddress()\n    .then(() => {\n      toast.success(`${t(\"profile.email_verification_mail\")}`)\n    })\n    .catch(() => {\n      toast.error(`${t(\"error.something_went_wrong\")}`)\n    })\n    .finally(() => {\n      verifyingEmailAddress.value = false\n    })\n}\n</script>\n"],"names":["t","useI18n","toast","useToast","deleteShortcode","codeID","emit","requestMethodLabels","timeStampRef","ref","copyIconRefs","refAutoReset","IconCopy","parseShortcodeRequest","computed","pipe","props","translateToNewRequest","requestLabelColor","RR.lookup","O.getOrElseW","dateStamp","shortDateTime","shortcodeBaseURL","copyShortcode","copyToClipboard","IconCheck","ShortcodeListAdapter","deferInit","__publicField","BehaviorSubject","_a","_b","_c","_d","forcedAttempt","lastCodeID","result","runGQLQuery","GetUserShortcodesDocument","E.isLeft","fetchedResult","BACKEND_PAGE_SIZE","results","userShortcodes","shortcode","codeId","newShortcodes","id","myShortcodeCreated$","myShortcodeCreatedSub","runAuthOnlyGQLSubscription","ShortcodeCreatedDocument","myShortcodesRevoked$","myShortcodeRevokedSub","ShortcodeDeletedDocument","colorMode","useColorMode","usePageHead","currentUser","useReadonlyStream","currentUser$","displayName","watchEffect","emailAddress","adapter","adapterLoading","adapterError","myShortcodes","hasMoreShortcodes","loading","onLoggedIn","onAuthEvent","ev","backendDeleteShortcode","TE.match","err","getErrorMessage","loadMoreShortcodes","deleteUser","runMutation","DeleteUserDocument","router","useRouter","showDeleteAccountModal","userVerificationInput","myTeams","watch","isModalOpen","fetchMyTeams","GetMyTeamsDocument","team","deletingUser","deleteUserAccount","signOutUser","selectedProfileTab","SYNC_COLLECTIONS","useSetting","SYNC_ENVIRONMENTS","SYNC_HISTORY","probableUser","probableUser$","loadingCurrentUser","updatingDisplayName","updateDisplayName","setDisplayName","updatingEmailAddress","updateEmailAddress","setEmailAddress","verifyingEmailAddress","sendEmailVerification","verifyEmailAddress"],"mappings":"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"}