{"version":3,"file":"realtime.94bc65eb.js","sources":["../../../hoppscotch-common/src/pages/realtime.vue"],"sourcesContent":["<template>\n  <SmartTabs\n    v-model=\"currentTab\"\n    styles=\"sticky overflow-x-auto flex-shrink-0 bg-primary top-0 z-10\"\n    content-styles=\"h-[calc(100%-var(--sidebar-primary-sticky-fold)-1px)] !flex\"\n  >\n    <SmartTab\n      v-for=\"{ target, title } in REALTIME_NAVIGATION\"\n      :id=\"target\"\n      :key=\"target\"\n      :label=\"title\"\n    >\n      <RouterView />\n    </SmartTab>\n  </SmartTabs>\n</template>\n\n<script setup lang=\"ts\">\nimport { watch, ref, computed } from \"vue\"\nimport { RouterView, useRouter, useRoute } from \"vue-router\"\nimport { usePageHead } from \"~/composables/head\"\nimport { useI18n } from \"~/composables/i18n\"\n\nconst t = useI18n()\nconst router = useRouter()\nconst route = useRoute()\n\nconst REALTIME_NAVIGATION = [\n  {\n    target: \"websocket\",\n    title: t(\"tab.websocket\"),\n  },\n  {\n    target: \"sse\",\n    title: t(\"tab.sse\"),\n  },\n  {\n    target: \"socketio\",\n    title: t(\"tab.socketio\"),\n  },\n  {\n    target: \"mqtt\",\n    title: t(\"tab.mqtt\"),\n  },\n] as const\n\ntype RealtimeNavTab = typeof REALTIME_NAVIGATION[number][\"target\"]\n\nconst currentTab = ref<RealtimeNavTab>(\"websocket\")\n\nusePageHead({\n  title: computed(() => t(`tab.${currentTab.value}`)),\n})\n\n// Update the router when the tab is updated\nwatch(currentTab, (newTab) => {\n  router.push(`/realtime/${newTab}`)\n})\n\n// Update the tab when router is upgrad\nwatch(\n  route,\n  (updateRoute) => {\n    const path = updateRoute.path\n\n    if (updateRoute.name?.toString() === \"realtime\") {\n      router.replace(`/realtime/websocket`)\n      return\n    }\n\n    const destination: string | undefined = path.split(\"realtime/\")[1]\n\n    const target = REALTIME_NAVIGATION.find(\n      ({ target }) => target === destination\n    )?.target\n\n    if (target) currentTab.value = target\n  },\n  { immediate: true }\n)\n</script>\n"],"names":["t","useI18n","router","useRouter","route","useRoute","REALTIME_NAVIGATION","currentTab","ref","usePageHead","computed","watch","newTab","updateRoute","path","_a","destination","target","_b","target2"],"mappings":"kRAuBA,MAAAA,EAAAC,IACAC,EAAAC,IACAC,EAAAC,IAEAC,EAAA,CAA4B,CAC1B,OAAA,YACU,MAAAN,EAAA,eAAA,CACgB,EAC1B,CACA,OAAA,MACU,MAAAA,EAAA,SAAA,CACU,EACpB,CACA,OAAA,WACU,MAAAA,EAAA,cAAA,CACe,EACzB,CACA,OAAA,OACU,MAAAA,EAAA,UAAA,CACW,CACrB,EAKFO,EAAAC,EAAA,WAAA,EAEAC,OAAAA,EAAA,CAAY,MAAAC,EAAA,IAAAV,EAAA,OAAAO,EAAA,OAAA,CAAA,CACwC,CAAA,EAIpDI,EAAAJ,EAAAK,GAAA,CACEV,EAAA,KAAA,aAAAU,GAAA,CAAiC,CAAA,EAInCD,EAAAP,EACES,GAAA,SAEE,MAAAC,EAAAD,EAAA,KAEA,KAAAE,EAAAF,EAAA,OAAA,YAAAE,EAAA,cAAA,WAAA,CACEb,EAAA,QAAA,qBAAA,EACA,MAAA,CAGF,MAAAc,EAAAF,EAAA,MAAA,WAAA,EAAA,GAEAG,GAAAC,EAAAZ,EAAA,KAAmC,CAAA,CAAA,OAAAa,CAAA,IAAAA,IAAAH,CACN,IAD7B,YAAAE,EAC6B,OAG7BD,IAAYV,EAAA,MAAAU,EAAmB,EACjC,CAAA,UAAA,EAAA,CACkB"}