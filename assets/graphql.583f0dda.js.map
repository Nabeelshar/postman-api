{"version":3,"file":"graphql.583f0dda.js","sources":["../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/polyfills/find.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/polyfills/objectValues.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/error/locatedError.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/utilities/assertValidName.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/polyfills/objectEntries.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/jsutils/keyMap.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/jsutils/mapValue.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/jsutils/toObjMap.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/jsutils/keyValMap.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/jsutils/didYouMean.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/jsutils/identityFunc.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/jsutils/naturalCompare.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/jsutils/suggestionList.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/utilities/valueFromASTUntyped.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/type/definition.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/utilities/typeComparators.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/polyfills/arrayFrom.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/polyfills/isFinite.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/jsutils/safeArrayFrom.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/polyfills/isInteger.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/type/scalars.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/utilities/astFromValue.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/type/introspection.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/type/directives.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/type/schema.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/type/validate.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/utilities/typeFromAST.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/utilities/TypeInfo.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/language/predicates.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/validation/rules/ExecutableDefinitionsRule.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/validation/rules/UniqueOperationNamesRule.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/validation/rules/LoneAnonymousOperationRule.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/validation/rules/SingleFieldSubscriptionsRule.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/validation/rules/KnownTypeNamesRule.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/validation/rules/FragmentsOnCompositeTypesRule.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/validation/rules/VariablesAreInputTypesRule.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/validation/rules/ScalarLeafsRule.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/validation/rules/FieldsOnCorrectTypeRule.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/validation/rules/UniqueFragmentNamesRule.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/validation/rules/KnownFragmentNamesRule.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/validation/rules/NoUnusedFragmentsRule.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/validation/rules/PossibleFragmentSpreadsRule.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/validation/rules/NoFragmentCyclesRule.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/validation/rules/UniqueVariableNamesRule.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/validation/rules/NoUndefinedVariablesRule.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/validation/rules/NoUnusedVariablesRule.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/validation/rules/KnownDirectivesRule.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/validation/rules/UniqueDirectivesPerLocationRule.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/validation/rules/KnownArgumentNamesRule.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/validation/rules/UniqueArgumentNamesRule.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/validation/rules/ValuesOfCorrectTypeRule.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/validation/rules/ProvidedRequiredArgumentsRule.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/validation/rules/VariablesInAllowedPositionRule.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/validation/rules/OverlappingFieldsCanBeMergedRule.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/validation/rules/UniqueInputFieldNamesRule.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/validation/rules/LoneSchemaDefinitionRule.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/validation/rules/UniqueOperationTypesRule.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/validation/rules/UniqueTypeNamesRule.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/validation/rules/UniqueEnumValueNamesRule.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/validation/rules/UniqueFieldDefinitionNamesRule.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/validation/rules/UniqueDirectiveNamesRule.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/validation/rules/PossibleTypeExtensionsRule.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/validation/specifiedRules.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/validation/ValidationContext.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/validation/validate.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/utilities/valueFromAST.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/utilities/getIntrospectionQuery.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/utilities/buildClientSchema.mjs","../../../../node_modules/.pnpm/graphql@15.8.0/node_modules/graphql/utilities/printSchema.mjs","../../../hoppscotch-common/src/components/graphql/TypeLink.vue","../../../hoppscotch-common/src/components/graphql/TypeLink.vue","../../../hoppscotch-common/src/components/graphql/Field.vue","../../../hoppscotch-common/src/components/graphql/Type.vue","../../../hoppscotch-common/src/components/graphql/Sidebar.vue","../../../hoppscotch-common/src/components/graphql/Response.vue","../../../hoppscotch-common/src/components/graphql/Authorization.vue","../../../hoppscotch-common/src/helpers/editor/linting/gqlQuery.ts","../../../../node_modules/.pnpm/graphql-language-service-interface@2.10.2_h5eoywvcjsa4emif44kddonyyu/node_modules/graphql-language-service-interface/esm/autocompleteUtils.js","../../../../node_modules/.pnpm/vscode-languageserver-types@3.17.1/node_modules/vscode-languageserver-types/lib/esm/main.js","../../../../node_modules/.pnpm/graphql-language-service-parser@1.10.4_h5eoywvcjsa4emif44kddonyyu/node_modules/graphql-language-service-parser/esm/CharacterStream.js","../../../../node_modules/.pnpm/graphql-language-service-parser@1.10.4_h5eoywvcjsa4emif44kddonyyu/node_modules/graphql-language-service-parser/esm/RuleHelpers.js","../../../../node_modules/.pnpm/graphql-language-service-parser@1.10.4_h5eoywvcjsa4emif44kddonyyu/node_modules/graphql-language-service-parser/esm/Rules.js","../../../../node_modules/.pnpm/graphql-language-service-parser@1.10.4_h5eoywvcjsa4emif44kddonyyu/node_modules/graphql-language-service-parser/esm/onlineParser.js","../../../../node_modules/.pnpm/graphql-language-service-parser@1.10.4_h5eoywvcjsa4emif44kddonyyu/node_modules/graphql-language-service-parser/esm/types.js","../../../../node_modules/.pnpm/graphql-language-service-interface@2.10.2_h5eoywvcjsa4emif44kddonyyu/node_modules/graphql-language-service-interface/esm/getAutocompleteSuggestions.js","../../../../node_modules/.pnpm/nullthrows@1.1.1/node_modules/nullthrows/nullthrows.js","../../../../node_modules/.pnpm/graphql-language-service-interface@2.10.2_h5eoywvcjsa4emif44kddonyyu/node_modules/graphql-language-service-interface/esm/getDefinition.js","../../../../node_modules/.pnpm/graphql-language-service-interface@2.10.2_h5eoywvcjsa4emif44kddonyyu/node_modules/graphql-language-service-interface/esm/GraphQLLanguageService.js","../../../hoppscotch-common/src/helpers/editor/completion/gqlQuery.ts","../../../hoppscotch-common/src/components/graphql/RequestOptions.vue","../../../hoppscotch-common/src/components/graphql/Request.vue","../../../hoppscotch-common/src/helpers/GQLConnection.ts","../../../hoppscotch-common/src/pages/graphql.vue"],"sourcesContent":["/* eslint-disable no-redeclare */\n// $FlowFixMe[name-already-bound]\nvar find = Array.prototype.find ? function (list, predicate) {\n  return Array.prototype.find.call(list, predicate);\n} : function (list, predicate) {\n  for (var _i2 = 0; _i2 < list.length; _i2++) {\n    var value = list[_i2];\n\n    if (predicate(value)) {\n      return value;\n    }\n  }\n};\nexport default find;\n","/* eslint-disable no-redeclare */\n// $FlowFixMe[name-already-bound] workaround for: https://github.com/facebook/flow/issues/4441\nvar objectValues = Object.values || function (obj) {\n  return Object.keys(obj).map(function (key) {\n    return obj[key];\n  });\n};\n\nexport default objectValues;\n","import inspect from \"../jsutils/inspect.mjs\";\nimport { GraphQLError } from \"./GraphQLError.mjs\";\n/**\n * Given an arbitrary value, presumably thrown while attempting to execute a\n * GraphQL operation, produce a new GraphQLError aware of the location in the\n * document responsible for the original Error.\n */\n\nexport function locatedError(rawOriginalError, nodes, path) {\n  var _nodes;\n\n  // Sometimes a non-error is thrown, wrap it as an Error instance to ensure a consistent Error interface.\n  var originalError = rawOriginalError instanceof Error ? rawOriginalError : new Error('Unexpected error value: ' + inspect(rawOriginalError)); // Note: this uses a brand-check to support GraphQL errors originating from other contexts.\n\n  if (Array.isArray(originalError.path)) {\n    return originalError;\n  }\n\n  return new GraphQLError(originalError.message, (_nodes = originalError.nodes) !== null && _nodes !== void 0 ? _nodes : nodes, originalError.source, originalError.positions, path, originalError);\n}\n","import devAssert from \"../jsutils/devAssert.mjs\";\nimport { GraphQLError } from \"../error/GraphQLError.mjs\";\nvar NAME_RX = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n/**\n * Upholds the spec rules about naming.\n */\n\nexport function assertValidName(name) {\n  var error = isValidNameError(name);\n\n  if (error) {\n    throw error;\n  }\n\n  return name;\n}\n/**\n * Returns an Error if a name is invalid.\n */\n\nexport function isValidNameError(name) {\n  typeof name === 'string' || devAssert(0, 'Expected name to be a string.');\n\n  if (name.length > 1 && name[0] === '_' && name[1] === '_') {\n    return new GraphQLError(\"Name \\\"\".concat(name, \"\\\" must not begin with \\\"__\\\", which is reserved by GraphQL introspection.\"));\n  }\n\n  if (!NAME_RX.test(name)) {\n    return new GraphQLError(\"Names must match /^[_a-zA-Z][_a-zA-Z0-9]*$/ but \\\"\".concat(name, \"\\\" does not.\"));\n  }\n}\n","/* eslint-disable no-redeclare */\n// $FlowFixMe[name-already-bound] workaround for: https://github.com/facebook/flow/issues/4441\nvar objectEntries = Object.entries || function (obj) {\n  return Object.keys(obj).map(function (key) {\n    return [key, obj[key]];\n  });\n};\n\nexport default objectEntries;\n","/**\n * Creates a keyed JS object from an array, given a function to produce the keys\n * for each value in the array.\n *\n * This provides a convenient lookup for the array items if the key function\n * produces unique results.\n *\n *     const phoneBook = [\n *       { name: 'Jon', num: '555-1234' },\n *       { name: 'Jenny', num: '867-5309' }\n *     ]\n *\n *     // { Jon: { name: 'Jon', num: '555-1234' },\n *     //   Jenny: { name: 'Jenny', num: '867-5309' } }\n *     const entriesByName = keyMap(\n *       phoneBook,\n *       entry => entry.name\n *     )\n *\n *     // { name: 'Jenny', num: '857-6309' }\n *     const jennyEntry = entriesByName['Jenny']\n *\n */\nexport default function keyMap(list, keyFn) {\n  return list.reduce(function (map, item) {\n    map[keyFn(item)] = item;\n    return map;\n  }, Object.create(null));\n}\n","import objectEntries from \"../polyfills/objectEntries.mjs\";\n\n/**\n * Creates an object map with the same keys as `map` and values generated by\n * running each value of `map` thru `fn`.\n */\nexport default function mapValue(map, fn) {\n  var result = Object.create(null);\n\n  for (var _i2 = 0, _objectEntries2 = objectEntries(map); _i2 < _objectEntries2.length; _i2++) {\n    var _ref2 = _objectEntries2[_i2];\n    var _key = _ref2[0];\n    var _value = _ref2[1];\n    result[_key] = fn(_value, _key);\n  }\n\n  return result;\n}\n","import objectEntries from \"../polyfills/objectEntries.mjs\";\nexport default function toObjMap(obj) {\n  /* eslint-enable no-redeclare */\n  if (Object.getPrototypeOf(obj) === null) {\n    return obj;\n  }\n\n  var map = Object.create(null);\n\n  for (var _i2 = 0, _objectEntries2 = objectEntries(obj); _i2 < _objectEntries2.length; _i2++) {\n    var _ref2 = _objectEntries2[_i2];\n    var key = _ref2[0];\n    var value = _ref2[1];\n    map[key] = value;\n  }\n\n  return map;\n}\n","/**\n * Creates a keyed JS object from an array, given a function to produce the keys\n * and a function to produce the values from each item in the array.\n *\n *     const phoneBook = [\n *       { name: 'Jon', num: '555-1234' },\n *       { name: 'Jenny', num: '867-5309' }\n *     ]\n *\n *     // { Jon: '555-1234', Jenny: '867-5309' }\n *     const phonesByName = keyValMap(\n *       phoneBook,\n *       entry => entry.name,\n *       entry => entry.num\n *     )\n *\n */\nexport default function keyValMap(list, keyFn, valFn) {\n  return list.reduce(function (map, item) {\n    map[keyFn(item)] = valFn(item);\n    return map;\n  }, Object.create(null));\n}\n","var MAX_SUGGESTIONS = 5;\n/**\n * Given [ A, B, C ] return ' Did you mean A, B, or C?'.\n */\n\n// eslint-disable-next-line no-redeclare\nexport default function didYouMean(firstArg, secondArg) {\n  var _ref = typeof firstArg === 'string' ? [firstArg, secondArg] : [undefined, firstArg],\n      subMessage = _ref[0],\n      suggestionsArg = _ref[1];\n\n  var message = ' Did you mean ';\n\n  if (subMessage) {\n    message += subMessage + ' ';\n  }\n\n  var suggestions = suggestionsArg.map(function (x) {\n    return \"\\\"\".concat(x, \"\\\"\");\n  });\n\n  switch (suggestions.length) {\n    case 0:\n      return '';\n\n    case 1:\n      return message + suggestions[0] + '?';\n\n    case 2:\n      return message + suggestions[0] + ' or ' + suggestions[1] + '?';\n  }\n\n  var selected = suggestions.slice(0, MAX_SUGGESTIONS);\n  var lastItem = selected.pop();\n  return message + selected.join(', ') + ', or ' + lastItem + '?';\n}\n","/**\n * Returns the first argument it receives.\n */\nexport default function identityFunc(x) {\n  return x;\n}\n","/**\n * Returns a number indicating whether a reference string comes before, or after,\n * or is the same as the given string in natural sort order.\n *\n * See: https://en.wikipedia.org/wiki/Natural_sort_order\n *\n */\nexport default function naturalCompare(aStr, bStr) {\n  var aIdx = 0;\n  var bIdx = 0;\n\n  while (aIdx < aStr.length && bIdx < bStr.length) {\n    var aChar = aStr.charCodeAt(aIdx);\n    var bChar = bStr.charCodeAt(bIdx);\n\n    if (isDigit(aChar) && isDigit(bChar)) {\n      var aNum = 0;\n\n      do {\n        ++aIdx;\n        aNum = aNum * 10 + aChar - DIGIT_0;\n        aChar = aStr.charCodeAt(aIdx);\n      } while (isDigit(aChar) && aNum > 0);\n\n      var bNum = 0;\n\n      do {\n        ++bIdx;\n        bNum = bNum * 10 + bChar - DIGIT_0;\n        bChar = bStr.charCodeAt(bIdx);\n      } while (isDigit(bChar) && bNum > 0);\n\n      if (aNum < bNum) {\n        return -1;\n      }\n\n      if (aNum > bNum) {\n        return 1;\n      }\n    } else {\n      if (aChar < bChar) {\n        return -1;\n      }\n\n      if (aChar > bChar) {\n        return 1;\n      }\n\n      ++aIdx;\n      ++bIdx;\n    }\n  }\n\n  return aStr.length - bStr.length;\n}\nvar DIGIT_0 = 48;\nvar DIGIT_9 = 57;\n\nfunction isDigit(code) {\n  return !isNaN(code) && DIGIT_0 <= code && code <= DIGIT_9;\n}\n","import naturalCompare from \"./naturalCompare.mjs\";\n/**\n * Given an invalid input string and a list of valid options, returns a filtered\n * list of valid options sorted based on their similarity with the input.\n */\n\nexport default function suggestionList(input, options) {\n  var optionsByDistance = Object.create(null);\n  var lexicalDistance = new LexicalDistance(input);\n  var threshold = Math.floor(input.length * 0.4) + 1;\n\n  for (var _i2 = 0; _i2 < options.length; _i2++) {\n    var option = options[_i2];\n    var distance = lexicalDistance.measure(option, threshold);\n\n    if (distance !== undefined) {\n      optionsByDistance[option] = distance;\n    }\n  }\n\n  return Object.keys(optionsByDistance).sort(function (a, b) {\n    var distanceDiff = optionsByDistance[a] - optionsByDistance[b];\n    return distanceDiff !== 0 ? distanceDiff : naturalCompare(a, b);\n  });\n}\n/**\n * Computes the lexical distance between strings A and B.\n *\n * The \"distance\" between two strings is given by counting the minimum number\n * of edits needed to transform string A into string B. An edit can be an\n * insertion, deletion, or substitution of a single character, or a swap of two\n * adjacent characters.\n *\n * Includes a custom alteration from Damerau-Levenshtein to treat case changes\n * as a single edit which helps identify mis-cased values with an edit distance\n * of 1.\n *\n * This distance can be useful for detecting typos in input or sorting\n */\n\nvar LexicalDistance = /*#__PURE__*/function () {\n  function LexicalDistance(input) {\n    this._input = input;\n    this._inputLowerCase = input.toLowerCase();\n    this._inputArray = stringToArray(this._inputLowerCase);\n    this._rows = [new Array(input.length + 1).fill(0), new Array(input.length + 1).fill(0), new Array(input.length + 1).fill(0)];\n  }\n\n  var _proto = LexicalDistance.prototype;\n\n  _proto.measure = function measure(option, threshold) {\n    if (this._input === option) {\n      return 0;\n    }\n\n    var optionLowerCase = option.toLowerCase(); // Any case change counts as a single edit\n\n    if (this._inputLowerCase === optionLowerCase) {\n      return 1;\n    }\n\n    var a = stringToArray(optionLowerCase);\n    var b = this._inputArray;\n\n    if (a.length < b.length) {\n      var tmp = a;\n      a = b;\n      b = tmp;\n    }\n\n    var aLength = a.length;\n    var bLength = b.length;\n\n    if (aLength - bLength > threshold) {\n      return undefined;\n    }\n\n    var rows = this._rows;\n\n    for (var j = 0; j <= bLength; j++) {\n      rows[0][j] = j;\n    }\n\n    for (var i = 1; i <= aLength; i++) {\n      var upRow = rows[(i - 1) % 3];\n      var currentRow = rows[i % 3];\n      var smallestCell = currentRow[0] = i;\n\n      for (var _j = 1; _j <= bLength; _j++) {\n        var cost = a[i - 1] === b[_j - 1] ? 0 : 1;\n        var currentCell = Math.min(upRow[_j] + 1, // delete\n        currentRow[_j - 1] + 1, // insert\n        upRow[_j - 1] + cost // substitute\n        );\n\n        if (i > 1 && _j > 1 && a[i - 1] === b[_j - 2] && a[i - 2] === b[_j - 1]) {\n          // transposition\n          var doubleDiagonalCell = rows[(i - 2) % 3][_j - 2];\n          currentCell = Math.min(currentCell, doubleDiagonalCell + 1);\n        }\n\n        if (currentCell < smallestCell) {\n          smallestCell = currentCell;\n        }\n\n        currentRow[_j] = currentCell;\n      } // Early exit, since distance can't go smaller than smallest element of the previous row.\n\n\n      if (smallestCell > threshold) {\n        return undefined;\n      }\n    }\n\n    var distance = rows[aLength % 3][bLength];\n    return distance <= threshold ? distance : undefined;\n  };\n\n  return LexicalDistance;\n}();\n\nfunction stringToArray(str) {\n  var strLength = str.length;\n  var array = new Array(strLength);\n\n  for (var i = 0; i < strLength; ++i) {\n    array[i] = str.charCodeAt(i);\n  }\n\n  return array;\n}\n","import inspect from \"../jsutils/inspect.mjs\";\nimport invariant from \"../jsutils/invariant.mjs\";\nimport keyValMap from \"../jsutils/keyValMap.mjs\";\nimport { Kind } from \"../language/kinds.mjs\";\n\n/**\n * Produces a JavaScript value given a GraphQL Value AST.\n *\n * Unlike `valueFromAST()`, no type is provided. The resulting JavaScript value\n * will reflect the provided GraphQL value AST.\n *\n * | GraphQL Value        | JavaScript Value |\n * | -------------------- | ---------------- |\n * | Input Object         | Object           |\n * | List                 | Array            |\n * | Boolean              | Boolean          |\n * | String / Enum        | String           |\n * | Int / Float          | Number           |\n * | Null                 | null             |\n *\n */\nexport function valueFromASTUntyped(valueNode, variables) {\n  switch (valueNode.kind) {\n    case Kind.NULL:\n      return null;\n\n    case Kind.INT:\n      return parseInt(valueNode.value, 10);\n\n    case Kind.FLOAT:\n      return parseFloat(valueNode.value);\n\n    case Kind.STRING:\n    case Kind.ENUM:\n    case Kind.BOOLEAN:\n      return valueNode.value;\n\n    case Kind.LIST:\n      return valueNode.values.map(function (node) {\n        return valueFromASTUntyped(node, variables);\n      });\n\n    case Kind.OBJECT:\n      return keyValMap(valueNode.fields, function (field) {\n        return field.name.value;\n      }, function (field) {\n        return valueFromASTUntyped(field.value, variables);\n      });\n\n    case Kind.VARIABLE:\n      return variables === null || variables === void 0 ? void 0 : variables[valueNode.name.value];\n  } // istanbul ignore next (Not reachable. All possible value nodes have been considered)\n\n\n  false || invariant(0, 'Unexpected value node: ' + inspect(valueNode));\n}\n","function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport objectEntries from \"../polyfills/objectEntries.mjs\";\nimport { SYMBOL_TO_STRING_TAG } from \"../polyfills/symbols.mjs\";\nimport inspect from \"../jsutils/inspect.mjs\";\nimport keyMap from \"../jsutils/keyMap.mjs\";\nimport mapValue from \"../jsutils/mapValue.mjs\";\nimport toObjMap from \"../jsutils/toObjMap.mjs\";\nimport devAssert from \"../jsutils/devAssert.mjs\";\nimport keyValMap from \"../jsutils/keyValMap.mjs\";\nimport instanceOf from \"../jsutils/instanceOf.mjs\";\nimport didYouMean from \"../jsutils/didYouMean.mjs\";\nimport isObjectLike from \"../jsutils/isObjectLike.mjs\";\nimport identityFunc from \"../jsutils/identityFunc.mjs\";\nimport defineInspect from \"../jsutils/defineInspect.mjs\";\nimport suggestionList from \"../jsutils/suggestionList.mjs\";\nimport { GraphQLError } from \"../error/GraphQLError.mjs\";\nimport { Kind } from \"../language/kinds.mjs\";\nimport { print } from \"../language/printer.mjs\";\nimport { valueFromASTUntyped } from \"../utilities/valueFromASTUntyped.mjs\";\nexport function isType(type) {\n  return isScalarType(type) || isObjectType(type) || isInterfaceType(type) || isUnionType(type) || isEnumType(type) || isInputObjectType(type) || isListType(type) || isNonNullType(type);\n}\nexport function assertType(type) {\n  if (!isType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL type.\"));\n  }\n\n  return type;\n}\n/**\n * There are predicates for each kind of GraphQL type.\n */\n\n// eslint-disable-next-line no-redeclare\nexport function isScalarType(type) {\n  return instanceOf(type, GraphQLScalarType);\n}\nexport function assertScalarType(type) {\n  if (!isScalarType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL Scalar type.\"));\n  }\n\n  return type;\n}\n// eslint-disable-next-line no-redeclare\nexport function isObjectType(type) {\n  return instanceOf(type, GraphQLObjectType);\n}\nexport function assertObjectType(type) {\n  if (!isObjectType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL Object type.\"));\n  }\n\n  return type;\n}\n// eslint-disable-next-line no-redeclare\nexport function isInterfaceType(type) {\n  return instanceOf(type, GraphQLInterfaceType);\n}\nexport function assertInterfaceType(type) {\n  if (!isInterfaceType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL Interface type.\"));\n  }\n\n  return type;\n}\n// eslint-disable-next-line no-redeclare\nexport function isUnionType(type) {\n  return instanceOf(type, GraphQLUnionType);\n}\nexport function assertUnionType(type) {\n  if (!isUnionType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL Union type.\"));\n  }\n\n  return type;\n}\n// eslint-disable-next-line no-redeclare\nexport function isEnumType(type) {\n  return instanceOf(type, GraphQLEnumType);\n}\nexport function assertEnumType(type) {\n  if (!isEnumType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL Enum type.\"));\n  }\n\n  return type;\n}\n// eslint-disable-next-line no-redeclare\nexport function isInputObjectType(type) {\n  return instanceOf(type, GraphQLInputObjectType);\n}\nexport function assertInputObjectType(type) {\n  if (!isInputObjectType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL Input Object type.\"));\n  }\n\n  return type;\n}\n// eslint-disable-next-line no-redeclare\nexport function isListType(type) {\n  return instanceOf(type, GraphQLList);\n}\nexport function assertListType(type) {\n  if (!isListType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL List type.\"));\n  }\n\n  return type;\n}\n// eslint-disable-next-line no-redeclare\nexport function isNonNullType(type) {\n  return instanceOf(type, GraphQLNonNull);\n}\nexport function assertNonNullType(type) {\n  if (!isNonNullType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL Non-Null type.\"));\n  }\n\n  return type;\n}\n/**\n * These types may be used as input types for arguments and directives.\n */\n\nexport function isInputType(type) {\n  return isScalarType(type) || isEnumType(type) || isInputObjectType(type) || isWrappingType(type) && isInputType(type.ofType);\n}\nexport function assertInputType(type) {\n  if (!isInputType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL input type.\"));\n  }\n\n  return type;\n}\n/**\n * These types may be used as output types as the result of fields.\n */\n\nexport function isOutputType(type) {\n  return isScalarType(type) || isObjectType(type) || isInterfaceType(type) || isUnionType(type) || isEnumType(type) || isWrappingType(type) && isOutputType(type.ofType);\n}\nexport function assertOutputType(type) {\n  if (!isOutputType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL output type.\"));\n  }\n\n  return type;\n}\n/**\n * These types may describe types which may be leaf values.\n */\n\nexport function isLeafType(type) {\n  return isScalarType(type) || isEnumType(type);\n}\nexport function assertLeafType(type) {\n  if (!isLeafType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL leaf type.\"));\n  }\n\n  return type;\n}\n/**\n * These types may describe the parent context of a selection set.\n */\n\nexport function isCompositeType(type) {\n  return isObjectType(type) || isInterfaceType(type) || isUnionType(type);\n}\nexport function assertCompositeType(type) {\n  if (!isCompositeType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL composite type.\"));\n  }\n\n  return type;\n}\n/**\n * These types may describe the parent context of a selection set.\n */\n\nexport function isAbstractType(type) {\n  return isInterfaceType(type) || isUnionType(type);\n}\nexport function assertAbstractType(type) {\n  if (!isAbstractType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL abstract type.\"));\n  }\n\n  return type;\n}\n/**\n * List Type Wrapper\n *\n * A list is a wrapping type which points to another type.\n * Lists are often created within the context of defining the fields of\n * an object type.\n *\n * Example:\n *\n *     const PersonType = new GraphQLObjectType({\n *       name: 'Person',\n *       fields: () => ({\n *         parents: { type: new GraphQLList(PersonType) },\n *         children: { type: new GraphQLList(PersonType) },\n *       })\n *     })\n *\n */\n// FIXME: workaround to fix issue with Babel parser\n\n/* ::\ndeclare class GraphQLList<+T: GraphQLType> {\n  +ofType: T;\n  static <T>(ofType: T): GraphQLList<T>;\n  // Note: constructors cannot be used for covariant types. Drop the \"new\".\n  constructor(ofType: GraphQLType): void;\n}\n*/\n\nexport function GraphQLList(ofType) {\n  // istanbul ignore else (to be removed in v16.0.0)\n  if (this instanceof GraphQLList) {\n    this.ofType = assertType(ofType);\n  } else {\n    return new GraphQLList(ofType);\n  }\n} // Need to cast through any to alter the prototype.\n\nGraphQLList.prototype.toString = function toString() {\n  return '[' + String(this.ofType) + ']';\n};\n\nGraphQLList.prototype.toJSON = function toJSON() {\n  return this.toString();\n};\n\nObject.defineProperty(GraphQLList.prototype, SYMBOL_TO_STRING_TAG, {\n  get: function get() {\n    return 'GraphQLList';\n  }\n}); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(GraphQLList);\n/**\n * Non-Null Type Wrapper\n *\n * A non-null is a wrapping type which points to another type.\n * Non-null types enforce that their values are never null and can ensure\n * an error is raised if this ever occurs during a request. It is useful for\n * fields which you can make a strong guarantee on non-nullability, for example\n * usually the id field of a database row will never be null.\n *\n * Example:\n *\n *     const RowType = new GraphQLObjectType({\n *       name: 'Row',\n *       fields: () => ({\n *         id: { type: new GraphQLNonNull(GraphQLString) },\n *       })\n *     })\n *\n * Note: the enforcement of non-nullability occurs within the executor.\n */\n// FIXME: workaround to fix issue with Babel parser\n\n/* ::\ndeclare class GraphQLNonNull<+T: GraphQLNullableType> {\n  +ofType: T;\n  static <T>(ofType: T): GraphQLNonNull<T>;\n  // Note: constructors cannot be used for covariant types. Drop the \"new\".\n  constructor(ofType: GraphQLType): void;\n}\n*/\n\nexport function GraphQLNonNull(ofType) {\n  // istanbul ignore else (to be removed in v16.0.0)\n  if (this instanceof GraphQLNonNull) {\n    this.ofType = assertNullableType(ofType);\n  } else {\n    return new GraphQLNonNull(ofType);\n  }\n} // Need to cast through any to alter the prototype.\n\nGraphQLNonNull.prototype.toString = function toString() {\n  return String(this.ofType) + '!';\n};\n\nGraphQLNonNull.prototype.toJSON = function toJSON() {\n  return this.toString();\n};\n\nObject.defineProperty(GraphQLNonNull.prototype, SYMBOL_TO_STRING_TAG, {\n  get: function get() {\n    return 'GraphQLNonNull';\n  }\n}); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(GraphQLNonNull);\n/**\n * These types wrap and modify other types\n */\n\nexport function isWrappingType(type) {\n  return isListType(type) || isNonNullType(type);\n}\nexport function assertWrappingType(type) {\n  if (!isWrappingType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL wrapping type.\"));\n  }\n\n  return type;\n}\n/**\n * These types can all accept null as a value.\n */\n\nexport function isNullableType(type) {\n  return isType(type) && !isNonNullType(type);\n}\nexport function assertNullableType(type) {\n  if (!isNullableType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL nullable type.\"));\n  }\n\n  return type;\n}\n/* eslint-disable no-redeclare */\n\nexport function getNullableType(type) {\n  /* eslint-enable no-redeclare */\n  if (type) {\n    return isNonNullType(type) ? type.ofType : type;\n  }\n}\n/**\n * These named types do not include modifiers like List or NonNull.\n */\n\nexport function isNamedType(type) {\n  return isScalarType(type) || isObjectType(type) || isInterfaceType(type) || isUnionType(type) || isEnumType(type) || isInputObjectType(type);\n}\nexport function assertNamedType(type) {\n  if (!isNamedType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL named type.\"));\n  }\n\n  return type;\n}\n/* eslint-disable no-redeclare */\n\nexport function getNamedType(type) {\n  /* eslint-enable no-redeclare */\n  if (type) {\n    var unwrappedType = type;\n\n    while (isWrappingType(unwrappedType)) {\n      unwrappedType = unwrappedType.ofType;\n    }\n\n    return unwrappedType;\n  }\n}\n/**\n * Used while defining GraphQL types to allow for circular references in\n * otherwise immutable type definitions.\n */\n\nfunction resolveThunk(thunk) {\n  // $FlowFixMe[incompatible-use]\n  return typeof thunk === 'function' ? thunk() : thunk;\n}\n\nfunction undefineIfEmpty(arr) {\n  return arr && arr.length > 0 ? arr : undefined;\n}\n/**\n * Scalar Type Definition\n *\n * The leaf values of any request and input values to arguments are\n * Scalars (or Enums) and are defined with a name and a series of functions\n * used to parse input from ast or variables and to ensure validity.\n *\n * If a type's serialize function does not return a value (i.e. it returns\n * `undefined`) then an error will be raised and a `null` value will be returned\n * in the response. If the serialize function returns `null`, then no error will\n * be included in the response.\n *\n * Example:\n *\n *     const OddType = new GraphQLScalarType({\n *       name: 'Odd',\n *       serialize(value) {\n *         if (value % 2 === 1) {\n *           return value;\n *         }\n *       }\n *     });\n *\n */\n\n\nexport var GraphQLScalarType = /*#__PURE__*/function () {\n  function GraphQLScalarType(config) {\n    var _config$parseValue, _config$serialize, _config$parseLiteral;\n\n    var parseValue = (_config$parseValue = config.parseValue) !== null && _config$parseValue !== void 0 ? _config$parseValue : identityFunc;\n    this.name = config.name;\n    this.description = config.description;\n    this.specifiedByUrl = config.specifiedByUrl;\n    this.serialize = (_config$serialize = config.serialize) !== null && _config$serialize !== void 0 ? _config$serialize : identityFunc;\n    this.parseValue = parseValue;\n    this.parseLiteral = (_config$parseLiteral = config.parseLiteral) !== null && _config$parseLiteral !== void 0 ? _config$parseLiteral : function (node, variables) {\n      return parseValue(valueFromASTUntyped(node, variables));\n    };\n    this.extensions = config.extensions && toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = undefineIfEmpty(config.extensionASTNodes);\n    typeof config.name === 'string' || devAssert(0, 'Must provide name.');\n    config.specifiedByUrl == null || typeof config.specifiedByUrl === 'string' || devAssert(0, \"\".concat(this.name, \" must provide \\\"specifiedByUrl\\\" as a string, \") + \"but got: \".concat(inspect(config.specifiedByUrl), \".\"));\n    config.serialize == null || typeof config.serialize === 'function' || devAssert(0, \"\".concat(this.name, \" must provide \\\"serialize\\\" function. If this custom Scalar is also used as an input type, ensure \\\"parseValue\\\" and \\\"parseLiteral\\\" functions are also provided.\"));\n\n    if (config.parseLiteral) {\n      typeof config.parseValue === 'function' && typeof config.parseLiteral === 'function' || devAssert(0, \"\".concat(this.name, \" must provide both \\\"parseValue\\\" and \\\"parseLiteral\\\" functions.\"));\n    }\n  }\n\n  var _proto = GraphQLScalarType.prototype;\n\n  _proto.toConfig = function toConfig() {\n    var _this$extensionASTNod;\n\n    return {\n      name: this.name,\n      description: this.description,\n      specifiedByUrl: this.specifiedByUrl,\n      serialize: this.serialize,\n      parseValue: this.parseValue,\n      parseLiteral: this.parseLiteral,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: (_this$extensionASTNod = this.extensionASTNodes) !== null && _this$extensionASTNod !== void 0 ? _this$extensionASTNod : []\n    };\n  };\n\n  _proto.toString = function toString() {\n    return this.name;\n  };\n\n  _proto.toJSON = function toJSON() {\n    return this.toString();\n  } // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n  ;\n\n  _createClass(GraphQLScalarType, [{\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'GraphQLScalarType';\n    }\n  }]);\n\n  return GraphQLScalarType;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(GraphQLScalarType);\n\n/**\n * Object Type Definition\n *\n * Almost all of the GraphQL types you define will be object types. Object types\n * have a name, but most importantly describe their fields.\n *\n * Example:\n *\n *     const AddressType = new GraphQLObjectType({\n *       name: 'Address',\n *       fields: {\n *         street: { type: GraphQLString },\n *         number: { type: GraphQLInt },\n *         formatted: {\n *           type: GraphQLString,\n *           resolve(obj) {\n *             return obj.number + ' ' + obj.street\n *           }\n *         }\n *       }\n *     });\n *\n * When two types need to refer to each other, or a type needs to refer to\n * itself in a field, you can use a function expression (aka a closure or a\n * thunk) to supply the fields lazily.\n *\n * Example:\n *\n *     const PersonType = new GraphQLObjectType({\n *       name: 'Person',\n *       fields: () => ({\n *         name: { type: GraphQLString },\n *         bestFriend: { type: PersonType },\n *       })\n *     });\n *\n */\nexport var GraphQLObjectType = /*#__PURE__*/function () {\n  function GraphQLObjectType(config) {\n    this.name = config.name;\n    this.description = config.description;\n    this.isTypeOf = config.isTypeOf;\n    this.extensions = config.extensions && toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = undefineIfEmpty(config.extensionASTNodes);\n    this._fields = defineFieldMap.bind(undefined, config);\n    this._interfaces = defineInterfaces.bind(undefined, config);\n    typeof config.name === 'string' || devAssert(0, 'Must provide name.');\n    config.isTypeOf == null || typeof config.isTypeOf === 'function' || devAssert(0, \"\".concat(this.name, \" must provide \\\"isTypeOf\\\" as a function, \") + \"but got: \".concat(inspect(config.isTypeOf), \".\"));\n  }\n\n  var _proto2 = GraphQLObjectType.prototype;\n\n  _proto2.getFields = function getFields() {\n    if (typeof this._fields === 'function') {\n      this._fields = this._fields();\n    }\n\n    return this._fields;\n  };\n\n  _proto2.getInterfaces = function getInterfaces() {\n    if (typeof this._interfaces === 'function') {\n      this._interfaces = this._interfaces();\n    }\n\n    return this._interfaces;\n  };\n\n  _proto2.toConfig = function toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      interfaces: this.getInterfaces(),\n      fields: fieldsToFieldsConfig(this.getFields()),\n      isTypeOf: this.isTypeOf,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes || []\n    };\n  };\n\n  _proto2.toString = function toString() {\n    return this.name;\n  };\n\n  _proto2.toJSON = function toJSON() {\n    return this.toString();\n  } // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n  ;\n\n  _createClass(GraphQLObjectType, [{\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'GraphQLObjectType';\n    }\n  }]);\n\n  return GraphQLObjectType;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(GraphQLObjectType);\n\nfunction defineInterfaces(config) {\n  var _resolveThunk;\n\n  var interfaces = (_resolveThunk = resolveThunk(config.interfaces)) !== null && _resolveThunk !== void 0 ? _resolveThunk : [];\n  Array.isArray(interfaces) || devAssert(0, \"\".concat(config.name, \" interfaces must be an Array or a function which returns an Array.\"));\n  return interfaces;\n}\n\nfunction defineFieldMap(config) {\n  var fieldMap = resolveThunk(config.fields);\n  isPlainObj(fieldMap) || devAssert(0, \"\".concat(config.name, \" fields must be an object with field names as keys or a function which returns such an object.\"));\n  return mapValue(fieldMap, function (fieldConfig, fieldName) {\n    var _fieldConfig$args;\n\n    isPlainObj(fieldConfig) || devAssert(0, \"\".concat(config.name, \".\").concat(fieldName, \" field config must be an object.\"));\n    !('isDeprecated' in fieldConfig) || devAssert(0, \"\".concat(config.name, \".\").concat(fieldName, \" should provide \\\"deprecationReason\\\" instead of \\\"isDeprecated\\\".\"));\n    fieldConfig.resolve == null || typeof fieldConfig.resolve === 'function' || devAssert(0, \"\".concat(config.name, \".\").concat(fieldName, \" field resolver must be a function if \") + \"provided, but got: \".concat(inspect(fieldConfig.resolve), \".\"));\n    var argsConfig = (_fieldConfig$args = fieldConfig.args) !== null && _fieldConfig$args !== void 0 ? _fieldConfig$args : {};\n    isPlainObj(argsConfig) || devAssert(0, \"\".concat(config.name, \".\").concat(fieldName, \" args must be an object with argument names as keys.\"));\n    var args = objectEntries(argsConfig).map(function (_ref) {\n      var argName = _ref[0],\n          argConfig = _ref[1];\n      return {\n        name: argName,\n        description: argConfig.description,\n        type: argConfig.type,\n        defaultValue: argConfig.defaultValue,\n        deprecationReason: argConfig.deprecationReason,\n        extensions: argConfig.extensions && toObjMap(argConfig.extensions),\n        astNode: argConfig.astNode\n      };\n    });\n    return {\n      name: fieldName,\n      description: fieldConfig.description,\n      type: fieldConfig.type,\n      args: args,\n      resolve: fieldConfig.resolve,\n      subscribe: fieldConfig.subscribe,\n      isDeprecated: fieldConfig.deprecationReason != null,\n      deprecationReason: fieldConfig.deprecationReason,\n      extensions: fieldConfig.extensions && toObjMap(fieldConfig.extensions),\n      astNode: fieldConfig.astNode\n    };\n  });\n}\n\nfunction isPlainObj(obj) {\n  return isObjectLike(obj) && !Array.isArray(obj);\n}\n\nfunction fieldsToFieldsConfig(fields) {\n  return mapValue(fields, function (field) {\n    return {\n      description: field.description,\n      type: field.type,\n      args: argsToArgsConfig(field.args),\n      resolve: field.resolve,\n      subscribe: field.subscribe,\n      deprecationReason: field.deprecationReason,\n      extensions: field.extensions,\n      astNode: field.astNode\n    };\n  });\n}\n/**\n * @internal\n */\n\n\nexport function argsToArgsConfig(args) {\n  return keyValMap(args, function (arg) {\n    return arg.name;\n  }, function (arg) {\n    return {\n      description: arg.description,\n      type: arg.type,\n      defaultValue: arg.defaultValue,\n      deprecationReason: arg.deprecationReason,\n      extensions: arg.extensions,\n      astNode: arg.astNode\n    };\n  });\n}\nexport function isRequiredArgument(arg) {\n  return isNonNullType(arg.type) && arg.defaultValue === undefined;\n}\n\n/**\n * Interface Type Definition\n *\n * When a field can return one of a heterogeneous set of types, a Interface type\n * is used to describe what types are possible, what fields are in common across\n * all types, as well as a function to determine which type is actually used\n * when the field is resolved.\n *\n * Example:\n *\n *     const EntityType = new GraphQLInterfaceType({\n *       name: 'Entity',\n *       fields: {\n *         name: { type: GraphQLString }\n *       }\n *     });\n *\n */\nexport var GraphQLInterfaceType = /*#__PURE__*/function () {\n  function GraphQLInterfaceType(config) {\n    this.name = config.name;\n    this.description = config.description;\n    this.resolveType = config.resolveType;\n    this.extensions = config.extensions && toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = undefineIfEmpty(config.extensionASTNodes);\n    this._fields = defineFieldMap.bind(undefined, config);\n    this._interfaces = defineInterfaces.bind(undefined, config);\n    typeof config.name === 'string' || devAssert(0, 'Must provide name.');\n    config.resolveType == null || typeof config.resolveType === 'function' || devAssert(0, \"\".concat(this.name, \" must provide \\\"resolveType\\\" as a function, \") + \"but got: \".concat(inspect(config.resolveType), \".\"));\n  }\n\n  var _proto3 = GraphQLInterfaceType.prototype;\n\n  _proto3.getFields = function getFields() {\n    if (typeof this._fields === 'function') {\n      this._fields = this._fields();\n    }\n\n    return this._fields;\n  };\n\n  _proto3.getInterfaces = function getInterfaces() {\n    if (typeof this._interfaces === 'function') {\n      this._interfaces = this._interfaces();\n    }\n\n    return this._interfaces;\n  };\n\n  _proto3.toConfig = function toConfig() {\n    var _this$extensionASTNod2;\n\n    return {\n      name: this.name,\n      description: this.description,\n      interfaces: this.getInterfaces(),\n      fields: fieldsToFieldsConfig(this.getFields()),\n      resolveType: this.resolveType,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: (_this$extensionASTNod2 = this.extensionASTNodes) !== null && _this$extensionASTNod2 !== void 0 ? _this$extensionASTNod2 : []\n    };\n  };\n\n  _proto3.toString = function toString() {\n    return this.name;\n  };\n\n  _proto3.toJSON = function toJSON() {\n    return this.toString();\n  } // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n  ;\n\n  _createClass(GraphQLInterfaceType, [{\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'GraphQLInterfaceType';\n    }\n  }]);\n\n  return GraphQLInterfaceType;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(GraphQLInterfaceType);\n\n/**\n * Union Type Definition\n *\n * When a field can return one of a heterogeneous set of types, a Union type\n * is used to describe what types are possible as well as providing a function\n * to determine which type is actually used when the field is resolved.\n *\n * Example:\n *\n *     const PetType = new GraphQLUnionType({\n *       name: 'Pet',\n *       types: [ DogType, CatType ],\n *       resolveType(value) {\n *         if (value instanceof Dog) {\n *           return DogType;\n *         }\n *         if (value instanceof Cat) {\n *           return CatType;\n *         }\n *       }\n *     });\n *\n */\nexport var GraphQLUnionType = /*#__PURE__*/function () {\n  function GraphQLUnionType(config) {\n    this.name = config.name;\n    this.description = config.description;\n    this.resolveType = config.resolveType;\n    this.extensions = config.extensions && toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = undefineIfEmpty(config.extensionASTNodes);\n    this._types = defineTypes.bind(undefined, config);\n    typeof config.name === 'string' || devAssert(0, 'Must provide name.');\n    config.resolveType == null || typeof config.resolveType === 'function' || devAssert(0, \"\".concat(this.name, \" must provide \\\"resolveType\\\" as a function, \") + \"but got: \".concat(inspect(config.resolveType), \".\"));\n  }\n\n  var _proto4 = GraphQLUnionType.prototype;\n\n  _proto4.getTypes = function getTypes() {\n    if (typeof this._types === 'function') {\n      this._types = this._types();\n    }\n\n    return this._types;\n  };\n\n  _proto4.toConfig = function toConfig() {\n    var _this$extensionASTNod3;\n\n    return {\n      name: this.name,\n      description: this.description,\n      types: this.getTypes(),\n      resolveType: this.resolveType,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: (_this$extensionASTNod3 = this.extensionASTNodes) !== null && _this$extensionASTNod3 !== void 0 ? _this$extensionASTNod3 : []\n    };\n  };\n\n  _proto4.toString = function toString() {\n    return this.name;\n  };\n\n  _proto4.toJSON = function toJSON() {\n    return this.toString();\n  } // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n  ;\n\n  _createClass(GraphQLUnionType, [{\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'GraphQLUnionType';\n    }\n  }]);\n\n  return GraphQLUnionType;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(GraphQLUnionType);\n\nfunction defineTypes(config) {\n  var types = resolveThunk(config.types);\n  Array.isArray(types) || devAssert(0, \"Must provide Array of types or a function which returns such an array for Union \".concat(config.name, \".\"));\n  return types;\n}\n\n/**\n * Enum Type Definition\n *\n * Some leaf values of requests and input values are Enums. GraphQL serializes\n * Enum values as strings, however internally Enums can be represented by any\n * kind of type, often integers.\n *\n * Example:\n *\n *     const RGBType = new GraphQLEnumType({\n *       name: 'RGB',\n *       values: {\n *         RED: { value: 0 },\n *         GREEN: { value: 1 },\n *         BLUE: { value: 2 }\n *       }\n *     });\n *\n * Note: If a value is not provided in a definition, the name of the enum value\n * will be used as its internal value.\n */\nexport var GraphQLEnumType\n/* <T> */\n= /*#__PURE__*/function () {\n  function GraphQLEnumType(config) {\n    this.name = config.name;\n    this.description = config.description;\n    this.extensions = config.extensions && toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = undefineIfEmpty(config.extensionASTNodes);\n    this._values = defineEnumValues(this.name, config.values);\n    this._valueLookup = new Map(this._values.map(function (enumValue) {\n      return [enumValue.value, enumValue];\n    }));\n    this._nameLookup = keyMap(this._values, function (value) {\n      return value.name;\n    });\n    typeof config.name === 'string' || devAssert(0, 'Must provide name.');\n  }\n\n  var _proto5 = GraphQLEnumType.prototype;\n\n  _proto5.getValues = function getValues() {\n    return this._values;\n  };\n\n  _proto5.getValue = function getValue(name) {\n    return this._nameLookup[name];\n  };\n\n  _proto5.serialize = function serialize(outputValue) {\n    var enumValue = this._valueLookup.get(outputValue);\n\n    if (enumValue === undefined) {\n      throw new GraphQLError(\"Enum \\\"\".concat(this.name, \"\\\" cannot represent value: \").concat(inspect(outputValue)));\n    }\n\n    return enumValue.name;\n  };\n\n  _proto5.parseValue = function parseValue(inputValue)\n  /* T */\n  {\n    if (typeof inputValue !== 'string') {\n      var valueStr = inspect(inputValue);\n      throw new GraphQLError(\"Enum \\\"\".concat(this.name, \"\\\" cannot represent non-string value: \").concat(valueStr, \".\") + didYouMeanEnumValue(this, valueStr));\n    }\n\n    var enumValue = this.getValue(inputValue);\n\n    if (enumValue == null) {\n      throw new GraphQLError(\"Value \\\"\".concat(inputValue, \"\\\" does not exist in \\\"\").concat(this.name, \"\\\" enum.\") + didYouMeanEnumValue(this, inputValue));\n    }\n\n    return enumValue.value;\n  };\n\n  _proto5.parseLiteral = function parseLiteral(valueNode, _variables)\n  /* T */\n  {\n    // Note: variables will be resolved to a value before calling this function.\n    if (valueNode.kind !== Kind.ENUM) {\n      var valueStr = print(valueNode);\n      throw new GraphQLError(\"Enum \\\"\".concat(this.name, \"\\\" cannot represent non-enum value: \").concat(valueStr, \".\") + didYouMeanEnumValue(this, valueStr), valueNode);\n    }\n\n    var enumValue = this.getValue(valueNode.value);\n\n    if (enumValue == null) {\n      var _valueStr = print(valueNode);\n\n      throw new GraphQLError(\"Value \\\"\".concat(_valueStr, \"\\\" does not exist in \\\"\").concat(this.name, \"\\\" enum.\") + didYouMeanEnumValue(this, _valueStr), valueNode);\n    }\n\n    return enumValue.value;\n  };\n\n  _proto5.toConfig = function toConfig() {\n    var _this$extensionASTNod4;\n\n    var values = keyValMap(this.getValues(), function (value) {\n      return value.name;\n    }, function (value) {\n      return {\n        description: value.description,\n        value: value.value,\n        deprecationReason: value.deprecationReason,\n        extensions: value.extensions,\n        astNode: value.astNode\n      };\n    });\n    return {\n      name: this.name,\n      description: this.description,\n      values: values,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: (_this$extensionASTNod4 = this.extensionASTNodes) !== null && _this$extensionASTNod4 !== void 0 ? _this$extensionASTNod4 : []\n    };\n  };\n\n  _proto5.toString = function toString() {\n    return this.name;\n  };\n\n  _proto5.toJSON = function toJSON() {\n    return this.toString();\n  } // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n  ;\n\n  _createClass(GraphQLEnumType, [{\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'GraphQLEnumType';\n    }\n  }]);\n\n  return GraphQLEnumType;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(GraphQLEnumType);\n\nfunction didYouMeanEnumValue(enumType, unknownValueStr) {\n  var allNames = enumType.getValues().map(function (value) {\n    return value.name;\n  });\n  var suggestedValues = suggestionList(unknownValueStr, allNames);\n  return didYouMean('the enum value', suggestedValues);\n}\n\nfunction defineEnumValues(typeName, valueMap) {\n  isPlainObj(valueMap) || devAssert(0, \"\".concat(typeName, \" values must be an object with value names as keys.\"));\n  return objectEntries(valueMap).map(function (_ref2) {\n    var valueName = _ref2[0],\n        valueConfig = _ref2[1];\n    isPlainObj(valueConfig) || devAssert(0, \"\".concat(typeName, \".\").concat(valueName, \" must refer to an object with a \\\"value\\\" key \") + \"representing an internal value but got: \".concat(inspect(valueConfig), \".\"));\n    !('isDeprecated' in valueConfig) || devAssert(0, \"\".concat(typeName, \".\").concat(valueName, \" should provide \\\"deprecationReason\\\" instead of \\\"isDeprecated\\\".\"));\n    return {\n      name: valueName,\n      description: valueConfig.description,\n      value: valueConfig.value !== undefined ? valueConfig.value : valueName,\n      isDeprecated: valueConfig.deprecationReason != null,\n      deprecationReason: valueConfig.deprecationReason,\n      extensions: valueConfig.extensions && toObjMap(valueConfig.extensions),\n      astNode: valueConfig.astNode\n    };\n  });\n}\n\n/**\n * Input Object Type Definition\n *\n * An input object defines a structured collection of fields which may be\n * supplied to a field argument.\n *\n * Using `NonNull` will ensure that a value must be provided by the query\n *\n * Example:\n *\n *     const GeoPoint = new GraphQLInputObjectType({\n *       name: 'GeoPoint',\n *       fields: {\n *         lat: { type: new GraphQLNonNull(GraphQLFloat) },\n *         lon: { type: new GraphQLNonNull(GraphQLFloat) },\n *         alt: { type: GraphQLFloat, defaultValue: 0 },\n *       }\n *     });\n *\n */\nexport var GraphQLInputObjectType = /*#__PURE__*/function () {\n  function GraphQLInputObjectType(config) {\n    this.name = config.name;\n    this.description = config.description;\n    this.extensions = config.extensions && toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = undefineIfEmpty(config.extensionASTNodes);\n    this._fields = defineInputFieldMap.bind(undefined, config);\n    typeof config.name === 'string' || devAssert(0, 'Must provide name.');\n  }\n\n  var _proto6 = GraphQLInputObjectType.prototype;\n\n  _proto6.getFields = function getFields() {\n    if (typeof this._fields === 'function') {\n      this._fields = this._fields();\n    }\n\n    return this._fields;\n  };\n\n  _proto6.toConfig = function toConfig() {\n    var _this$extensionASTNod5;\n\n    var fields = mapValue(this.getFields(), function (field) {\n      return {\n        description: field.description,\n        type: field.type,\n        defaultValue: field.defaultValue,\n        deprecationReason: field.deprecationReason,\n        extensions: field.extensions,\n        astNode: field.astNode\n      };\n    });\n    return {\n      name: this.name,\n      description: this.description,\n      fields: fields,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: (_this$extensionASTNod5 = this.extensionASTNodes) !== null && _this$extensionASTNod5 !== void 0 ? _this$extensionASTNod5 : []\n    };\n  };\n\n  _proto6.toString = function toString() {\n    return this.name;\n  };\n\n  _proto6.toJSON = function toJSON() {\n    return this.toString();\n  } // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n  ;\n\n  _createClass(GraphQLInputObjectType, [{\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'GraphQLInputObjectType';\n    }\n  }]);\n\n  return GraphQLInputObjectType;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(GraphQLInputObjectType);\n\nfunction defineInputFieldMap(config) {\n  var fieldMap = resolveThunk(config.fields);\n  isPlainObj(fieldMap) || devAssert(0, \"\".concat(config.name, \" fields must be an object with field names as keys or a function which returns such an object.\"));\n  return mapValue(fieldMap, function (fieldConfig, fieldName) {\n    !('resolve' in fieldConfig) || devAssert(0, \"\".concat(config.name, \".\").concat(fieldName, \" field has a resolve property, but Input Types cannot define resolvers.\"));\n    return {\n      name: fieldName,\n      description: fieldConfig.description,\n      type: fieldConfig.type,\n      defaultValue: fieldConfig.defaultValue,\n      deprecationReason: fieldConfig.deprecationReason,\n      extensions: fieldConfig.extensions && toObjMap(fieldConfig.extensions),\n      astNode: fieldConfig.astNode\n    };\n  });\n}\n\nexport function isRequiredInputField(field) {\n  return isNonNullType(field.type) && field.defaultValue === undefined;\n}\n","import { isInterfaceType, isObjectType, isListType, isNonNullType, isAbstractType } from \"../type/definition.mjs\";\n/**\n * Provided two types, return true if the types are equal (invariant).\n */\n\nexport function isEqualType(typeA, typeB) {\n  // Equivalent types are equal.\n  if (typeA === typeB) {\n    return true;\n  } // If either type is non-null, the other must also be non-null.\n\n\n  if (isNonNullType(typeA) && isNonNullType(typeB)) {\n    return isEqualType(typeA.ofType, typeB.ofType);\n  } // If either type is a list, the other must also be a list.\n\n\n  if (isListType(typeA) && isListType(typeB)) {\n    return isEqualType(typeA.ofType, typeB.ofType);\n  } // Otherwise the types are not equal.\n\n\n  return false;\n}\n/**\n * Provided a type and a super type, return true if the first type is either\n * equal or a subset of the second super type (covariant).\n */\n\nexport function isTypeSubTypeOf(schema, maybeSubType, superType) {\n  // Equivalent type is a valid subtype\n  if (maybeSubType === superType) {\n    return true;\n  } // If superType is non-null, maybeSubType must also be non-null.\n\n\n  if (isNonNullType(superType)) {\n    if (isNonNullType(maybeSubType)) {\n      return isTypeSubTypeOf(schema, maybeSubType.ofType, superType.ofType);\n    }\n\n    return false;\n  }\n\n  if (isNonNullType(maybeSubType)) {\n    // If superType is nullable, maybeSubType may be non-null or nullable.\n    return isTypeSubTypeOf(schema, maybeSubType.ofType, superType);\n  } // If superType type is a list, maybeSubType type must also be a list.\n\n\n  if (isListType(superType)) {\n    if (isListType(maybeSubType)) {\n      return isTypeSubTypeOf(schema, maybeSubType.ofType, superType.ofType);\n    }\n\n    return false;\n  }\n\n  if (isListType(maybeSubType)) {\n    // If superType is not a list, maybeSubType must also be not a list.\n    return false;\n  } // If superType type is an abstract type, check if it is super type of maybeSubType.\n  // Otherwise, the child type is not a valid subtype of the parent type.\n\n\n  return isAbstractType(superType) && (isInterfaceType(maybeSubType) || isObjectType(maybeSubType)) && schema.isSubType(superType, maybeSubType);\n}\n/**\n * Provided two composite types, determine if they \"overlap\". Two composite\n * types overlap when the Sets of possible concrete types for each intersect.\n *\n * This is often used to determine if a fragment of a given type could possibly\n * be visited in a context of another type.\n *\n * This function is commutative.\n */\n\nexport function doTypesOverlap(schema, typeA, typeB) {\n  // Equivalent types overlap\n  if (typeA === typeB) {\n    return true;\n  }\n\n  if (isAbstractType(typeA)) {\n    if (isAbstractType(typeB)) {\n      // If both types are abstract, then determine if there is any intersection\n      // between possible concrete types of each.\n      return schema.getPossibleTypes(typeA).some(function (type) {\n        return schema.isSubType(typeB, type);\n      });\n    } // Determine if the latter type is a possible concrete type of the former.\n\n\n    return schema.isSubType(typeA, typeB);\n  }\n\n  if (isAbstractType(typeB)) {\n    // Determine if the former type is a possible concrete type of the latter.\n    return schema.isSubType(typeB, typeA);\n  } // Otherwise the types do not overlap.\n\n\n  return false;\n}\n","import { SYMBOL_ITERATOR } from \"./symbols.mjs\";\n\n/* eslint-disable no-redeclare */\n// $FlowFixMe[name-already-bound]\nvar arrayFrom = Array.from || function (obj, mapFn, thisArg) {\n  if (obj == null) {\n    throw new TypeError('Array.from requires an array-like object - not null or undefined');\n  } // Is Iterable?\n\n\n  var iteratorMethod = obj[SYMBOL_ITERATOR];\n\n  if (typeof iteratorMethod === 'function') {\n    var iterator = iteratorMethod.call(obj);\n    var result = [];\n    var step;\n\n    for (var i = 0; !(step = iterator.next()).done; ++i) {\n      result.push(mapFn.call(thisArg, step.value, i)); // Infinite Iterators could cause forEach to run forever.\n      // After a very large number of iterations, produce an error.\n      // istanbul ignore if (Too big to actually test)\n\n      if (i > 9999999) {\n        throw new TypeError('Near-infinite iteration.');\n      }\n    }\n\n    return result;\n  } // Is Array like?\n\n\n  var length = obj.length;\n\n  if (typeof length === 'number' && length >= 0 && length % 1 === 0) {\n    var _result = [];\n\n    for (var _i = 0; _i < length; ++_i) {\n      if (Object.prototype.hasOwnProperty.call(obj, _i)) {\n        _result.push(mapFn.call(thisArg, obj[_i], _i));\n      }\n    }\n\n    return _result;\n  }\n\n  return [];\n};\n\nexport default arrayFrom;\n","/* eslint-disable no-redeclare */\n// $FlowFixMe[name-already-bound] workaround for: https://github.com/facebook/flow/issues/4441\nvar isFinitePolyfill = Number.isFinite || function (value) {\n  return typeof value === 'number' && isFinite(value);\n};\n\nexport default isFinitePolyfill;\n","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport { SYMBOL_ITERATOR } from \"../polyfills/symbols.mjs\";\n/**\n * Safer version of `Array.from` that return `null` if value isn't convertible to array.\n * Also protects against Array-like objects without items.\n *\n * @example\n *\n * safeArrayFrom([ 1, 2, 3 ]) // [1, 2, 3]\n * safeArrayFrom('ABC') // null\n * safeArrayFrom({ length: 1 }) // null\n * safeArrayFrom({ length: 1, 0: 'Alpha' }) // ['Alpha']\n * safeArrayFrom({ key: 'value' }) // null\n * safeArrayFrom(new Map()) // []\n *\n */\n\nexport default function safeArrayFrom(collection) {\n  var mapFn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (item) {\n    return item;\n  };\n\n  if (collection == null || _typeof(collection) !== 'object') {\n    return null;\n  }\n\n  if (Array.isArray(collection)) {\n    return collection.map(mapFn);\n  } // Is Iterable?\n\n\n  var iteratorMethod = collection[SYMBOL_ITERATOR];\n\n  if (typeof iteratorMethod === 'function') {\n    // $FlowFixMe[incompatible-use]\n    var iterator = iteratorMethod.call(collection);\n    var result = [];\n    var step;\n\n    for (var i = 0; !(step = iterator.next()).done; ++i) {\n      result.push(mapFn(step.value, i));\n    }\n\n    return result;\n  } // Is Array like?\n\n\n  var length = collection.length;\n\n  if (typeof length === 'number' && length >= 0 && length % 1 === 0) {\n    var _result = [];\n\n    for (var _i = 0; _i < length; ++_i) {\n      if (!Object.prototype.hasOwnProperty.call(collection, _i)) {\n        return null;\n      }\n\n      _result.push(mapFn(collection[String(_i)], _i));\n    }\n\n    return _result;\n  }\n\n  return null;\n}\n","/* eslint-disable no-redeclare */\n// $FlowFixMe[name-already-bound] workaround for: https://github.com/facebook/flow/issues/4441\nvar isInteger = Number.isInteger || function (value) {\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n};\n\nexport default isInteger;\n","import isFinite from \"../polyfills/isFinite.mjs\";\nimport isInteger from \"../polyfills/isInteger.mjs\";\nimport inspect from \"../jsutils/inspect.mjs\";\nimport isObjectLike from \"../jsutils/isObjectLike.mjs\";\nimport { Kind } from \"../language/kinds.mjs\";\nimport { print } from \"../language/printer.mjs\";\nimport { GraphQLError } from \"../error/GraphQLError.mjs\";\nimport { GraphQLScalarType } from \"./definition.mjs\"; // As per the GraphQL Spec, Integers are only treated as valid when a valid\n// 32-bit signed integer, providing the broadest support across platforms.\n//\n// n.b. JavaScript's integers are safe between -(2^53 - 1) and 2^53 - 1 because\n// they are internally represented as IEEE 754 doubles.\n\nvar MAX_INT = 2147483647;\nvar MIN_INT = -2147483648;\n\nfunction serializeInt(outputValue) {\n  var coercedValue = serializeObject(outputValue);\n\n  if (typeof coercedValue === 'boolean') {\n    return coercedValue ? 1 : 0;\n  }\n\n  var num = coercedValue;\n\n  if (typeof coercedValue === 'string' && coercedValue !== '') {\n    num = Number(coercedValue);\n  }\n\n  if (!isInteger(num)) {\n    throw new GraphQLError(\"Int cannot represent non-integer value: \".concat(inspect(coercedValue)));\n  }\n\n  if (num > MAX_INT || num < MIN_INT) {\n    throw new GraphQLError('Int cannot represent non 32-bit signed integer value: ' + inspect(coercedValue));\n  }\n\n  return num;\n}\n\nfunction coerceInt(inputValue) {\n  if (!isInteger(inputValue)) {\n    throw new GraphQLError(\"Int cannot represent non-integer value: \".concat(inspect(inputValue)));\n  }\n\n  if (inputValue > MAX_INT || inputValue < MIN_INT) {\n    throw new GraphQLError(\"Int cannot represent non 32-bit signed integer value: \".concat(inputValue));\n  }\n\n  return inputValue;\n}\n\nexport var GraphQLInt = new GraphQLScalarType({\n  name: 'Int',\n  description: 'The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.',\n  serialize: serializeInt,\n  parseValue: coerceInt,\n  parseLiteral: function parseLiteral(valueNode) {\n    if (valueNode.kind !== Kind.INT) {\n      throw new GraphQLError(\"Int cannot represent non-integer value: \".concat(print(valueNode)), valueNode);\n    }\n\n    var num = parseInt(valueNode.value, 10);\n\n    if (num > MAX_INT || num < MIN_INT) {\n      throw new GraphQLError(\"Int cannot represent non 32-bit signed integer value: \".concat(valueNode.value), valueNode);\n    }\n\n    return num;\n  }\n});\n\nfunction serializeFloat(outputValue) {\n  var coercedValue = serializeObject(outputValue);\n\n  if (typeof coercedValue === 'boolean') {\n    return coercedValue ? 1 : 0;\n  }\n\n  var num = coercedValue;\n\n  if (typeof coercedValue === 'string' && coercedValue !== '') {\n    num = Number(coercedValue);\n  }\n\n  if (!isFinite(num)) {\n    throw new GraphQLError(\"Float cannot represent non numeric value: \".concat(inspect(coercedValue)));\n  }\n\n  return num;\n}\n\nfunction coerceFloat(inputValue) {\n  if (!isFinite(inputValue)) {\n    throw new GraphQLError(\"Float cannot represent non numeric value: \".concat(inspect(inputValue)));\n  }\n\n  return inputValue;\n}\n\nexport var GraphQLFloat = new GraphQLScalarType({\n  name: 'Float',\n  description: 'The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).',\n  serialize: serializeFloat,\n  parseValue: coerceFloat,\n  parseLiteral: function parseLiteral(valueNode) {\n    if (valueNode.kind !== Kind.FLOAT && valueNode.kind !== Kind.INT) {\n      throw new GraphQLError(\"Float cannot represent non numeric value: \".concat(print(valueNode)), valueNode);\n    }\n\n    return parseFloat(valueNode.value);\n  }\n}); // Support serializing objects with custom valueOf() or toJSON() functions -\n// a common way to represent a complex value which can be represented as\n// a string (ex: MongoDB id objects).\n\nfunction serializeObject(outputValue) {\n  if (isObjectLike(outputValue)) {\n    if (typeof outputValue.valueOf === 'function') {\n      var valueOfResult = outputValue.valueOf();\n\n      if (!isObjectLike(valueOfResult)) {\n        return valueOfResult;\n      }\n    }\n\n    if (typeof outputValue.toJSON === 'function') {\n      // $FlowFixMe[incompatible-use]\n      return outputValue.toJSON();\n    }\n  }\n\n  return outputValue;\n}\n\nfunction serializeString(outputValue) {\n  var coercedValue = serializeObject(outputValue); // Serialize string, boolean and number values to a string, but do not\n  // attempt to coerce object, function, symbol, or other types as strings.\n\n  if (typeof coercedValue === 'string') {\n    return coercedValue;\n  }\n\n  if (typeof coercedValue === 'boolean') {\n    return coercedValue ? 'true' : 'false';\n  }\n\n  if (isFinite(coercedValue)) {\n    return coercedValue.toString();\n  }\n\n  throw new GraphQLError(\"String cannot represent value: \".concat(inspect(outputValue)));\n}\n\nfunction coerceString(inputValue) {\n  if (typeof inputValue !== 'string') {\n    throw new GraphQLError(\"String cannot represent a non string value: \".concat(inspect(inputValue)));\n  }\n\n  return inputValue;\n}\n\nexport var GraphQLString = new GraphQLScalarType({\n  name: 'String',\n  description: 'The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.',\n  serialize: serializeString,\n  parseValue: coerceString,\n  parseLiteral: function parseLiteral(valueNode) {\n    if (valueNode.kind !== Kind.STRING) {\n      throw new GraphQLError(\"String cannot represent a non string value: \".concat(print(valueNode)), valueNode);\n    }\n\n    return valueNode.value;\n  }\n});\n\nfunction serializeBoolean(outputValue) {\n  var coercedValue = serializeObject(outputValue);\n\n  if (typeof coercedValue === 'boolean') {\n    return coercedValue;\n  }\n\n  if (isFinite(coercedValue)) {\n    return coercedValue !== 0;\n  }\n\n  throw new GraphQLError(\"Boolean cannot represent a non boolean value: \".concat(inspect(coercedValue)));\n}\n\nfunction coerceBoolean(inputValue) {\n  if (typeof inputValue !== 'boolean') {\n    throw new GraphQLError(\"Boolean cannot represent a non boolean value: \".concat(inspect(inputValue)));\n  }\n\n  return inputValue;\n}\n\nexport var GraphQLBoolean = new GraphQLScalarType({\n  name: 'Boolean',\n  description: 'The `Boolean` scalar type represents `true` or `false`.',\n  serialize: serializeBoolean,\n  parseValue: coerceBoolean,\n  parseLiteral: function parseLiteral(valueNode) {\n    if (valueNode.kind !== Kind.BOOLEAN) {\n      throw new GraphQLError(\"Boolean cannot represent a non boolean value: \".concat(print(valueNode)), valueNode);\n    }\n\n    return valueNode.value;\n  }\n});\n\nfunction serializeID(outputValue) {\n  var coercedValue = serializeObject(outputValue);\n\n  if (typeof coercedValue === 'string') {\n    return coercedValue;\n  }\n\n  if (isInteger(coercedValue)) {\n    return String(coercedValue);\n  }\n\n  throw new GraphQLError(\"ID cannot represent value: \".concat(inspect(outputValue)));\n}\n\nfunction coerceID(inputValue) {\n  if (typeof inputValue === 'string') {\n    return inputValue;\n  }\n\n  if (isInteger(inputValue)) {\n    return inputValue.toString();\n  }\n\n  throw new GraphQLError(\"ID cannot represent value: \".concat(inspect(inputValue)));\n}\n\nexport var GraphQLID = new GraphQLScalarType({\n  name: 'ID',\n  description: 'The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID.',\n  serialize: serializeID,\n  parseValue: coerceID,\n  parseLiteral: function parseLiteral(valueNode) {\n    if (valueNode.kind !== Kind.STRING && valueNode.kind !== Kind.INT) {\n      throw new GraphQLError('ID cannot represent a non-string and non-integer value: ' + print(valueNode), valueNode);\n    }\n\n    return valueNode.value;\n  }\n});\nexport var specifiedScalarTypes = Object.freeze([GraphQLString, GraphQLInt, GraphQLFloat, GraphQLBoolean, GraphQLID]);\nexport function isSpecifiedScalarType(type) {\n  return specifiedScalarTypes.some(function (_ref) {\n    var name = _ref.name;\n    return type.name === name;\n  });\n}\n","import isFinite from \"../polyfills/isFinite.mjs\";\nimport objectValues from \"../polyfills/objectValues.mjs\";\nimport inspect from \"../jsutils/inspect.mjs\";\nimport invariant from \"../jsutils/invariant.mjs\";\nimport isObjectLike from \"../jsutils/isObjectLike.mjs\";\nimport safeArrayFrom from \"../jsutils/safeArrayFrom.mjs\";\nimport { Kind } from \"../language/kinds.mjs\";\nimport { GraphQLID } from \"../type/scalars.mjs\";\nimport { isLeafType, isEnumType, isInputObjectType, isListType, isNonNullType } from \"../type/definition.mjs\";\n/**\n * Produces a GraphQL Value AST given a JavaScript object.\n * Function will match JavaScript/JSON values to GraphQL AST schema format\n * by using suggested GraphQLInputType. For example:\n *\n *     astFromValue(\"value\", GraphQLString)\n *\n * A GraphQL type must be provided, which will be used to interpret different\n * JavaScript values.\n *\n * | JSON Value    | GraphQL Value        |\n * | ------------- | -------------------- |\n * | Object        | Input Object         |\n * | Array         | List                 |\n * | Boolean       | Boolean              |\n * | String        | String / Enum Value  |\n * | Number        | Int / Float          |\n * | Mixed         | Enum Value           |\n * | null          | NullValue            |\n *\n */\n\nexport function astFromValue(value, type) {\n  if (isNonNullType(type)) {\n    var astValue = astFromValue(value, type.ofType);\n\n    if ((astValue === null || astValue === void 0 ? void 0 : astValue.kind) === Kind.NULL) {\n      return null;\n    }\n\n    return astValue;\n  } // only explicit null, not undefined, NaN\n\n\n  if (value === null) {\n    return {\n      kind: Kind.NULL\n    };\n  } // undefined\n\n\n  if (value === undefined) {\n    return null;\n  } // Convert JavaScript array to GraphQL list. If the GraphQLType is a list, but\n  // the value is not an array, convert the value using the list's item type.\n\n\n  if (isListType(type)) {\n    var itemType = type.ofType;\n    var items = safeArrayFrom(value);\n\n    if (items != null) {\n      var valuesNodes = [];\n\n      for (var _i2 = 0; _i2 < items.length; _i2++) {\n        var item = items[_i2];\n        var itemNode = astFromValue(item, itemType);\n\n        if (itemNode != null) {\n          valuesNodes.push(itemNode);\n        }\n      }\n\n      return {\n        kind: Kind.LIST,\n        values: valuesNodes\n      };\n    }\n\n    return astFromValue(value, itemType);\n  } // Populate the fields of the input object by creating ASTs from each value\n  // in the JavaScript object according to the fields in the input type.\n\n\n  if (isInputObjectType(type)) {\n    if (!isObjectLike(value)) {\n      return null;\n    }\n\n    var fieldNodes = [];\n\n    for (var _i4 = 0, _objectValues2 = objectValues(type.getFields()); _i4 < _objectValues2.length; _i4++) {\n      var field = _objectValues2[_i4];\n      var fieldValue = astFromValue(value[field.name], field.type);\n\n      if (fieldValue) {\n        fieldNodes.push({\n          kind: Kind.OBJECT_FIELD,\n          name: {\n            kind: Kind.NAME,\n            value: field.name\n          },\n          value: fieldValue\n        });\n      }\n    }\n\n    return {\n      kind: Kind.OBJECT,\n      fields: fieldNodes\n    };\n  } // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2618')\n\n\n  if (isLeafType(type)) {\n    // Since value is an internally represented value, it must be serialized\n    // to an externally represented value before converting into an AST.\n    var serialized = type.serialize(value);\n\n    if (serialized == null) {\n      return null;\n    } // Others serialize based on their corresponding JavaScript scalar types.\n\n\n    if (typeof serialized === 'boolean') {\n      return {\n        kind: Kind.BOOLEAN,\n        value: serialized\n      };\n    } // JavaScript numbers can be Int or Float values.\n\n\n    if (typeof serialized === 'number' && isFinite(serialized)) {\n      var stringNum = String(serialized);\n      return integerStringRegExp.test(stringNum) ? {\n        kind: Kind.INT,\n        value: stringNum\n      } : {\n        kind: Kind.FLOAT,\n        value: stringNum\n      };\n    }\n\n    if (typeof serialized === 'string') {\n      // Enum types use Enum literals.\n      if (isEnumType(type)) {\n        return {\n          kind: Kind.ENUM,\n          value: serialized\n        };\n      } // ID types can use Int literals.\n\n\n      if (type === GraphQLID && integerStringRegExp.test(serialized)) {\n        return {\n          kind: Kind.INT,\n          value: serialized\n        };\n      }\n\n      return {\n        kind: Kind.STRING,\n        value: serialized\n      };\n    }\n\n    throw new TypeError(\"Cannot convert value to AST: \".concat(inspect(serialized), \".\"));\n  } // istanbul ignore next (Not reachable. All possible input types have been considered)\n\n\n  false || invariant(0, 'Unexpected input type: ' + inspect(type));\n}\n/**\n * IntValue:\n *   - NegativeSign? 0\n *   - NegativeSign? NonZeroDigit ( Digit+ )?\n */\n\nvar integerStringRegExp = /^-?(?:0|[1-9][0-9]*)$/;\n","import objectValues from \"../polyfills/objectValues.mjs\";\nimport inspect from \"../jsutils/inspect.mjs\";\nimport invariant from \"../jsutils/invariant.mjs\";\nimport { print } from \"../language/printer.mjs\";\nimport { DirectiveLocation } from \"../language/directiveLocation.mjs\";\nimport { astFromValue } from \"../utilities/astFromValue.mjs\";\nimport { GraphQLString, GraphQLBoolean } from \"./scalars.mjs\";\nimport { GraphQLList, GraphQLNonNull, GraphQLObjectType, GraphQLEnumType, isScalarType, isObjectType, isInterfaceType, isUnionType, isEnumType, isInputObjectType, isListType, isNonNullType, isAbstractType } from \"./definition.mjs\";\nexport var __Schema = new GraphQLObjectType({\n  name: '__Schema',\n  description: 'A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.',\n  fields: function fields() {\n    return {\n      description: {\n        type: GraphQLString,\n        resolve: function resolve(schema) {\n          return schema.description;\n        }\n      },\n      types: {\n        description: 'A list of all types supported by this server.',\n        type: new GraphQLNonNull(new GraphQLList(new GraphQLNonNull(__Type))),\n        resolve: function resolve(schema) {\n          return objectValues(schema.getTypeMap());\n        }\n      },\n      queryType: {\n        description: 'The type that query operations will be rooted at.',\n        type: new GraphQLNonNull(__Type),\n        resolve: function resolve(schema) {\n          return schema.getQueryType();\n        }\n      },\n      mutationType: {\n        description: 'If this server supports mutation, the type that mutation operations will be rooted at.',\n        type: __Type,\n        resolve: function resolve(schema) {\n          return schema.getMutationType();\n        }\n      },\n      subscriptionType: {\n        description: 'If this server support subscription, the type that subscription operations will be rooted at.',\n        type: __Type,\n        resolve: function resolve(schema) {\n          return schema.getSubscriptionType();\n        }\n      },\n      directives: {\n        description: 'A list of all directives supported by this server.',\n        type: new GraphQLNonNull(new GraphQLList(new GraphQLNonNull(__Directive))),\n        resolve: function resolve(schema) {\n          return schema.getDirectives();\n        }\n      }\n    };\n  }\n});\nexport var __Directive = new GraphQLObjectType({\n  name: '__Directive',\n  description: \"A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\\n\\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.\",\n  fields: function fields() {\n    return {\n      name: {\n        type: new GraphQLNonNull(GraphQLString),\n        resolve: function resolve(directive) {\n          return directive.name;\n        }\n      },\n      description: {\n        type: GraphQLString,\n        resolve: function resolve(directive) {\n          return directive.description;\n        }\n      },\n      isRepeatable: {\n        type: new GraphQLNonNull(GraphQLBoolean),\n        resolve: function resolve(directive) {\n          return directive.isRepeatable;\n        }\n      },\n      locations: {\n        type: new GraphQLNonNull(new GraphQLList(new GraphQLNonNull(__DirectiveLocation))),\n        resolve: function resolve(directive) {\n          return directive.locations;\n        }\n      },\n      args: {\n        type: new GraphQLNonNull(new GraphQLList(new GraphQLNonNull(__InputValue))),\n        args: {\n          includeDeprecated: {\n            type: GraphQLBoolean,\n            defaultValue: false\n          }\n        },\n        resolve: function resolve(field, _ref) {\n          var includeDeprecated = _ref.includeDeprecated;\n          return includeDeprecated ? field.args : field.args.filter(function (arg) {\n            return arg.deprecationReason == null;\n          });\n        }\n      }\n    };\n  }\n});\nexport var __DirectiveLocation = new GraphQLEnumType({\n  name: '__DirectiveLocation',\n  description: 'A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.',\n  values: {\n    QUERY: {\n      value: DirectiveLocation.QUERY,\n      description: 'Location adjacent to a query operation.'\n    },\n    MUTATION: {\n      value: DirectiveLocation.MUTATION,\n      description: 'Location adjacent to a mutation operation.'\n    },\n    SUBSCRIPTION: {\n      value: DirectiveLocation.SUBSCRIPTION,\n      description: 'Location adjacent to a subscription operation.'\n    },\n    FIELD: {\n      value: DirectiveLocation.FIELD,\n      description: 'Location adjacent to a field.'\n    },\n    FRAGMENT_DEFINITION: {\n      value: DirectiveLocation.FRAGMENT_DEFINITION,\n      description: 'Location adjacent to a fragment definition.'\n    },\n    FRAGMENT_SPREAD: {\n      value: DirectiveLocation.FRAGMENT_SPREAD,\n      description: 'Location adjacent to a fragment spread.'\n    },\n    INLINE_FRAGMENT: {\n      value: DirectiveLocation.INLINE_FRAGMENT,\n      description: 'Location adjacent to an inline fragment.'\n    },\n    VARIABLE_DEFINITION: {\n      value: DirectiveLocation.VARIABLE_DEFINITION,\n      description: 'Location adjacent to a variable definition.'\n    },\n    SCHEMA: {\n      value: DirectiveLocation.SCHEMA,\n      description: 'Location adjacent to a schema definition.'\n    },\n    SCALAR: {\n      value: DirectiveLocation.SCALAR,\n      description: 'Location adjacent to a scalar definition.'\n    },\n    OBJECT: {\n      value: DirectiveLocation.OBJECT,\n      description: 'Location adjacent to an object type definition.'\n    },\n    FIELD_DEFINITION: {\n      value: DirectiveLocation.FIELD_DEFINITION,\n      description: 'Location adjacent to a field definition.'\n    },\n    ARGUMENT_DEFINITION: {\n      value: DirectiveLocation.ARGUMENT_DEFINITION,\n      description: 'Location adjacent to an argument definition.'\n    },\n    INTERFACE: {\n      value: DirectiveLocation.INTERFACE,\n      description: 'Location adjacent to an interface definition.'\n    },\n    UNION: {\n      value: DirectiveLocation.UNION,\n      description: 'Location adjacent to a union definition.'\n    },\n    ENUM: {\n      value: DirectiveLocation.ENUM,\n      description: 'Location adjacent to an enum definition.'\n    },\n    ENUM_VALUE: {\n      value: DirectiveLocation.ENUM_VALUE,\n      description: 'Location adjacent to an enum value definition.'\n    },\n    INPUT_OBJECT: {\n      value: DirectiveLocation.INPUT_OBJECT,\n      description: 'Location adjacent to an input object type definition.'\n    },\n    INPUT_FIELD_DEFINITION: {\n      value: DirectiveLocation.INPUT_FIELD_DEFINITION,\n      description: 'Location adjacent to an input object field definition.'\n    }\n  }\n});\nexport var __Type = new GraphQLObjectType({\n  name: '__Type',\n  description: 'The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\\n\\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByUrl`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.',\n  fields: function fields() {\n    return {\n      kind: {\n        type: new GraphQLNonNull(__TypeKind),\n        resolve: function resolve(type) {\n          if (isScalarType(type)) {\n            return TypeKind.SCALAR;\n          }\n\n          if (isObjectType(type)) {\n            return TypeKind.OBJECT;\n          }\n\n          if (isInterfaceType(type)) {\n            return TypeKind.INTERFACE;\n          }\n\n          if (isUnionType(type)) {\n            return TypeKind.UNION;\n          }\n\n          if (isEnumType(type)) {\n            return TypeKind.ENUM;\n          }\n\n          if (isInputObjectType(type)) {\n            return TypeKind.INPUT_OBJECT;\n          }\n\n          if (isListType(type)) {\n            return TypeKind.LIST;\n          } // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2618')\n\n\n          if (isNonNullType(type)) {\n            return TypeKind.NON_NULL;\n          } // istanbul ignore next (Not reachable. All possible types have been considered)\n\n\n          false || invariant(0, \"Unexpected type: \\\"\".concat(inspect(type), \"\\\".\"));\n        }\n      },\n      name: {\n        type: GraphQLString,\n        resolve: function resolve(type) {\n          return type.name !== undefined ? type.name : undefined;\n        }\n      },\n      description: {\n        type: GraphQLString,\n        resolve: function resolve(type) {\n          return type.description !== undefined ? type.description : undefined;\n        }\n      },\n      specifiedByUrl: {\n        type: GraphQLString,\n        resolve: function resolve(obj) {\n          return obj.specifiedByUrl !== undefined ? obj.specifiedByUrl : undefined;\n        }\n      },\n      fields: {\n        type: new GraphQLList(new GraphQLNonNull(__Field)),\n        args: {\n          includeDeprecated: {\n            type: GraphQLBoolean,\n            defaultValue: false\n          }\n        },\n        resolve: function resolve(type, _ref2) {\n          var includeDeprecated = _ref2.includeDeprecated;\n\n          if (isObjectType(type) || isInterfaceType(type)) {\n            var fields = objectValues(type.getFields());\n            return includeDeprecated ? fields : fields.filter(function (field) {\n              return field.deprecationReason == null;\n            });\n          }\n        }\n      },\n      interfaces: {\n        type: new GraphQLList(new GraphQLNonNull(__Type)),\n        resolve: function resolve(type) {\n          if (isObjectType(type) || isInterfaceType(type)) {\n            return type.getInterfaces();\n          }\n        }\n      },\n      possibleTypes: {\n        type: new GraphQLList(new GraphQLNonNull(__Type)),\n        resolve: function resolve(type, _args, _context, _ref3) {\n          var schema = _ref3.schema;\n\n          if (isAbstractType(type)) {\n            return schema.getPossibleTypes(type);\n          }\n        }\n      },\n      enumValues: {\n        type: new GraphQLList(new GraphQLNonNull(__EnumValue)),\n        args: {\n          includeDeprecated: {\n            type: GraphQLBoolean,\n            defaultValue: false\n          }\n        },\n        resolve: function resolve(type, _ref4) {\n          var includeDeprecated = _ref4.includeDeprecated;\n\n          if (isEnumType(type)) {\n            var values = type.getValues();\n            return includeDeprecated ? values : values.filter(function (field) {\n              return field.deprecationReason == null;\n            });\n          }\n        }\n      },\n      inputFields: {\n        type: new GraphQLList(new GraphQLNonNull(__InputValue)),\n        args: {\n          includeDeprecated: {\n            type: GraphQLBoolean,\n            defaultValue: false\n          }\n        },\n        resolve: function resolve(type, _ref5) {\n          var includeDeprecated = _ref5.includeDeprecated;\n\n          if (isInputObjectType(type)) {\n            var values = objectValues(type.getFields());\n            return includeDeprecated ? values : values.filter(function (field) {\n              return field.deprecationReason == null;\n            });\n          }\n        }\n      },\n      ofType: {\n        type: __Type,\n        resolve: function resolve(type) {\n          return type.ofType !== undefined ? type.ofType : undefined;\n        }\n      }\n    };\n  }\n});\nexport var __Field = new GraphQLObjectType({\n  name: '__Field',\n  description: 'Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.',\n  fields: function fields() {\n    return {\n      name: {\n        type: new GraphQLNonNull(GraphQLString),\n        resolve: function resolve(field) {\n          return field.name;\n        }\n      },\n      description: {\n        type: GraphQLString,\n        resolve: function resolve(field) {\n          return field.description;\n        }\n      },\n      args: {\n        type: new GraphQLNonNull(new GraphQLList(new GraphQLNonNull(__InputValue))),\n        args: {\n          includeDeprecated: {\n            type: GraphQLBoolean,\n            defaultValue: false\n          }\n        },\n        resolve: function resolve(field, _ref6) {\n          var includeDeprecated = _ref6.includeDeprecated;\n          return includeDeprecated ? field.args : field.args.filter(function (arg) {\n            return arg.deprecationReason == null;\n          });\n        }\n      },\n      type: {\n        type: new GraphQLNonNull(__Type),\n        resolve: function resolve(field) {\n          return field.type;\n        }\n      },\n      isDeprecated: {\n        type: new GraphQLNonNull(GraphQLBoolean),\n        resolve: function resolve(field) {\n          return field.deprecationReason != null;\n        }\n      },\n      deprecationReason: {\n        type: GraphQLString,\n        resolve: function resolve(field) {\n          return field.deprecationReason;\n        }\n      }\n    };\n  }\n});\nexport var __InputValue = new GraphQLObjectType({\n  name: '__InputValue',\n  description: 'Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.',\n  fields: function fields() {\n    return {\n      name: {\n        type: new GraphQLNonNull(GraphQLString),\n        resolve: function resolve(inputValue) {\n          return inputValue.name;\n        }\n      },\n      description: {\n        type: GraphQLString,\n        resolve: function resolve(inputValue) {\n          return inputValue.description;\n        }\n      },\n      type: {\n        type: new GraphQLNonNull(__Type),\n        resolve: function resolve(inputValue) {\n          return inputValue.type;\n        }\n      },\n      defaultValue: {\n        type: GraphQLString,\n        description: 'A GraphQL-formatted string representing the default value for this input value.',\n        resolve: function resolve(inputValue) {\n          var type = inputValue.type,\n              defaultValue = inputValue.defaultValue;\n          var valueAST = astFromValue(defaultValue, type);\n          return valueAST ? print(valueAST) : null;\n        }\n      },\n      isDeprecated: {\n        type: new GraphQLNonNull(GraphQLBoolean),\n        resolve: function resolve(field) {\n          return field.deprecationReason != null;\n        }\n      },\n      deprecationReason: {\n        type: GraphQLString,\n        resolve: function resolve(obj) {\n          return obj.deprecationReason;\n        }\n      }\n    };\n  }\n});\nexport var __EnumValue = new GraphQLObjectType({\n  name: '__EnumValue',\n  description: 'One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.',\n  fields: function fields() {\n    return {\n      name: {\n        type: new GraphQLNonNull(GraphQLString),\n        resolve: function resolve(enumValue) {\n          return enumValue.name;\n        }\n      },\n      description: {\n        type: GraphQLString,\n        resolve: function resolve(enumValue) {\n          return enumValue.description;\n        }\n      },\n      isDeprecated: {\n        type: new GraphQLNonNull(GraphQLBoolean),\n        resolve: function resolve(enumValue) {\n          return enumValue.deprecationReason != null;\n        }\n      },\n      deprecationReason: {\n        type: GraphQLString,\n        resolve: function resolve(enumValue) {\n          return enumValue.deprecationReason;\n        }\n      }\n    };\n  }\n});\nexport var TypeKind = Object.freeze({\n  SCALAR: 'SCALAR',\n  OBJECT: 'OBJECT',\n  INTERFACE: 'INTERFACE',\n  UNION: 'UNION',\n  ENUM: 'ENUM',\n  INPUT_OBJECT: 'INPUT_OBJECT',\n  LIST: 'LIST',\n  NON_NULL: 'NON_NULL'\n});\nexport var __TypeKind = new GraphQLEnumType({\n  name: '__TypeKind',\n  description: 'An enum describing what kind of type a given `__Type` is.',\n  values: {\n    SCALAR: {\n      value: TypeKind.SCALAR,\n      description: 'Indicates this type is a scalar.'\n    },\n    OBJECT: {\n      value: TypeKind.OBJECT,\n      description: 'Indicates this type is an object. `fields` and `interfaces` are valid fields.'\n    },\n    INTERFACE: {\n      value: TypeKind.INTERFACE,\n      description: 'Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields.'\n    },\n    UNION: {\n      value: TypeKind.UNION,\n      description: 'Indicates this type is a union. `possibleTypes` is a valid field.'\n    },\n    ENUM: {\n      value: TypeKind.ENUM,\n      description: 'Indicates this type is an enum. `enumValues` is a valid field.'\n    },\n    INPUT_OBJECT: {\n      value: TypeKind.INPUT_OBJECT,\n      description: 'Indicates this type is an input object. `inputFields` is a valid field.'\n    },\n    LIST: {\n      value: TypeKind.LIST,\n      description: 'Indicates this type is a list. `ofType` is a valid field.'\n    },\n    NON_NULL: {\n      value: TypeKind.NON_NULL,\n      description: 'Indicates this type is a non-null. `ofType` is a valid field.'\n    }\n  }\n});\n/**\n * Note that these are GraphQLField and not GraphQLFieldConfig,\n * so the format for args is different.\n */\n\nexport var SchemaMetaFieldDef = {\n  name: '__schema',\n  type: new GraphQLNonNull(__Schema),\n  description: 'Access the current type schema of this server.',\n  args: [],\n  resolve: function resolve(_source, _args, _context, _ref7) {\n    var schema = _ref7.schema;\n    return schema;\n  },\n  isDeprecated: false,\n  deprecationReason: undefined,\n  extensions: undefined,\n  astNode: undefined\n};\nexport var TypeMetaFieldDef = {\n  name: '__type',\n  type: __Type,\n  description: 'Request the type information of a single type.',\n  args: [{\n    name: 'name',\n    description: undefined,\n    type: new GraphQLNonNull(GraphQLString),\n    defaultValue: undefined,\n    deprecationReason: undefined,\n    extensions: undefined,\n    astNode: undefined\n  }],\n  resolve: function resolve(_source, _ref8, _context, _ref9) {\n    var name = _ref8.name;\n    var schema = _ref9.schema;\n    return schema.getType(name);\n  },\n  isDeprecated: false,\n  deprecationReason: undefined,\n  extensions: undefined,\n  astNode: undefined\n};\nexport var TypeNameMetaFieldDef = {\n  name: '__typename',\n  type: new GraphQLNonNull(GraphQLString),\n  description: 'The name of the current Object type at runtime.',\n  args: [],\n  resolve: function resolve(_source, _args, _context, _ref10) {\n    var parentType = _ref10.parentType;\n    return parentType.name;\n  },\n  isDeprecated: false,\n  deprecationReason: undefined,\n  extensions: undefined,\n  astNode: undefined\n};\nexport var introspectionTypes = Object.freeze([__Schema, __Directive, __DirectiveLocation, __Type, __Field, __InputValue, __EnumValue, __TypeKind]);\nexport function isIntrospectionType(type) {\n  return introspectionTypes.some(function (_ref11) {\n    var name = _ref11.name;\n    return type.name === name;\n  });\n}\n","function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport objectEntries from \"../polyfills/objectEntries.mjs\";\nimport { SYMBOL_TO_STRING_TAG } from \"../polyfills/symbols.mjs\";\nimport inspect from \"../jsutils/inspect.mjs\";\nimport toObjMap from \"../jsutils/toObjMap.mjs\";\nimport devAssert from \"../jsutils/devAssert.mjs\";\nimport instanceOf from \"../jsutils/instanceOf.mjs\";\nimport isObjectLike from \"../jsutils/isObjectLike.mjs\";\nimport defineInspect from \"../jsutils/defineInspect.mjs\";\nimport { DirectiveLocation } from \"../language/directiveLocation.mjs\";\nimport { GraphQLString, GraphQLBoolean } from \"./scalars.mjs\";\nimport { argsToArgsConfig, GraphQLNonNull } from \"./definition.mjs\";\n/**\n * Test if the given value is a GraphQL directive.\n */\n\n// eslint-disable-next-line no-redeclare\nexport function isDirective(directive) {\n  return instanceOf(directive, GraphQLDirective);\n}\nexport function assertDirective(directive) {\n  if (!isDirective(directive)) {\n    throw new Error(\"Expected \".concat(inspect(directive), \" to be a GraphQL directive.\"));\n  }\n\n  return directive;\n}\n/**\n * Directives are used by the GraphQL runtime as a way of modifying execution\n * behavior. Type system creators will usually not create these directly.\n */\n\nexport var GraphQLDirective = /*#__PURE__*/function () {\n  function GraphQLDirective(config) {\n    var _config$isRepeatable, _config$args;\n\n    this.name = config.name;\n    this.description = config.description;\n    this.locations = config.locations;\n    this.isRepeatable = (_config$isRepeatable = config.isRepeatable) !== null && _config$isRepeatable !== void 0 ? _config$isRepeatable : false;\n    this.extensions = config.extensions && toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    config.name || devAssert(0, 'Directive must be named.');\n    Array.isArray(config.locations) || devAssert(0, \"@\".concat(config.name, \" locations must be an Array.\"));\n    var args = (_config$args = config.args) !== null && _config$args !== void 0 ? _config$args : {};\n    isObjectLike(args) && !Array.isArray(args) || devAssert(0, \"@\".concat(config.name, \" args must be an object with argument names as keys.\"));\n    this.args = objectEntries(args).map(function (_ref) {\n      var argName = _ref[0],\n          argConfig = _ref[1];\n      return {\n        name: argName,\n        description: argConfig.description,\n        type: argConfig.type,\n        defaultValue: argConfig.defaultValue,\n        deprecationReason: argConfig.deprecationReason,\n        extensions: argConfig.extensions && toObjMap(argConfig.extensions),\n        astNode: argConfig.astNode\n      };\n    });\n  }\n\n  var _proto = GraphQLDirective.prototype;\n\n  _proto.toConfig = function toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      locations: this.locations,\n      args: argsToArgsConfig(this.args),\n      isRepeatable: this.isRepeatable,\n      extensions: this.extensions,\n      astNode: this.astNode\n    };\n  };\n\n  _proto.toString = function toString() {\n    return '@' + this.name;\n  };\n\n  _proto.toJSON = function toJSON() {\n    return this.toString();\n  } // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n  ;\n\n  _createClass(GraphQLDirective, [{\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'GraphQLDirective';\n    }\n  }]);\n\n  return GraphQLDirective;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(GraphQLDirective);\n\n/**\n * Used to conditionally include fields or fragments.\n */\nexport var GraphQLIncludeDirective = new GraphQLDirective({\n  name: 'include',\n  description: 'Directs the executor to include this field or fragment only when the `if` argument is true.',\n  locations: [DirectiveLocation.FIELD, DirectiveLocation.FRAGMENT_SPREAD, DirectiveLocation.INLINE_FRAGMENT],\n  args: {\n    if: {\n      type: new GraphQLNonNull(GraphQLBoolean),\n      description: 'Included when true.'\n    }\n  }\n});\n/**\n * Used to conditionally skip (exclude) fields or fragments.\n */\n\nexport var GraphQLSkipDirective = new GraphQLDirective({\n  name: 'skip',\n  description: 'Directs the executor to skip this field or fragment when the `if` argument is true.',\n  locations: [DirectiveLocation.FIELD, DirectiveLocation.FRAGMENT_SPREAD, DirectiveLocation.INLINE_FRAGMENT],\n  args: {\n    if: {\n      type: new GraphQLNonNull(GraphQLBoolean),\n      description: 'Skipped when true.'\n    }\n  }\n});\n/**\n * Constant string used for default reason for a deprecation.\n */\n\nexport var DEFAULT_DEPRECATION_REASON = 'No longer supported';\n/**\n * Used to declare element of a GraphQL schema as deprecated.\n */\n\nexport var GraphQLDeprecatedDirective = new GraphQLDirective({\n  name: 'deprecated',\n  description: 'Marks an element of a GraphQL schema as no longer supported.',\n  locations: [DirectiveLocation.FIELD_DEFINITION, DirectiveLocation.ARGUMENT_DEFINITION, DirectiveLocation.INPUT_FIELD_DEFINITION, DirectiveLocation.ENUM_VALUE],\n  args: {\n    reason: {\n      type: GraphQLString,\n      description: 'Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).',\n      defaultValue: DEFAULT_DEPRECATION_REASON\n    }\n  }\n});\n/**\n * Used to provide a URL for specifying the behaviour of custom scalar definitions.\n */\n\nexport var GraphQLSpecifiedByDirective = new GraphQLDirective({\n  name: 'specifiedBy',\n  description: 'Exposes a URL that specifies the behaviour of this scalar.',\n  locations: [DirectiveLocation.SCALAR],\n  args: {\n    url: {\n      type: new GraphQLNonNull(GraphQLString),\n      description: 'The URL that specifies the behaviour of this scalar.'\n    }\n  }\n});\n/**\n * The full list of specified directives.\n */\n\nexport var specifiedDirectives = Object.freeze([GraphQLIncludeDirective, GraphQLSkipDirective, GraphQLDeprecatedDirective, GraphQLSpecifiedByDirective]);\nexport function isSpecifiedDirective(directive) {\n  return specifiedDirectives.some(function (_ref2) {\n    var name = _ref2.name;\n    return name === directive.name;\n  });\n}\n","function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport find from \"../polyfills/find.mjs\";\nimport arrayFrom from \"../polyfills/arrayFrom.mjs\";\nimport objectValues from \"../polyfills/objectValues.mjs\";\nimport { SYMBOL_TO_STRING_TAG } from \"../polyfills/symbols.mjs\";\nimport inspect from \"../jsutils/inspect.mjs\";\nimport toObjMap from \"../jsutils/toObjMap.mjs\";\nimport devAssert from \"../jsutils/devAssert.mjs\";\nimport instanceOf from \"../jsutils/instanceOf.mjs\";\nimport isObjectLike from \"../jsutils/isObjectLike.mjs\";\nimport { __Schema } from \"./introspection.mjs\";\nimport { GraphQLDirective, isDirective, specifiedDirectives } from \"./directives.mjs\";\nimport { isObjectType, isInterfaceType, isUnionType, isInputObjectType, getNamedType } from \"./definition.mjs\";\n/**\n * Test if the given value is a GraphQL schema.\n */\n\n// eslint-disable-next-line no-redeclare\nexport function isSchema(schema) {\n  return instanceOf(schema, GraphQLSchema);\n}\nexport function assertSchema(schema) {\n  if (!isSchema(schema)) {\n    throw new Error(\"Expected \".concat(inspect(schema), \" to be a GraphQL schema.\"));\n  }\n\n  return schema;\n}\n/**\n * Schema Definition\n *\n * A Schema is created by supplying the root types of each type of operation,\n * query and mutation (optional). A schema definition is then supplied to the\n * validator and executor.\n *\n * Example:\n *\n *     const MyAppSchema = new GraphQLSchema({\n *       query: MyAppQueryRootType,\n *       mutation: MyAppMutationRootType,\n *     })\n *\n * Note: When the schema is constructed, by default only the types that are\n * reachable by traversing the root types are included, other types must be\n * explicitly referenced.\n *\n * Example:\n *\n *     const characterInterface = new GraphQLInterfaceType({\n *       name: 'Character',\n *       ...\n *     });\n *\n *     const humanType = new GraphQLObjectType({\n *       name: 'Human',\n *       interfaces: [characterInterface],\n *       ...\n *     });\n *\n *     const droidType = new GraphQLObjectType({\n *       name: 'Droid',\n *       interfaces: [characterInterface],\n *       ...\n *     });\n *\n *     const schema = new GraphQLSchema({\n *       query: new GraphQLObjectType({\n *         name: 'Query',\n *         fields: {\n *           hero: { type: characterInterface, ... },\n *         }\n *       }),\n *       ...\n *       // Since this schema references only the `Character` interface it's\n *       // necessary to explicitly list the types that implement it if\n *       // you want them to be included in the final schema.\n *       types: [humanType, droidType],\n *     })\n *\n * Note: If an array of `directives` are provided to GraphQLSchema, that will be\n * the exact list of directives represented and allowed. If `directives` is not\n * provided then a default set of the specified directives (e.g. @include and\n * @skip) will be used. If you wish to provide *additional* directives to these\n * specified directives, you must explicitly declare them. Example:\n *\n *     const MyAppSchema = new GraphQLSchema({\n *       ...\n *       directives: specifiedDirectives.concat([ myCustomDirective ]),\n *     })\n *\n */\n\nexport var GraphQLSchema = /*#__PURE__*/function () {\n  // Used as a cache for validateSchema().\n  function GraphQLSchema(config) {\n    var _config$directives;\n\n    // If this schema was built from a source known to be valid, then it may be\n    // marked with assumeValid to avoid an additional type system validation.\n    this.__validationErrors = config.assumeValid === true ? [] : undefined; // Check for common mistakes during construction to produce early errors.\n\n    isObjectLike(config) || devAssert(0, 'Must provide configuration object.');\n    !config.types || Array.isArray(config.types) || devAssert(0, \"\\\"types\\\" must be Array if provided but got: \".concat(inspect(config.types), \".\"));\n    !config.directives || Array.isArray(config.directives) || devAssert(0, '\"directives\" must be Array if provided but got: ' + \"\".concat(inspect(config.directives), \".\"));\n    this.description = config.description;\n    this.extensions = config.extensions && toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = config.extensionASTNodes;\n    this._queryType = config.query;\n    this._mutationType = config.mutation;\n    this._subscriptionType = config.subscription; // Provide specified directives (e.g. @include and @skip) by default.\n\n    this._directives = (_config$directives = config.directives) !== null && _config$directives !== void 0 ? _config$directives : specifiedDirectives; // To preserve order of user-provided types, we add first to add them to\n    // the set of \"collected\" types, so `collectReferencedTypes` ignore them.\n\n    var allReferencedTypes = new Set(config.types);\n\n    if (config.types != null) {\n      for (var _i2 = 0, _config$types2 = config.types; _i2 < _config$types2.length; _i2++) {\n        var type = _config$types2[_i2];\n        // When we ready to process this type, we remove it from \"collected\" types\n        // and then add it together with all dependent types in the correct position.\n        allReferencedTypes.delete(type);\n        collectReferencedTypes(type, allReferencedTypes);\n      }\n    }\n\n    if (this._queryType != null) {\n      collectReferencedTypes(this._queryType, allReferencedTypes);\n    }\n\n    if (this._mutationType != null) {\n      collectReferencedTypes(this._mutationType, allReferencedTypes);\n    }\n\n    if (this._subscriptionType != null) {\n      collectReferencedTypes(this._subscriptionType, allReferencedTypes);\n    }\n\n    for (var _i4 = 0, _this$_directives2 = this._directives; _i4 < _this$_directives2.length; _i4++) {\n      var directive = _this$_directives2[_i4];\n\n      // Directives are not validated until validateSchema() is called.\n      if (isDirective(directive)) {\n        for (var _i6 = 0, _directive$args2 = directive.args; _i6 < _directive$args2.length; _i6++) {\n          var arg = _directive$args2[_i6];\n          collectReferencedTypes(arg.type, allReferencedTypes);\n        }\n      }\n    }\n\n    collectReferencedTypes(__Schema, allReferencedTypes); // Storing the resulting map for reference by the schema.\n\n    this._typeMap = Object.create(null);\n    this._subTypeMap = Object.create(null); // Keep track of all implementations by interface name.\n\n    this._implementationsMap = Object.create(null);\n\n    for (var _i8 = 0, _arrayFrom2 = arrayFrom(allReferencedTypes); _i8 < _arrayFrom2.length; _i8++) {\n      var namedType = _arrayFrom2[_i8];\n\n      if (namedType == null) {\n        continue;\n      }\n\n      var typeName = namedType.name;\n      typeName || devAssert(0, 'One of the provided types for building the Schema is missing a name.');\n\n      if (this._typeMap[typeName] !== undefined) {\n        throw new Error(\"Schema must contain uniquely named types but contains multiple types named \\\"\".concat(typeName, \"\\\".\"));\n      }\n\n      this._typeMap[typeName] = namedType;\n\n      if (isInterfaceType(namedType)) {\n        // Store implementations by interface.\n        for (var _i10 = 0, _namedType$getInterfa2 = namedType.getInterfaces(); _i10 < _namedType$getInterfa2.length; _i10++) {\n          var iface = _namedType$getInterfa2[_i10];\n\n          if (isInterfaceType(iface)) {\n            var implementations = this._implementationsMap[iface.name];\n\n            if (implementations === undefined) {\n              implementations = this._implementationsMap[iface.name] = {\n                objects: [],\n                interfaces: []\n              };\n            }\n\n            implementations.interfaces.push(namedType);\n          }\n        }\n      } else if (isObjectType(namedType)) {\n        // Store implementations by objects.\n        for (var _i12 = 0, _namedType$getInterfa4 = namedType.getInterfaces(); _i12 < _namedType$getInterfa4.length; _i12++) {\n          var _iface = _namedType$getInterfa4[_i12];\n\n          if (isInterfaceType(_iface)) {\n            var _implementations = this._implementationsMap[_iface.name];\n\n            if (_implementations === undefined) {\n              _implementations = this._implementationsMap[_iface.name] = {\n                objects: [],\n                interfaces: []\n              };\n            }\n\n            _implementations.objects.push(namedType);\n          }\n        }\n      }\n    }\n  }\n\n  var _proto = GraphQLSchema.prototype;\n\n  _proto.getQueryType = function getQueryType() {\n    return this._queryType;\n  };\n\n  _proto.getMutationType = function getMutationType() {\n    return this._mutationType;\n  };\n\n  _proto.getSubscriptionType = function getSubscriptionType() {\n    return this._subscriptionType;\n  };\n\n  _proto.getTypeMap = function getTypeMap() {\n    return this._typeMap;\n  };\n\n  _proto.getType = function getType(name) {\n    return this.getTypeMap()[name];\n  };\n\n  _proto.getPossibleTypes = function getPossibleTypes(abstractType) {\n    return isUnionType(abstractType) ? abstractType.getTypes() : this.getImplementations(abstractType).objects;\n  };\n\n  _proto.getImplementations = function getImplementations(interfaceType) {\n    var implementations = this._implementationsMap[interfaceType.name];\n    return implementations !== null && implementations !== void 0 ? implementations : {\n      objects: [],\n      interfaces: []\n    };\n  } // @deprecated: use isSubType instead - will be removed in v16.\n  ;\n\n  _proto.isPossibleType = function isPossibleType(abstractType, possibleType) {\n    return this.isSubType(abstractType, possibleType);\n  };\n\n  _proto.isSubType = function isSubType(abstractType, maybeSubType) {\n    var map = this._subTypeMap[abstractType.name];\n\n    if (map === undefined) {\n      map = Object.create(null);\n\n      if (isUnionType(abstractType)) {\n        for (var _i14 = 0, _abstractType$getType2 = abstractType.getTypes(); _i14 < _abstractType$getType2.length; _i14++) {\n          var type = _abstractType$getType2[_i14];\n          map[type.name] = true;\n        }\n      } else {\n        var implementations = this.getImplementations(abstractType);\n\n        for (var _i16 = 0, _implementations$obje2 = implementations.objects; _i16 < _implementations$obje2.length; _i16++) {\n          var _type = _implementations$obje2[_i16];\n          map[_type.name] = true;\n        }\n\n        for (var _i18 = 0, _implementations$inte2 = implementations.interfaces; _i18 < _implementations$inte2.length; _i18++) {\n          var _type2 = _implementations$inte2[_i18];\n          map[_type2.name] = true;\n        }\n      }\n\n      this._subTypeMap[abstractType.name] = map;\n    }\n\n    return map[maybeSubType.name] !== undefined;\n  };\n\n  _proto.getDirectives = function getDirectives() {\n    return this._directives;\n  };\n\n  _proto.getDirective = function getDirective(name) {\n    return find(this.getDirectives(), function (directive) {\n      return directive.name === name;\n    });\n  };\n\n  _proto.toConfig = function toConfig() {\n    var _this$extensionASTNod;\n\n    return {\n      description: this.description,\n      query: this.getQueryType(),\n      mutation: this.getMutationType(),\n      subscription: this.getSubscriptionType(),\n      types: objectValues(this.getTypeMap()),\n      directives: this.getDirectives().slice(),\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: (_this$extensionASTNod = this.extensionASTNodes) !== null && _this$extensionASTNod !== void 0 ? _this$extensionASTNod : [],\n      assumeValid: this.__validationErrors !== undefined\n    };\n  } // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n  ;\n\n  _createClass(GraphQLSchema, [{\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'GraphQLSchema';\n    }\n  }]);\n\n  return GraphQLSchema;\n}();\n\nfunction collectReferencedTypes(type, typeSet) {\n  var namedType = getNamedType(type);\n\n  if (!typeSet.has(namedType)) {\n    typeSet.add(namedType);\n\n    if (isUnionType(namedType)) {\n      for (var _i20 = 0, _namedType$getTypes2 = namedType.getTypes(); _i20 < _namedType$getTypes2.length; _i20++) {\n        var memberType = _namedType$getTypes2[_i20];\n        collectReferencedTypes(memberType, typeSet);\n      }\n    } else if (isObjectType(namedType) || isInterfaceType(namedType)) {\n      for (var _i22 = 0, _namedType$getInterfa6 = namedType.getInterfaces(); _i22 < _namedType$getInterfa6.length; _i22++) {\n        var interfaceType = _namedType$getInterfa6[_i22];\n        collectReferencedTypes(interfaceType, typeSet);\n      }\n\n      for (var _i24 = 0, _objectValues2 = objectValues(namedType.getFields()); _i24 < _objectValues2.length; _i24++) {\n        var field = _objectValues2[_i24];\n        collectReferencedTypes(field.type, typeSet);\n\n        for (var _i26 = 0, _field$args2 = field.args; _i26 < _field$args2.length; _i26++) {\n          var arg = _field$args2[_i26];\n          collectReferencedTypes(arg.type, typeSet);\n        }\n      }\n    } else if (isInputObjectType(namedType)) {\n      for (var _i28 = 0, _objectValues4 = objectValues(namedType.getFields()); _i28 < _objectValues4.length; _i28++) {\n        var _field = _objectValues4[_i28];\n        collectReferencedTypes(_field.type, typeSet);\n      }\n    }\n  }\n\n  return typeSet;\n}\n","import find from \"../polyfills/find.mjs\";\nimport objectValues from \"../polyfills/objectValues.mjs\";\nimport inspect from \"../jsutils/inspect.mjs\";\nimport { GraphQLError } from \"../error/GraphQLError.mjs\";\nimport { locatedError } from \"../error/locatedError.mjs\";\nimport { isValidNameError } from \"../utilities/assertValidName.mjs\";\nimport { isEqualType, isTypeSubTypeOf } from \"../utilities/typeComparators.mjs\";\nimport { assertSchema } from \"./schema.mjs\";\nimport { isIntrospectionType } from \"./introspection.mjs\";\nimport { isDirective, GraphQLDeprecatedDirective } from \"./directives.mjs\";\nimport { isObjectType, isInterfaceType, isUnionType, isEnumType, isInputObjectType, isNamedType, isNonNullType, isInputType, isOutputType, isRequiredArgument, isRequiredInputField } from \"./definition.mjs\";\n/**\n * Implements the \"Type Validation\" sub-sections of the specification's\n * \"Type System\" section.\n *\n * Validation runs synchronously, returning an array of encountered errors, or\n * an empty array if no errors were encountered and the Schema is valid.\n */\n\nexport function validateSchema(schema) {\n  // First check to ensure the provided value is in fact a GraphQLSchema.\n  assertSchema(schema); // If this Schema has already been validated, return the previous results.\n\n  if (schema.__validationErrors) {\n    return schema.__validationErrors;\n  } // Validate the schema, producing a list of errors.\n\n\n  var context = new SchemaValidationContext(schema);\n  validateRootTypes(context);\n  validateDirectives(context);\n  validateTypes(context); // Persist the results of validation before returning to ensure validation\n  // does not run multiple times for this schema.\n\n  var errors = context.getErrors();\n  schema.__validationErrors = errors;\n  return errors;\n}\n/**\n * Utility function which asserts a schema is valid by throwing an error if\n * it is invalid.\n */\n\nexport function assertValidSchema(schema) {\n  var errors = validateSchema(schema);\n\n  if (errors.length !== 0) {\n    throw new Error(errors.map(function (error) {\n      return error.message;\n    }).join('\\n\\n'));\n  }\n}\n\nvar SchemaValidationContext = /*#__PURE__*/function () {\n  function SchemaValidationContext(schema) {\n    this._errors = [];\n    this.schema = schema;\n  }\n\n  var _proto = SchemaValidationContext.prototype;\n\n  _proto.reportError = function reportError(message, nodes) {\n    var _nodes = Array.isArray(nodes) ? nodes.filter(Boolean) : nodes;\n\n    this.addError(new GraphQLError(message, _nodes));\n  };\n\n  _proto.addError = function addError(error) {\n    this._errors.push(error);\n  };\n\n  _proto.getErrors = function getErrors() {\n    return this._errors;\n  };\n\n  return SchemaValidationContext;\n}();\n\nfunction validateRootTypes(context) {\n  var schema = context.schema;\n  var queryType = schema.getQueryType();\n\n  if (!queryType) {\n    context.reportError('Query root type must be provided.', schema.astNode);\n  } else if (!isObjectType(queryType)) {\n    var _getOperationTypeNode;\n\n    context.reportError(\"Query root type must be Object type, it cannot be \".concat(inspect(queryType), \".\"), (_getOperationTypeNode = getOperationTypeNode(schema, 'query')) !== null && _getOperationTypeNode !== void 0 ? _getOperationTypeNode : queryType.astNode);\n  }\n\n  var mutationType = schema.getMutationType();\n\n  if (mutationType && !isObjectType(mutationType)) {\n    var _getOperationTypeNode2;\n\n    context.reportError('Mutation root type must be Object type if provided, it cannot be ' + \"\".concat(inspect(mutationType), \".\"), (_getOperationTypeNode2 = getOperationTypeNode(schema, 'mutation')) !== null && _getOperationTypeNode2 !== void 0 ? _getOperationTypeNode2 : mutationType.astNode);\n  }\n\n  var subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType && !isObjectType(subscriptionType)) {\n    var _getOperationTypeNode3;\n\n    context.reportError('Subscription root type must be Object type if provided, it cannot be ' + \"\".concat(inspect(subscriptionType), \".\"), (_getOperationTypeNode3 = getOperationTypeNode(schema, 'subscription')) !== null && _getOperationTypeNode3 !== void 0 ? _getOperationTypeNode3 : subscriptionType.astNode);\n  }\n}\n\nfunction getOperationTypeNode(schema, operation) {\n  var operationNodes = getAllSubNodes(schema, function (node) {\n    return node.operationTypes;\n  });\n\n  for (var _i2 = 0; _i2 < operationNodes.length; _i2++) {\n    var node = operationNodes[_i2];\n\n    if (node.operation === operation) {\n      return node.type;\n    }\n  }\n\n  return undefined;\n}\n\nfunction validateDirectives(context) {\n  for (var _i4 = 0, _context$schema$getDi2 = context.schema.getDirectives(); _i4 < _context$schema$getDi2.length; _i4++) {\n    var directive = _context$schema$getDi2[_i4];\n\n    // Ensure all directives are in fact GraphQL directives.\n    if (!isDirective(directive)) {\n      context.reportError(\"Expected directive but got: \".concat(inspect(directive), \".\"), directive === null || directive === void 0 ? void 0 : directive.astNode);\n      continue;\n    } // Ensure they are named correctly.\n\n\n    validateName(context, directive); // TODO: Ensure proper locations.\n    // Ensure the arguments are valid.\n\n    for (var _i6 = 0, _directive$args2 = directive.args; _i6 < _directive$args2.length; _i6++) {\n      var arg = _directive$args2[_i6];\n      // Ensure they are named correctly.\n      validateName(context, arg); // Ensure the type is an input type.\n\n      if (!isInputType(arg.type)) {\n        context.reportError(\"The type of @\".concat(directive.name, \"(\").concat(arg.name, \":) must be Input Type \") + \"but got: \".concat(inspect(arg.type), \".\"), arg.astNode);\n      }\n\n      if (isRequiredArgument(arg) && arg.deprecationReason != null) {\n        var _arg$astNode;\n\n        context.reportError(\"Required argument @\".concat(directive.name, \"(\").concat(arg.name, \":) cannot be deprecated.\"), [getDeprecatedDirectiveNode(arg.astNode), // istanbul ignore next (TODO need to write coverage tests)\n        (_arg$astNode = arg.astNode) === null || _arg$astNode === void 0 ? void 0 : _arg$astNode.type]);\n      }\n    }\n  }\n}\n\nfunction validateName(context, node) {\n  // Ensure names are valid, however introspection types opt out.\n  var error = isValidNameError(node.name);\n\n  if (error) {\n    context.addError(locatedError(error, node.astNode));\n  }\n}\n\nfunction validateTypes(context) {\n  var validateInputObjectCircularRefs = createInputObjectCircularRefsValidator(context);\n  var typeMap = context.schema.getTypeMap();\n\n  for (var _i8 = 0, _objectValues2 = objectValues(typeMap); _i8 < _objectValues2.length; _i8++) {\n    var type = _objectValues2[_i8];\n\n    // Ensure all provided types are in fact GraphQL type.\n    if (!isNamedType(type)) {\n      context.reportError(\"Expected GraphQL named type but got: \".concat(inspect(type), \".\"), type.astNode);\n      continue;\n    } // Ensure it is named correctly (excluding introspection types).\n\n\n    if (!isIntrospectionType(type)) {\n      validateName(context, type);\n    }\n\n    if (isObjectType(type)) {\n      // Ensure fields are valid\n      validateFields(context, type); // Ensure objects implement the interfaces they claim to.\n\n      validateInterfaces(context, type);\n    } else if (isInterfaceType(type)) {\n      // Ensure fields are valid.\n      validateFields(context, type); // Ensure interfaces implement the interfaces they claim to.\n\n      validateInterfaces(context, type);\n    } else if (isUnionType(type)) {\n      // Ensure Unions include valid member types.\n      validateUnionMembers(context, type);\n    } else if (isEnumType(type)) {\n      // Ensure Enums have valid values.\n      validateEnumValues(context, type);\n    } else if (isInputObjectType(type)) {\n      // Ensure Input Object fields are valid.\n      validateInputFields(context, type); // Ensure Input Objects do not contain non-nullable circular references\n\n      validateInputObjectCircularRefs(type);\n    }\n  }\n}\n\nfunction validateFields(context, type) {\n  var fields = objectValues(type.getFields()); // Objects and Interfaces both must define one or more fields.\n\n  if (fields.length === 0) {\n    context.reportError(\"Type \".concat(type.name, \" must define one or more fields.\"), getAllNodes(type));\n  }\n\n  for (var _i10 = 0; _i10 < fields.length; _i10++) {\n    var field = fields[_i10];\n    // Ensure they are named correctly.\n    validateName(context, field); // Ensure the type is an output type\n\n    if (!isOutputType(field.type)) {\n      var _field$astNode;\n\n      context.reportError(\"The type of \".concat(type.name, \".\").concat(field.name, \" must be Output Type \") + \"but got: \".concat(inspect(field.type), \".\"), (_field$astNode = field.astNode) === null || _field$astNode === void 0 ? void 0 : _field$astNode.type);\n    } // Ensure the arguments are valid\n\n\n    for (var _i12 = 0, _field$args2 = field.args; _i12 < _field$args2.length; _i12++) {\n      var arg = _field$args2[_i12];\n      var argName = arg.name; // Ensure they are named correctly.\n\n      validateName(context, arg); // Ensure the type is an input type\n\n      if (!isInputType(arg.type)) {\n        var _arg$astNode2;\n\n        context.reportError(\"The type of \".concat(type.name, \".\").concat(field.name, \"(\").concat(argName, \":) must be Input \") + \"Type but got: \".concat(inspect(arg.type), \".\"), (_arg$astNode2 = arg.astNode) === null || _arg$astNode2 === void 0 ? void 0 : _arg$astNode2.type);\n      }\n\n      if (isRequiredArgument(arg) && arg.deprecationReason != null) {\n        var _arg$astNode3;\n\n        context.reportError(\"Required argument \".concat(type.name, \".\").concat(field.name, \"(\").concat(argName, \":) cannot be deprecated.\"), [getDeprecatedDirectiveNode(arg.astNode), // istanbul ignore next (TODO need to write coverage tests)\n        (_arg$astNode3 = arg.astNode) === null || _arg$astNode3 === void 0 ? void 0 : _arg$astNode3.type]);\n      }\n    }\n  }\n}\n\nfunction validateInterfaces(context, type) {\n  var ifaceTypeNames = Object.create(null);\n\n  for (var _i14 = 0, _type$getInterfaces2 = type.getInterfaces(); _i14 < _type$getInterfaces2.length; _i14++) {\n    var iface = _type$getInterfaces2[_i14];\n\n    if (!isInterfaceType(iface)) {\n      context.reportError(\"Type \".concat(inspect(type), \" must only implement Interface types, \") + \"it cannot implement \".concat(inspect(iface), \".\"), getAllImplementsInterfaceNodes(type, iface));\n      continue;\n    }\n\n    if (type === iface) {\n      context.reportError(\"Type \".concat(type.name, \" cannot implement itself because it would create a circular reference.\"), getAllImplementsInterfaceNodes(type, iface));\n      continue;\n    }\n\n    if (ifaceTypeNames[iface.name]) {\n      context.reportError(\"Type \".concat(type.name, \" can only implement \").concat(iface.name, \" once.\"), getAllImplementsInterfaceNodes(type, iface));\n      continue;\n    }\n\n    ifaceTypeNames[iface.name] = true;\n    validateTypeImplementsAncestors(context, type, iface);\n    validateTypeImplementsInterface(context, type, iface);\n  }\n}\n\nfunction validateTypeImplementsInterface(context, type, iface) {\n  var typeFieldMap = type.getFields(); // Assert each interface field is implemented.\n\n  for (var _i16 = 0, _objectValues4 = objectValues(iface.getFields()); _i16 < _objectValues4.length; _i16++) {\n    var ifaceField = _objectValues4[_i16];\n    var fieldName = ifaceField.name;\n    var typeField = typeFieldMap[fieldName]; // Assert interface field exists on type.\n\n    if (!typeField) {\n      context.reportError(\"Interface field \".concat(iface.name, \".\").concat(fieldName, \" expected but \").concat(type.name, \" does not provide it.\"), [ifaceField.astNode].concat(getAllNodes(type)));\n      continue;\n    } // Assert interface field type is satisfied by type field type, by being\n    // a valid subtype. (covariant)\n\n\n    if (!isTypeSubTypeOf(context.schema, typeField.type, ifaceField.type)) {\n      var _ifaceField$astNode, _typeField$astNode;\n\n      context.reportError(\"Interface field \".concat(iface.name, \".\").concat(fieldName, \" expects type \") + \"\".concat(inspect(ifaceField.type), \" but \").concat(type.name, \".\").concat(fieldName, \" \") + \"is type \".concat(inspect(typeField.type), \".\"), [// istanbul ignore next (TODO need to write coverage tests)\n      (_ifaceField$astNode = ifaceField.astNode) === null || _ifaceField$astNode === void 0 ? void 0 : _ifaceField$astNode.type, // istanbul ignore next (TODO need to write coverage tests)\n      (_typeField$astNode = typeField.astNode) === null || _typeField$astNode === void 0 ? void 0 : _typeField$astNode.type]);\n    } // Assert each interface field arg is implemented.\n\n\n    var _loop = function _loop(_i18, _ifaceField$args2) {\n      var ifaceArg = _ifaceField$args2[_i18];\n      var argName = ifaceArg.name;\n      var typeArg = find(typeField.args, function (arg) {\n        return arg.name === argName;\n      }); // Assert interface field arg exists on object field.\n\n      if (!typeArg) {\n        context.reportError(\"Interface field argument \".concat(iface.name, \".\").concat(fieldName, \"(\").concat(argName, \":) expected but \").concat(type.name, \".\").concat(fieldName, \" does not provide it.\"), [ifaceArg.astNode, typeField.astNode]);\n        return \"continue\";\n      } // Assert interface field arg type matches object field arg type.\n      // (invariant)\n      // TODO: change to contravariant?\n\n\n      if (!isEqualType(ifaceArg.type, typeArg.type)) {\n        var _ifaceArg$astNode, _typeArg$astNode;\n\n        context.reportError(\"Interface field argument \".concat(iface.name, \".\").concat(fieldName, \"(\").concat(argName, \":) \") + \"expects type \".concat(inspect(ifaceArg.type), \" but \") + \"\".concat(type.name, \".\").concat(fieldName, \"(\").concat(argName, \":) is type \") + \"\".concat(inspect(typeArg.type), \".\"), [// istanbul ignore next (TODO need to write coverage tests)\n        (_ifaceArg$astNode = ifaceArg.astNode) === null || _ifaceArg$astNode === void 0 ? void 0 : _ifaceArg$astNode.type, // istanbul ignore next (TODO need to write coverage tests)\n        (_typeArg$astNode = typeArg.astNode) === null || _typeArg$astNode === void 0 ? void 0 : _typeArg$astNode.type]);\n      } // TODO: validate default values?\n\n    };\n\n    for (var _i18 = 0, _ifaceField$args2 = ifaceField.args; _i18 < _ifaceField$args2.length; _i18++) {\n      var _ret = _loop(_i18, _ifaceField$args2);\n\n      if (_ret === \"continue\") continue;\n    } // Assert additional arguments must not be required.\n\n\n    var _loop2 = function _loop2(_i20, _typeField$args2) {\n      var typeArg = _typeField$args2[_i20];\n      var argName = typeArg.name;\n      var ifaceArg = find(ifaceField.args, function (arg) {\n        return arg.name === argName;\n      });\n\n      if (!ifaceArg && isRequiredArgument(typeArg)) {\n        context.reportError(\"Object field \".concat(type.name, \".\").concat(fieldName, \" includes required argument \").concat(argName, \" that is missing from the Interface field \").concat(iface.name, \".\").concat(fieldName, \".\"), [typeArg.astNode, ifaceField.astNode]);\n      }\n    };\n\n    for (var _i20 = 0, _typeField$args2 = typeField.args; _i20 < _typeField$args2.length; _i20++) {\n      _loop2(_i20, _typeField$args2);\n    }\n  }\n}\n\nfunction validateTypeImplementsAncestors(context, type, iface) {\n  var ifaceInterfaces = type.getInterfaces();\n\n  for (var _i22 = 0, _iface$getInterfaces2 = iface.getInterfaces(); _i22 < _iface$getInterfaces2.length; _i22++) {\n    var transitive = _iface$getInterfaces2[_i22];\n\n    if (ifaceInterfaces.indexOf(transitive) === -1) {\n      context.reportError(transitive === type ? \"Type \".concat(type.name, \" cannot implement \").concat(iface.name, \" because it would create a circular reference.\") : \"Type \".concat(type.name, \" must implement \").concat(transitive.name, \" because it is implemented by \").concat(iface.name, \".\"), [].concat(getAllImplementsInterfaceNodes(iface, transitive), getAllImplementsInterfaceNodes(type, iface)));\n    }\n  }\n}\n\nfunction validateUnionMembers(context, union) {\n  var memberTypes = union.getTypes();\n\n  if (memberTypes.length === 0) {\n    context.reportError(\"Union type \".concat(union.name, \" must define one or more member types.\"), getAllNodes(union));\n  }\n\n  var includedTypeNames = Object.create(null);\n\n  for (var _i24 = 0; _i24 < memberTypes.length; _i24++) {\n    var memberType = memberTypes[_i24];\n\n    if (includedTypeNames[memberType.name]) {\n      context.reportError(\"Union type \".concat(union.name, \" can only include type \").concat(memberType.name, \" once.\"), getUnionMemberTypeNodes(union, memberType.name));\n      continue;\n    }\n\n    includedTypeNames[memberType.name] = true;\n\n    if (!isObjectType(memberType)) {\n      context.reportError(\"Union type \".concat(union.name, \" can only include Object types, \") + \"it cannot include \".concat(inspect(memberType), \".\"), getUnionMemberTypeNodes(union, String(memberType)));\n    }\n  }\n}\n\nfunction validateEnumValues(context, enumType) {\n  var enumValues = enumType.getValues();\n\n  if (enumValues.length === 0) {\n    context.reportError(\"Enum type \".concat(enumType.name, \" must define one or more values.\"), getAllNodes(enumType));\n  }\n\n  for (var _i26 = 0; _i26 < enumValues.length; _i26++) {\n    var enumValue = enumValues[_i26];\n    var valueName = enumValue.name; // Ensure valid name.\n\n    validateName(context, enumValue);\n\n    if (valueName === 'true' || valueName === 'false' || valueName === 'null') {\n      context.reportError(\"Enum type \".concat(enumType.name, \" cannot include value: \").concat(valueName, \".\"), enumValue.astNode);\n    }\n  }\n}\n\nfunction validateInputFields(context, inputObj) {\n  var fields = objectValues(inputObj.getFields());\n\n  if (fields.length === 0) {\n    context.reportError(\"Input Object type \".concat(inputObj.name, \" must define one or more fields.\"), getAllNodes(inputObj));\n  } // Ensure the arguments are valid\n\n\n  for (var _i28 = 0; _i28 < fields.length; _i28++) {\n    var field = fields[_i28];\n    // Ensure they are named correctly.\n    validateName(context, field); // Ensure the type is an input type\n\n    if (!isInputType(field.type)) {\n      var _field$astNode2;\n\n      context.reportError(\"The type of \".concat(inputObj.name, \".\").concat(field.name, \" must be Input Type \") + \"but got: \".concat(inspect(field.type), \".\"), (_field$astNode2 = field.astNode) === null || _field$astNode2 === void 0 ? void 0 : _field$astNode2.type);\n    }\n\n    if (isRequiredInputField(field) && field.deprecationReason != null) {\n      var _field$astNode3;\n\n      context.reportError(\"Required input field \".concat(inputObj.name, \".\").concat(field.name, \" cannot be deprecated.\"), [getDeprecatedDirectiveNode(field.astNode), // istanbul ignore next (TODO need to write coverage tests)\n      (_field$astNode3 = field.astNode) === null || _field$astNode3 === void 0 ? void 0 : _field$astNode3.type]);\n    }\n  }\n}\n\nfunction createInputObjectCircularRefsValidator(context) {\n  // Modified copy of algorithm from 'src/validation/rules/NoFragmentCycles.js'.\n  // Tracks already visited types to maintain O(N) and to ensure that cycles\n  // are not redundantly reported.\n  var visitedTypes = Object.create(null); // Array of types nodes used to produce meaningful errors\n\n  var fieldPath = []; // Position in the type path\n\n  var fieldPathIndexByTypeName = Object.create(null);\n  return detectCycleRecursive; // This does a straight-forward DFS to find cycles.\n  // It does not terminate when a cycle was found but continues to explore\n  // the graph to find all possible cycles.\n\n  function detectCycleRecursive(inputObj) {\n    if (visitedTypes[inputObj.name]) {\n      return;\n    }\n\n    visitedTypes[inputObj.name] = true;\n    fieldPathIndexByTypeName[inputObj.name] = fieldPath.length;\n    var fields = objectValues(inputObj.getFields());\n\n    for (var _i30 = 0; _i30 < fields.length; _i30++) {\n      var field = fields[_i30];\n\n      if (isNonNullType(field.type) && isInputObjectType(field.type.ofType)) {\n        var fieldType = field.type.ofType;\n        var cycleIndex = fieldPathIndexByTypeName[fieldType.name];\n        fieldPath.push(field);\n\n        if (cycleIndex === undefined) {\n          detectCycleRecursive(fieldType);\n        } else {\n          var cyclePath = fieldPath.slice(cycleIndex);\n          var pathStr = cyclePath.map(function (fieldObj) {\n            return fieldObj.name;\n          }).join('.');\n          context.reportError(\"Cannot reference Input Object \\\"\".concat(fieldType.name, \"\\\" within itself through a series of non-null fields: \\\"\").concat(pathStr, \"\\\".\"), cyclePath.map(function (fieldObj) {\n            return fieldObj.astNode;\n          }));\n        }\n\n        fieldPath.pop();\n      }\n    }\n\n    fieldPathIndexByTypeName[inputObj.name] = undefined;\n  }\n}\n\nfunction getAllNodes(object) {\n  var astNode = object.astNode,\n      extensionASTNodes = object.extensionASTNodes;\n  return astNode ? extensionASTNodes ? [astNode].concat(extensionASTNodes) : [astNode] : extensionASTNodes !== null && extensionASTNodes !== void 0 ? extensionASTNodes : [];\n}\n\nfunction getAllSubNodes(object, getter) {\n  var subNodes = [];\n\n  for (var _i32 = 0, _getAllNodes2 = getAllNodes(object); _i32 < _getAllNodes2.length; _i32++) {\n    var _getter;\n\n    var node = _getAllNodes2[_i32];\n    // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n    subNodes = subNodes.concat((_getter = getter(node)) !== null && _getter !== void 0 ? _getter : []);\n  }\n\n  return subNodes;\n}\n\nfunction getAllImplementsInterfaceNodes(type, iface) {\n  return getAllSubNodes(type, function (typeNode) {\n    return typeNode.interfaces;\n  }).filter(function (ifaceNode) {\n    return ifaceNode.name.value === iface.name;\n  });\n}\n\nfunction getUnionMemberTypeNodes(union, typeName) {\n  return getAllSubNodes(union, function (unionNode) {\n    return unionNode.types;\n  }).filter(function (typeNode) {\n    return typeNode.name.value === typeName;\n  });\n}\n\nfunction getDeprecatedDirectiveNode(definitionNode) {\n  var _definitionNode$direc;\n\n  // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n  return definitionNode === null || definitionNode === void 0 ? void 0 : (_definitionNode$direc = definitionNode.directives) === null || _definitionNode$direc === void 0 ? void 0 : _definitionNode$direc.find(function (node) {\n    return node.name.value === GraphQLDeprecatedDirective.name;\n  });\n}\n","import inspect from \"../jsutils/inspect.mjs\";\nimport invariant from \"../jsutils/invariant.mjs\";\nimport { Kind } from \"../language/kinds.mjs\";\nimport { GraphQLList, GraphQLNonNull } from \"../type/definition.mjs\";\n/**\n * Given a Schema and an AST node describing a type, return a GraphQLType\n * definition which applies to that type. For example, if provided the parsed\n * AST node for `[User]`, a GraphQLList instance will be returned, containing\n * the type called \"User\" found in the schema. If a type called \"User\" is not\n * found in the schema, then undefined will be returned.\n */\n\n/* eslint-disable no-redeclare */\n\nexport function typeFromAST(schema, typeNode) {\n  /* eslint-enable no-redeclare */\n  var innerType;\n\n  if (typeNode.kind === Kind.LIST_TYPE) {\n    innerType = typeFromAST(schema, typeNode.type);\n    return innerType && new GraphQLList(innerType);\n  }\n\n  if (typeNode.kind === Kind.NON_NULL_TYPE) {\n    innerType = typeFromAST(schema, typeNode.type);\n    return innerType && new GraphQLNonNull(innerType);\n  } // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2618')\n\n\n  if (typeNode.kind === Kind.NAMED_TYPE) {\n    return schema.getType(typeNode.name.value);\n  } // istanbul ignore next (Not reachable. All possible type nodes have been considered)\n\n\n  false || invariant(0, 'Unexpected type node: ' + inspect(typeNode));\n}\n","import find from \"../polyfills/find.mjs\";\nimport { Kind } from \"../language/kinds.mjs\";\nimport { isNode } from \"../language/ast.mjs\";\nimport { getVisitFn } from \"../language/visitor.mjs\";\nimport { isObjectType, isInterfaceType, isEnumType, isInputObjectType, isListType, isCompositeType, isInputType, isOutputType, getNullableType, getNamedType } from \"../type/definition.mjs\";\nimport { SchemaMetaFieldDef, TypeMetaFieldDef, TypeNameMetaFieldDef } from \"../type/introspection.mjs\";\nimport { typeFromAST } from \"./typeFromAST.mjs\";\n/**\n * TypeInfo is a utility class which, given a GraphQL schema, can keep track\n * of the current field and type definitions at any point in a GraphQL document\n * AST during a recursive descent by calling `enter(node)` and `leave(node)`.\n */\n\nexport var TypeInfo = /*#__PURE__*/function () {\n  function TypeInfo(schema, // NOTE: this experimental optional second parameter is only needed in order\n  // to support non-spec-compliant code bases. You should never need to use it.\n  // It may disappear in the future.\n  getFieldDefFn, // Initial type may be provided in rare cases to facilitate traversals\n  // beginning somewhere other than documents.\n  initialType) {\n    this._schema = schema;\n    this._typeStack = [];\n    this._parentTypeStack = [];\n    this._inputTypeStack = [];\n    this._fieldDefStack = [];\n    this._defaultValueStack = [];\n    this._directive = null;\n    this._argument = null;\n    this._enumValue = null;\n    this._getFieldDef = getFieldDefFn !== null && getFieldDefFn !== void 0 ? getFieldDefFn : getFieldDef;\n\n    if (initialType) {\n      if (isInputType(initialType)) {\n        this._inputTypeStack.push(initialType);\n      }\n\n      if (isCompositeType(initialType)) {\n        this._parentTypeStack.push(initialType);\n      }\n\n      if (isOutputType(initialType)) {\n        this._typeStack.push(initialType);\n      }\n    }\n  }\n\n  var _proto = TypeInfo.prototype;\n\n  _proto.getType = function getType() {\n    if (this._typeStack.length > 0) {\n      return this._typeStack[this._typeStack.length - 1];\n    }\n  };\n\n  _proto.getParentType = function getParentType() {\n    if (this._parentTypeStack.length > 0) {\n      return this._parentTypeStack[this._parentTypeStack.length - 1];\n    }\n  };\n\n  _proto.getInputType = function getInputType() {\n    if (this._inputTypeStack.length > 0) {\n      return this._inputTypeStack[this._inputTypeStack.length - 1];\n    }\n  };\n\n  _proto.getParentInputType = function getParentInputType() {\n    if (this._inputTypeStack.length > 1) {\n      return this._inputTypeStack[this._inputTypeStack.length - 2];\n    }\n  };\n\n  _proto.getFieldDef = function getFieldDef() {\n    if (this._fieldDefStack.length > 0) {\n      return this._fieldDefStack[this._fieldDefStack.length - 1];\n    }\n  };\n\n  _proto.getDefaultValue = function getDefaultValue() {\n    if (this._defaultValueStack.length > 0) {\n      return this._defaultValueStack[this._defaultValueStack.length - 1];\n    }\n  };\n\n  _proto.getDirective = function getDirective() {\n    return this._directive;\n  };\n\n  _proto.getArgument = function getArgument() {\n    return this._argument;\n  };\n\n  _proto.getEnumValue = function getEnumValue() {\n    return this._enumValue;\n  };\n\n  _proto.enter = function enter(node) {\n    var schema = this._schema; // Note: many of the types below are explicitly typed as \"mixed\" to drop\n    // any assumptions of a valid schema to ensure runtime types are properly\n    // checked before continuing since TypeInfo is used as part of validation\n    // which occurs before guarantees of schema and document validity.\n\n    switch (node.kind) {\n      case Kind.SELECTION_SET:\n        {\n          var namedType = getNamedType(this.getType());\n\n          this._parentTypeStack.push(isCompositeType(namedType) ? namedType : undefined);\n\n          break;\n        }\n\n      case Kind.FIELD:\n        {\n          var parentType = this.getParentType();\n          var fieldDef;\n          var fieldType;\n\n          if (parentType) {\n            fieldDef = this._getFieldDef(schema, parentType, node);\n\n            if (fieldDef) {\n              fieldType = fieldDef.type;\n            }\n          }\n\n          this._fieldDefStack.push(fieldDef);\n\n          this._typeStack.push(isOutputType(fieldType) ? fieldType : undefined);\n\n          break;\n        }\n\n      case Kind.DIRECTIVE:\n        this._directive = schema.getDirective(node.name.value);\n        break;\n\n      case Kind.OPERATION_DEFINITION:\n        {\n          var type;\n\n          switch (node.operation) {\n            case 'query':\n              type = schema.getQueryType();\n              break;\n\n            case 'mutation':\n              type = schema.getMutationType();\n              break;\n\n            case 'subscription':\n              type = schema.getSubscriptionType();\n              break;\n          }\n\n          this._typeStack.push(isObjectType(type) ? type : undefined);\n\n          break;\n        }\n\n      case Kind.INLINE_FRAGMENT:\n      case Kind.FRAGMENT_DEFINITION:\n        {\n          var typeConditionAST = node.typeCondition;\n          var outputType = typeConditionAST ? typeFromAST(schema, typeConditionAST) : getNamedType(this.getType());\n\n          this._typeStack.push(isOutputType(outputType) ? outputType : undefined);\n\n          break;\n        }\n\n      case Kind.VARIABLE_DEFINITION:\n        {\n          var inputType = typeFromAST(schema, node.type);\n\n          this._inputTypeStack.push(isInputType(inputType) ? inputType : undefined);\n\n          break;\n        }\n\n      case Kind.ARGUMENT:\n        {\n          var _this$getDirective;\n\n          var argDef;\n          var argType;\n          var fieldOrDirective = (_this$getDirective = this.getDirective()) !== null && _this$getDirective !== void 0 ? _this$getDirective : this.getFieldDef();\n\n          if (fieldOrDirective) {\n            argDef = find(fieldOrDirective.args, function (arg) {\n              return arg.name === node.name.value;\n            });\n\n            if (argDef) {\n              argType = argDef.type;\n            }\n          }\n\n          this._argument = argDef;\n\n          this._defaultValueStack.push(argDef ? argDef.defaultValue : undefined);\n\n          this._inputTypeStack.push(isInputType(argType) ? argType : undefined);\n\n          break;\n        }\n\n      case Kind.LIST:\n        {\n          var listType = getNullableType(this.getInputType());\n          var itemType = isListType(listType) ? listType.ofType : listType; // List positions never have a default value.\n\n          this._defaultValueStack.push(undefined);\n\n          this._inputTypeStack.push(isInputType(itemType) ? itemType : undefined);\n\n          break;\n        }\n\n      case Kind.OBJECT_FIELD:\n        {\n          var objectType = getNamedType(this.getInputType());\n          var inputFieldType;\n          var inputField;\n\n          if (isInputObjectType(objectType)) {\n            inputField = objectType.getFields()[node.name.value];\n\n            if (inputField) {\n              inputFieldType = inputField.type;\n            }\n          }\n\n          this._defaultValueStack.push(inputField ? inputField.defaultValue : undefined);\n\n          this._inputTypeStack.push(isInputType(inputFieldType) ? inputFieldType : undefined);\n\n          break;\n        }\n\n      case Kind.ENUM:\n        {\n          var enumType = getNamedType(this.getInputType());\n          var enumValue;\n\n          if (isEnumType(enumType)) {\n            enumValue = enumType.getValue(node.value);\n          }\n\n          this._enumValue = enumValue;\n          break;\n        }\n    }\n  };\n\n  _proto.leave = function leave(node) {\n    switch (node.kind) {\n      case Kind.SELECTION_SET:\n        this._parentTypeStack.pop();\n\n        break;\n\n      case Kind.FIELD:\n        this._fieldDefStack.pop();\n\n        this._typeStack.pop();\n\n        break;\n\n      case Kind.DIRECTIVE:\n        this._directive = null;\n        break;\n\n      case Kind.OPERATION_DEFINITION:\n      case Kind.INLINE_FRAGMENT:\n      case Kind.FRAGMENT_DEFINITION:\n        this._typeStack.pop();\n\n        break;\n\n      case Kind.VARIABLE_DEFINITION:\n        this._inputTypeStack.pop();\n\n        break;\n\n      case Kind.ARGUMENT:\n        this._argument = null;\n\n        this._defaultValueStack.pop();\n\n        this._inputTypeStack.pop();\n\n        break;\n\n      case Kind.LIST:\n      case Kind.OBJECT_FIELD:\n        this._defaultValueStack.pop();\n\n        this._inputTypeStack.pop();\n\n        break;\n\n      case Kind.ENUM:\n        this._enumValue = null;\n        break;\n    }\n  };\n\n  return TypeInfo;\n}();\n/**\n * Not exactly the same as the executor's definition of getFieldDef, in this\n * statically evaluated environment we do not always have an Object type,\n * and need to handle Interface and Union types.\n */\n\nfunction getFieldDef(schema, parentType, fieldNode) {\n  var name = fieldNode.name.value;\n\n  if (name === SchemaMetaFieldDef.name && schema.getQueryType() === parentType) {\n    return SchemaMetaFieldDef;\n  }\n\n  if (name === TypeMetaFieldDef.name && schema.getQueryType() === parentType) {\n    return TypeMetaFieldDef;\n  }\n\n  if (name === TypeNameMetaFieldDef.name && isCompositeType(parentType)) {\n    return TypeNameMetaFieldDef;\n  }\n\n  if (isObjectType(parentType) || isInterfaceType(parentType)) {\n    return parentType.getFields()[name];\n  }\n}\n/**\n * Creates a new visitor instance which maintains a provided TypeInfo instance\n * along with visiting visitor.\n */\n\n\nexport function visitWithTypeInfo(typeInfo, visitor) {\n  return {\n    enter: function enter(node) {\n      typeInfo.enter(node);\n      var fn = getVisitFn(visitor, node.kind,\n      /* isLeaving */\n      false);\n\n      if (fn) {\n        var result = fn.apply(visitor, arguments);\n\n        if (result !== undefined) {\n          typeInfo.leave(node);\n\n          if (isNode(result)) {\n            typeInfo.enter(result);\n          }\n        }\n\n        return result;\n      }\n    },\n    leave: function leave(node) {\n      var fn = getVisitFn(visitor, node.kind,\n      /* isLeaving */\n      true);\n      var result;\n\n      if (fn) {\n        result = fn.apply(visitor, arguments);\n      }\n\n      typeInfo.leave(node);\n      return result;\n    }\n  };\n}\n","import { Kind } from \"./kinds.mjs\";\nexport function isDefinitionNode(node) {\n  return isExecutableDefinitionNode(node) || isTypeSystemDefinitionNode(node) || isTypeSystemExtensionNode(node);\n}\nexport function isExecutableDefinitionNode(node) {\n  return node.kind === Kind.OPERATION_DEFINITION || node.kind === Kind.FRAGMENT_DEFINITION;\n}\nexport function isSelectionNode(node) {\n  return node.kind === Kind.FIELD || node.kind === Kind.FRAGMENT_SPREAD || node.kind === Kind.INLINE_FRAGMENT;\n}\nexport function isValueNode(node) {\n  return node.kind === Kind.VARIABLE || node.kind === Kind.INT || node.kind === Kind.FLOAT || node.kind === Kind.STRING || node.kind === Kind.BOOLEAN || node.kind === Kind.NULL || node.kind === Kind.ENUM || node.kind === Kind.LIST || node.kind === Kind.OBJECT;\n}\nexport function isTypeNode(node) {\n  return node.kind === Kind.NAMED_TYPE || node.kind === Kind.LIST_TYPE || node.kind === Kind.NON_NULL_TYPE;\n}\nexport function isTypeSystemDefinitionNode(node) {\n  return node.kind === Kind.SCHEMA_DEFINITION || isTypeDefinitionNode(node) || node.kind === Kind.DIRECTIVE_DEFINITION;\n}\nexport function isTypeDefinitionNode(node) {\n  return node.kind === Kind.SCALAR_TYPE_DEFINITION || node.kind === Kind.OBJECT_TYPE_DEFINITION || node.kind === Kind.INTERFACE_TYPE_DEFINITION || node.kind === Kind.UNION_TYPE_DEFINITION || node.kind === Kind.ENUM_TYPE_DEFINITION || node.kind === Kind.INPUT_OBJECT_TYPE_DEFINITION;\n}\nexport function isTypeSystemExtensionNode(node) {\n  return node.kind === Kind.SCHEMA_EXTENSION || isTypeExtensionNode(node);\n}\nexport function isTypeExtensionNode(node) {\n  return node.kind === Kind.SCALAR_TYPE_EXTENSION || node.kind === Kind.OBJECT_TYPE_EXTENSION || node.kind === Kind.INTERFACE_TYPE_EXTENSION || node.kind === Kind.UNION_TYPE_EXTENSION || node.kind === Kind.ENUM_TYPE_EXTENSION || node.kind === Kind.INPUT_OBJECT_TYPE_EXTENSION;\n}\n","import { GraphQLError } from \"../../error/GraphQLError.mjs\";\nimport { Kind } from \"../../language/kinds.mjs\";\nimport { isExecutableDefinitionNode } from \"../../language/predicates.mjs\";\n\n/**\n * Executable definitions\n *\n * A GraphQL document is only valid for execution if all definitions are either\n * operation or fragment definitions.\n */\nexport function ExecutableDefinitionsRule(context) {\n  return {\n    Document: function Document(node) {\n      for (var _i2 = 0, _node$definitions2 = node.definitions; _i2 < _node$definitions2.length; _i2++) {\n        var definition = _node$definitions2[_i2];\n\n        if (!isExecutableDefinitionNode(definition)) {\n          var defName = definition.kind === Kind.SCHEMA_DEFINITION || definition.kind === Kind.SCHEMA_EXTENSION ? 'schema' : '\"' + definition.name.value + '\"';\n          context.reportError(new GraphQLError(\"The \".concat(defName, \" definition is not executable.\"), definition));\n        }\n      }\n\n      return false;\n    }\n  };\n}\n","import { GraphQLError } from \"../../error/GraphQLError.mjs\";\n\n/**\n * Unique operation names\n *\n * A GraphQL document is only valid if all defined operations have unique names.\n */\nexport function UniqueOperationNamesRule(context) {\n  var knownOperationNames = Object.create(null);\n  return {\n    OperationDefinition: function OperationDefinition(node) {\n      var operationName = node.name;\n\n      if (operationName) {\n        if (knownOperationNames[operationName.value]) {\n          context.reportError(new GraphQLError(\"There can be only one operation named \\\"\".concat(operationName.value, \"\\\".\"), [knownOperationNames[operationName.value], operationName]));\n        } else {\n          knownOperationNames[operationName.value] = operationName;\n        }\n      }\n\n      return false;\n    },\n    FragmentDefinition: function FragmentDefinition() {\n      return false;\n    }\n  };\n}\n","import { GraphQLError } from \"../../error/GraphQLError.mjs\";\nimport { Kind } from \"../../language/kinds.mjs\";\n\n/**\n * Lone anonymous operation\n *\n * A GraphQL document is only valid if when it contains an anonymous operation\n * (the query short-hand) that it contains only that one operation definition.\n */\nexport function LoneAnonymousOperationRule(context) {\n  var operationCount = 0;\n  return {\n    Document: function Document(node) {\n      operationCount = node.definitions.filter(function (definition) {\n        return definition.kind === Kind.OPERATION_DEFINITION;\n      }).length;\n    },\n    OperationDefinition: function OperationDefinition(node) {\n      if (!node.name && operationCount > 1) {\n        context.reportError(new GraphQLError('This anonymous operation must be the only defined operation.', node));\n      }\n    }\n  };\n}\n","import { GraphQLError } from \"../../error/GraphQLError.mjs\";\n\n/**\n * Subscriptions must only include one field.\n *\n * A GraphQL subscription is valid only if it contains a single root field.\n */\nexport function SingleFieldSubscriptionsRule(context) {\n  return {\n    OperationDefinition: function OperationDefinition(node) {\n      if (node.operation === 'subscription') {\n        if (node.selectionSet.selections.length !== 1) {\n          context.reportError(new GraphQLError(node.name ? \"Subscription \\\"\".concat(node.name.value, \"\\\" must select only one top level field.\") : 'Anonymous Subscription must select only one top level field.', node.selectionSet.selections.slice(1)));\n        }\n      }\n    }\n  };\n}\n","import didYouMean from \"../../jsutils/didYouMean.mjs\";\nimport suggestionList from \"../../jsutils/suggestionList.mjs\";\nimport { GraphQLError } from \"../../error/GraphQLError.mjs\";\nimport { isTypeDefinitionNode, isTypeSystemDefinitionNode, isTypeSystemExtensionNode } from \"../../language/predicates.mjs\";\nimport { specifiedScalarTypes } from \"../../type/scalars.mjs\";\nimport { introspectionTypes } from \"../../type/introspection.mjs\";\n\n/**\n * Known type names\n *\n * A GraphQL document is only valid if referenced types (specifically\n * variable definitions and fragment conditions) are defined by the type schema.\n */\nexport function KnownTypeNamesRule(context) {\n  var schema = context.getSchema();\n  var existingTypesMap = schema ? schema.getTypeMap() : Object.create(null);\n  var definedTypes = Object.create(null);\n\n  for (var _i2 = 0, _context$getDocument$2 = context.getDocument().definitions; _i2 < _context$getDocument$2.length; _i2++) {\n    var def = _context$getDocument$2[_i2];\n\n    if (isTypeDefinitionNode(def)) {\n      definedTypes[def.name.value] = true;\n    }\n  }\n\n  var typeNames = Object.keys(existingTypesMap).concat(Object.keys(definedTypes));\n  return {\n    NamedType: function NamedType(node, _1, parent, _2, ancestors) {\n      var typeName = node.name.value;\n\n      if (!existingTypesMap[typeName] && !definedTypes[typeName]) {\n        var _ancestors$;\n\n        var definitionNode = (_ancestors$ = ancestors[2]) !== null && _ancestors$ !== void 0 ? _ancestors$ : parent;\n        var isSDL = definitionNode != null && isSDLNode(definitionNode);\n\n        if (isSDL && isStandardTypeName(typeName)) {\n          return;\n        }\n\n        var suggestedTypes = suggestionList(typeName, isSDL ? standardTypeNames.concat(typeNames) : typeNames);\n        context.reportError(new GraphQLError(\"Unknown type \\\"\".concat(typeName, \"\\\".\") + didYouMean(suggestedTypes), node));\n      }\n    }\n  };\n}\nvar standardTypeNames = [].concat(specifiedScalarTypes, introspectionTypes).map(function (type) {\n  return type.name;\n});\n\nfunction isStandardTypeName(typeName) {\n  return standardTypeNames.indexOf(typeName) !== -1;\n}\n\nfunction isSDLNode(value) {\n  return !Array.isArray(value) && (isTypeSystemDefinitionNode(value) || isTypeSystemExtensionNode(value));\n}\n","import { GraphQLError } from \"../../error/GraphQLError.mjs\";\nimport { print } from \"../../language/printer.mjs\";\nimport { isCompositeType } from \"../../type/definition.mjs\";\nimport { typeFromAST } from \"../../utilities/typeFromAST.mjs\";\n\n/**\n * Fragments on composite type\n *\n * Fragments use a type condition to determine if they apply, since fragments\n * can only be spread into a composite type (object, interface, or union), the\n * type condition must also be a composite type.\n */\nexport function FragmentsOnCompositeTypesRule(context) {\n  return {\n    InlineFragment: function InlineFragment(node) {\n      var typeCondition = node.typeCondition;\n\n      if (typeCondition) {\n        var type = typeFromAST(context.getSchema(), typeCondition);\n\n        if (type && !isCompositeType(type)) {\n          var typeStr = print(typeCondition);\n          context.reportError(new GraphQLError(\"Fragment cannot condition on non composite type \\\"\".concat(typeStr, \"\\\".\"), typeCondition));\n        }\n      }\n    },\n    FragmentDefinition: function FragmentDefinition(node) {\n      var type = typeFromAST(context.getSchema(), node.typeCondition);\n\n      if (type && !isCompositeType(type)) {\n        var typeStr = print(node.typeCondition);\n        context.reportError(new GraphQLError(\"Fragment \\\"\".concat(node.name.value, \"\\\" cannot condition on non composite type \\\"\").concat(typeStr, \"\\\".\"), node.typeCondition));\n      }\n    }\n  };\n}\n","import { GraphQLError } from \"../../error/GraphQLError.mjs\";\nimport { print } from \"../../language/printer.mjs\";\nimport { isInputType } from \"../../type/definition.mjs\";\nimport { typeFromAST } from \"../../utilities/typeFromAST.mjs\";\n\n/**\n * Variables are input types\n *\n * A GraphQL operation is only valid if all the variables it defines are of\n * input types (scalar, enum, or input object).\n */\nexport function VariablesAreInputTypesRule(context) {\n  return {\n    VariableDefinition: function VariableDefinition(node) {\n      var type = typeFromAST(context.getSchema(), node.type);\n\n      if (type && !isInputType(type)) {\n        var variableName = node.variable.name.value;\n        var typeName = print(node.type);\n        context.reportError(new GraphQLError(\"Variable \\\"$\".concat(variableName, \"\\\" cannot be non-input type \\\"\").concat(typeName, \"\\\".\"), node.type));\n      }\n    }\n  };\n}\n","import inspect from \"../../jsutils/inspect.mjs\";\nimport { GraphQLError } from \"../../error/GraphQLError.mjs\";\nimport { getNamedType, isLeafType } from \"../../type/definition.mjs\";\n\n/**\n * Scalar leafs\n *\n * A GraphQL document is valid only if all leaf fields (fields without\n * sub selections) are of scalar or enum types.\n */\nexport function ScalarLeafsRule(context) {\n  return {\n    Field: function Field(node) {\n      var type = context.getType();\n      var selectionSet = node.selectionSet;\n\n      if (type) {\n        if (isLeafType(getNamedType(type))) {\n          if (selectionSet) {\n            var fieldName = node.name.value;\n            var typeStr = inspect(type);\n            context.reportError(new GraphQLError(\"Field \\\"\".concat(fieldName, \"\\\" must not have a selection since type \\\"\").concat(typeStr, \"\\\" has no subfields.\"), selectionSet));\n          }\n        } else if (!selectionSet) {\n          var _fieldName = node.name.value;\n\n          var _typeStr = inspect(type);\n\n          context.reportError(new GraphQLError(\"Field \\\"\".concat(_fieldName, \"\\\" of type \\\"\").concat(_typeStr, \"\\\" must have a selection of subfields. Did you mean \\\"\").concat(_fieldName, \" { ... }\\\"?\"), node));\n        }\n      }\n    }\n  };\n}\n","import arrayFrom from \"../../polyfills/arrayFrom.mjs\";\nimport didYouMean from \"../../jsutils/didYouMean.mjs\";\nimport suggestionList from \"../../jsutils/suggestionList.mjs\";\nimport naturalCompare from \"../../jsutils/naturalCompare.mjs\";\nimport { GraphQLError } from \"../../error/GraphQLError.mjs\";\nimport { isObjectType, isInterfaceType, isAbstractType } from \"../../type/definition.mjs\";\n\n/**\n * Fields on correct type\n *\n * A GraphQL document is only valid if all fields selected are defined by the\n * parent type, or are an allowed meta field such as __typename.\n */\nexport function FieldsOnCorrectTypeRule(context) {\n  return {\n    Field: function Field(node) {\n      var type = context.getParentType();\n\n      if (type) {\n        var fieldDef = context.getFieldDef();\n\n        if (!fieldDef) {\n          // This field doesn't exist, lets look for suggestions.\n          var schema = context.getSchema();\n          var fieldName = node.name.value; // First determine if there are any suggested types to condition on.\n\n          var suggestion = didYouMean('to use an inline fragment on', getSuggestedTypeNames(schema, type, fieldName)); // If there are no suggested types, then perhaps this was a typo?\n\n          if (suggestion === '') {\n            suggestion = didYouMean(getSuggestedFieldNames(type, fieldName));\n          } // Report an error, including helpful suggestions.\n\n\n          context.reportError(new GraphQLError(\"Cannot query field \\\"\".concat(fieldName, \"\\\" on type \\\"\").concat(type.name, \"\\\".\") + suggestion, node));\n        }\n      }\n    }\n  };\n}\n/**\n * Go through all of the implementations of type, as well as the interfaces that\n * they implement. If any of those types include the provided field, suggest them,\n * sorted by how often the type is referenced.\n */\n\nfunction getSuggestedTypeNames(schema, type, fieldName) {\n  if (!isAbstractType(type)) {\n    // Must be an Object type, which does not have possible fields.\n    return [];\n  }\n\n  var suggestedTypes = new Set();\n  var usageCount = Object.create(null);\n\n  for (var _i2 = 0, _schema$getPossibleTy2 = schema.getPossibleTypes(type); _i2 < _schema$getPossibleTy2.length; _i2++) {\n    var possibleType = _schema$getPossibleTy2[_i2];\n\n    if (!possibleType.getFields()[fieldName]) {\n      continue;\n    } // This object type defines this field.\n\n\n    suggestedTypes.add(possibleType);\n    usageCount[possibleType.name] = 1;\n\n    for (var _i4 = 0, _possibleType$getInte2 = possibleType.getInterfaces(); _i4 < _possibleType$getInte2.length; _i4++) {\n      var _usageCount$possibleI;\n\n      var possibleInterface = _possibleType$getInte2[_i4];\n\n      if (!possibleInterface.getFields()[fieldName]) {\n        continue;\n      } // This interface type defines this field.\n\n\n      suggestedTypes.add(possibleInterface);\n      usageCount[possibleInterface.name] = ((_usageCount$possibleI = usageCount[possibleInterface.name]) !== null && _usageCount$possibleI !== void 0 ? _usageCount$possibleI : 0) + 1;\n    }\n  }\n\n  return arrayFrom(suggestedTypes).sort(function (typeA, typeB) {\n    // Suggest both interface and object types based on how common they are.\n    var usageCountDiff = usageCount[typeB.name] - usageCount[typeA.name];\n\n    if (usageCountDiff !== 0) {\n      return usageCountDiff;\n    } // Suggest super types first followed by subtypes\n\n\n    if (isInterfaceType(typeA) && schema.isSubType(typeA, typeB)) {\n      return -1;\n    }\n\n    if (isInterfaceType(typeB) && schema.isSubType(typeB, typeA)) {\n      return 1;\n    }\n\n    return naturalCompare(typeA.name, typeB.name);\n  }).map(function (x) {\n    return x.name;\n  });\n}\n/**\n * For the field name provided, determine if there are any similar field names\n * that may be the result of a typo.\n */\n\n\nfunction getSuggestedFieldNames(type, fieldName) {\n  if (isObjectType(type) || isInterfaceType(type)) {\n    var possibleFieldNames = Object.keys(type.getFields());\n    return suggestionList(fieldName, possibleFieldNames);\n  } // Otherwise, must be a Union type, which does not define fields.\n\n\n  return [];\n}\n","import { GraphQLError } from \"../../error/GraphQLError.mjs\";\n\n/**\n * Unique fragment names\n *\n * A GraphQL document is only valid if all defined fragments have unique names.\n */\nexport function UniqueFragmentNamesRule(context) {\n  var knownFragmentNames = Object.create(null);\n  return {\n    OperationDefinition: function OperationDefinition() {\n      return false;\n    },\n    FragmentDefinition: function FragmentDefinition(node) {\n      var fragmentName = node.name.value;\n\n      if (knownFragmentNames[fragmentName]) {\n        context.reportError(new GraphQLError(\"There can be only one fragment named \\\"\".concat(fragmentName, \"\\\".\"), [knownFragmentNames[fragmentName], node.name]));\n      } else {\n        knownFragmentNames[fragmentName] = node.name;\n      }\n\n      return false;\n    }\n  };\n}\n","import { GraphQLError } from \"../../error/GraphQLError.mjs\";\n\n/**\n * Known fragment names\n *\n * A GraphQL document is only valid if all `...Fragment` fragment spreads refer\n * to fragments defined in the same document.\n */\nexport function KnownFragmentNamesRule(context) {\n  return {\n    FragmentSpread: function FragmentSpread(node) {\n      var fragmentName = node.name.value;\n      var fragment = context.getFragment(fragmentName);\n\n      if (!fragment) {\n        context.reportError(new GraphQLError(\"Unknown fragment \\\"\".concat(fragmentName, \"\\\".\"), node.name));\n      }\n    }\n  };\n}\n","import { GraphQLError } from \"../../error/GraphQLError.mjs\";\n\n/**\n * No unused fragments\n *\n * A GraphQL document is only valid if all fragment definitions are spread\n * within operations, or spread within other fragments spread within operations.\n */\nexport function NoUnusedFragmentsRule(context) {\n  var operationDefs = [];\n  var fragmentDefs = [];\n  return {\n    OperationDefinition: function OperationDefinition(node) {\n      operationDefs.push(node);\n      return false;\n    },\n    FragmentDefinition: function FragmentDefinition(node) {\n      fragmentDefs.push(node);\n      return false;\n    },\n    Document: {\n      leave: function leave() {\n        var fragmentNameUsed = Object.create(null);\n\n        for (var _i2 = 0; _i2 < operationDefs.length; _i2++) {\n          var operation = operationDefs[_i2];\n\n          for (var _i4 = 0, _context$getRecursive2 = context.getRecursivelyReferencedFragments(operation); _i4 < _context$getRecursive2.length; _i4++) {\n            var fragment = _context$getRecursive2[_i4];\n            fragmentNameUsed[fragment.name.value] = true;\n          }\n        }\n\n        for (var _i6 = 0; _i6 < fragmentDefs.length; _i6++) {\n          var fragmentDef = fragmentDefs[_i6];\n          var fragName = fragmentDef.name.value;\n\n          if (fragmentNameUsed[fragName] !== true) {\n            context.reportError(new GraphQLError(\"Fragment \\\"\".concat(fragName, \"\\\" is never used.\"), fragmentDef));\n          }\n        }\n      }\n    }\n  };\n}\n","import inspect from \"../../jsutils/inspect.mjs\";\nimport { GraphQLError } from \"../../error/GraphQLError.mjs\";\nimport { isCompositeType } from \"../../type/definition.mjs\";\nimport { typeFromAST } from \"../../utilities/typeFromAST.mjs\";\nimport { doTypesOverlap } from \"../../utilities/typeComparators.mjs\";\n\n/**\n * Possible fragment spread\n *\n * A fragment spread is only valid if the type condition could ever possibly\n * be true: if there is a non-empty intersection of the possible parent types,\n * and possible types which pass the type condition.\n */\nexport function PossibleFragmentSpreadsRule(context) {\n  return {\n    InlineFragment: function InlineFragment(node) {\n      var fragType = context.getType();\n      var parentType = context.getParentType();\n\n      if (isCompositeType(fragType) && isCompositeType(parentType) && !doTypesOverlap(context.getSchema(), fragType, parentType)) {\n        var parentTypeStr = inspect(parentType);\n        var fragTypeStr = inspect(fragType);\n        context.reportError(new GraphQLError(\"Fragment cannot be spread here as objects of type \\\"\".concat(parentTypeStr, \"\\\" can never be of type \\\"\").concat(fragTypeStr, \"\\\".\"), node));\n      }\n    },\n    FragmentSpread: function FragmentSpread(node) {\n      var fragName = node.name.value;\n      var fragType = getFragmentType(context, fragName);\n      var parentType = context.getParentType();\n\n      if (fragType && parentType && !doTypesOverlap(context.getSchema(), fragType, parentType)) {\n        var parentTypeStr = inspect(parentType);\n        var fragTypeStr = inspect(fragType);\n        context.reportError(new GraphQLError(\"Fragment \\\"\".concat(fragName, \"\\\" cannot be spread here as objects of type \\\"\").concat(parentTypeStr, \"\\\" can never be of type \\\"\").concat(fragTypeStr, \"\\\".\"), node));\n      }\n    }\n  };\n}\n\nfunction getFragmentType(context, name) {\n  var frag = context.getFragment(name);\n\n  if (frag) {\n    var type = typeFromAST(context.getSchema(), frag.typeCondition);\n\n    if (isCompositeType(type)) {\n      return type;\n    }\n  }\n}\n","import { GraphQLError } from \"../../error/GraphQLError.mjs\";\nexport function NoFragmentCyclesRule(context) {\n  // Tracks already visited fragments to maintain O(N) and to ensure that cycles\n  // are not redundantly reported.\n  var visitedFrags = Object.create(null); // Array of AST nodes used to produce meaningful errors\n\n  var spreadPath = []; // Position in the spread path\n\n  var spreadPathIndexByName = Object.create(null);\n  return {\n    OperationDefinition: function OperationDefinition() {\n      return false;\n    },\n    FragmentDefinition: function FragmentDefinition(node) {\n      detectCycleRecursive(node);\n      return false;\n    }\n  }; // This does a straight-forward DFS to find cycles.\n  // It does not terminate when a cycle was found but continues to explore\n  // the graph to find all possible cycles.\n\n  function detectCycleRecursive(fragment) {\n    if (visitedFrags[fragment.name.value]) {\n      return;\n    }\n\n    var fragmentName = fragment.name.value;\n    visitedFrags[fragmentName] = true;\n    var spreadNodes = context.getFragmentSpreads(fragment.selectionSet);\n\n    if (spreadNodes.length === 0) {\n      return;\n    }\n\n    spreadPathIndexByName[fragmentName] = spreadPath.length;\n\n    for (var _i2 = 0; _i2 < spreadNodes.length; _i2++) {\n      var spreadNode = spreadNodes[_i2];\n      var spreadName = spreadNode.name.value;\n      var cycleIndex = spreadPathIndexByName[spreadName];\n      spreadPath.push(spreadNode);\n\n      if (cycleIndex === undefined) {\n        var spreadFragment = context.getFragment(spreadName);\n\n        if (spreadFragment) {\n          detectCycleRecursive(spreadFragment);\n        }\n      } else {\n        var cyclePath = spreadPath.slice(cycleIndex);\n        var viaPath = cyclePath.slice(0, -1).map(function (s) {\n          return '\"' + s.name.value + '\"';\n        }).join(', ');\n        context.reportError(new GraphQLError(\"Cannot spread fragment \\\"\".concat(spreadName, \"\\\" within itself\") + (viaPath !== '' ? \" via \".concat(viaPath, \".\") : '.'), cyclePath));\n      }\n\n      spreadPath.pop();\n    }\n\n    spreadPathIndexByName[fragmentName] = undefined;\n  }\n}\n","import { GraphQLError } from \"../../error/GraphQLError.mjs\";\n\n/**\n * Unique variable names\n *\n * A GraphQL operation is only valid if all its variables are uniquely named.\n */\nexport function UniqueVariableNamesRule(context) {\n  var knownVariableNames = Object.create(null);\n  return {\n    OperationDefinition: function OperationDefinition() {\n      knownVariableNames = Object.create(null);\n    },\n    VariableDefinition: function VariableDefinition(node) {\n      var variableName = node.variable.name.value;\n\n      if (knownVariableNames[variableName]) {\n        context.reportError(new GraphQLError(\"There can be only one variable named \\\"$\".concat(variableName, \"\\\".\"), [knownVariableNames[variableName], node.variable.name]));\n      } else {\n        knownVariableNames[variableName] = node.variable.name;\n      }\n    }\n  };\n}\n","import { GraphQLError } from \"../../error/GraphQLError.mjs\";\n\n/**\n * No undefined variables\n *\n * A GraphQL operation is only valid if all variables encountered, both directly\n * and via fragment spreads, are defined by that operation.\n */\nexport function NoUndefinedVariablesRule(context) {\n  var variableNameDefined = Object.create(null);\n  return {\n    OperationDefinition: {\n      enter: function enter() {\n        variableNameDefined = Object.create(null);\n      },\n      leave: function leave(operation) {\n        var usages = context.getRecursiveVariableUsages(operation);\n\n        for (var _i2 = 0; _i2 < usages.length; _i2++) {\n          var _ref2 = usages[_i2];\n          var node = _ref2.node;\n          var varName = node.name.value;\n\n          if (variableNameDefined[varName] !== true) {\n            context.reportError(new GraphQLError(operation.name ? \"Variable \\\"$\".concat(varName, \"\\\" is not defined by operation \\\"\").concat(operation.name.value, \"\\\".\") : \"Variable \\\"$\".concat(varName, \"\\\" is not defined.\"), [node, operation]));\n          }\n        }\n      }\n    },\n    VariableDefinition: function VariableDefinition(node) {\n      variableNameDefined[node.variable.name.value] = true;\n    }\n  };\n}\n","import { GraphQLError } from \"../../error/GraphQLError.mjs\";\n\n/**\n * No unused variables\n *\n * A GraphQL operation is only valid if all variables defined by an operation\n * are used, either directly or within a spread fragment.\n */\nexport function NoUnusedVariablesRule(context) {\n  var variableDefs = [];\n  return {\n    OperationDefinition: {\n      enter: function enter() {\n        variableDefs = [];\n      },\n      leave: function leave(operation) {\n        var variableNameUsed = Object.create(null);\n        var usages = context.getRecursiveVariableUsages(operation);\n\n        for (var _i2 = 0; _i2 < usages.length; _i2++) {\n          var _ref2 = usages[_i2];\n          var node = _ref2.node;\n          variableNameUsed[node.name.value] = true;\n        }\n\n        for (var _i4 = 0, _variableDefs2 = variableDefs; _i4 < _variableDefs2.length; _i4++) {\n          var variableDef = _variableDefs2[_i4];\n          var variableName = variableDef.variable.name.value;\n\n          if (variableNameUsed[variableName] !== true) {\n            context.reportError(new GraphQLError(operation.name ? \"Variable \\\"$\".concat(variableName, \"\\\" is never used in operation \\\"\").concat(operation.name.value, \"\\\".\") : \"Variable \\\"$\".concat(variableName, \"\\\" is never used.\"), variableDef));\n          }\n        }\n      }\n    },\n    VariableDefinition: function VariableDefinition(def) {\n      variableDefs.push(def);\n    }\n  };\n}\n","import inspect from \"../../jsutils/inspect.mjs\";\nimport invariant from \"../../jsutils/invariant.mjs\";\nimport { GraphQLError } from \"../../error/GraphQLError.mjs\";\nimport { Kind } from \"../../language/kinds.mjs\";\nimport { DirectiveLocation } from \"../../language/directiveLocation.mjs\";\nimport { specifiedDirectives } from \"../../type/directives.mjs\";\n\n/**\n * Known directives\n *\n * A GraphQL document is only valid if all `@directives` are known by the\n * schema and legally positioned.\n */\nexport function KnownDirectivesRule(context) {\n  var locationsMap = Object.create(null);\n  var schema = context.getSchema();\n  var definedDirectives = schema ? schema.getDirectives() : specifiedDirectives;\n\n  for (var _i2 = 0; _i2 < definedDirectives.length; _i2++) {\n    var directive = definedDirectives[_i2];\n    locationsMap[directive.name] = directive.locations;\n  }\n\n  var astDefinitions = context.getDocument().definitions;\n\n  for (var _i4 = 0; _i4 < astDefinitions.length; _i4++) {\n    var def = astDefinitions[_i4];\n\n    if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      locationsMap[def.name.value] = def.locations.map(function (name) {\n        return name.value;\n      });\n    }\n  }\n\n  return {\n    Directive: function Directive(node, _key, _parent, _path, ancestors) {\n      var name = node.name.value;\n      var locations = locationsMap[name];\n\n      if (!locations) {\n        context.reportError(new GraphQLError(\"Unknown directive \\\"@\".concat(name, \"\\\".\"), node));\n        return;\n      }\n\n      var candidateLocation = getDirectiveLocationForASTPath(ancestors);\n\n      if (candidateLocation && locations.indexOf(candidateLocation) === -1) {\n        context.reportError(new GraphQLError(\"Directive \\\"@\".concat(name, \"\\\" may not be used on \").concat(candidateLocation, \".\"), node));\n      }\n    }\n  };\n}\n\nfunction getDirectiveLocationForASTPath(ancestors) {\n  var appliedTo = ancestors[ancestors.length - 1];\n  !Array.isArray(appliedTo) || invariant(0);\n\n  switch (appliedTo.kind) {\n    case Kind.OPERATION_DEFINITION:\n      return getDirectiveLocationForOperation(appliedTo.operation);\n\n    case Kind.FIELD:\n      return DirectiveLocation.FIELD;\n\n    case Kind.FRAGMENT_SPREAD:\n      return DirectiveLocation.FRAGMENT_SPREAD;\n\n    case Kind.INLINE_FRAGMENT:\n      return DirectiveLocation.INLINE_FRAGMENT;\n\n    case Kind.FRAGMENT_DEFINITION:\n      return DirectiveLocation.FRAGMENT_DEFINITION;\n\n    case Kind.VARIABLE_DEFINITION:\n      return DirectiveLocation.VARIABLE_DEFINITION;\n\n    case Kind.SCHEMA_DEFINITION:\n    case Kind.SCHEMA_EXTENSION:\n      return DirectiveLocation.SCHEMA;\n\n    case Kind.SCALAR_TYPE_DEFINITION:\n    case Kind.SCALAR_TYPE_EXTENSION:\n      return DirectiveLocation.SCALAR;\n\n    case Kind.OBJECT_TYPE_DEFINITION:\n    case Kind.OBJECT_TYPE_EXTENSION:\n      return DirectiveLocation.OBJECT;\n\n    case Kind.FIELD_DEFINITION:\n      return DirectiveLocation.FIELD_DEFINITION;\n\n    case Kind.INTERFACE_TYPE_DEFINITION:\n    case Kind.INTERFACE_TYPE_EXTENSION:\n      return DirectiveLocation.INTERFACE;\n\n    case Kind.UNION_TYPE_DEFINITION:\n    case Kind.UNION_TYPE_EXTENSION:\n      return DirectiveLocation.UNION;\n\n    case Kind.ENUM_TYPE_DEFINITION:\n    case Kind.ENUM_TYPE_EXTENSION:\n      return DirectiveLocation.ENUM;\n\n    case Kind.ENUM_VALUE_DEFINITION:\n      return DirectiveLocation.ENUM_VALUE;\n\n    case Kind.INPUT_OBJECT_TYPE_DEFINITION:\n    case Kind.INPUT_OBJECT_TYPE_EXTENSION:\n      return DirectiveLocation.INPUT_OBJECT;\n\n    case Kind.INPUT_VALUE_DEFINITION:\n      {\n        var parentNode = ancestors[ancestors.length - 3];\n        return parentNode.kind === Kind.INPUT_OBJECT_TYPE_DEFINITION ? DirectiveLocation.INPUT_FIELD_DEFINITION : DirectiveLocation.ARGUMENT_DEFINITION;\n      }\n  }\n}\n\nfunction getDirectiveLocationForOperation(operation) {\n  switch (operation) {\n    case 'query':\n      return DirectiveLocation.QUERY;\n\n    case 'mutation':\n      return DirectiveLocation.MUTATION;\n\n    case 'subscription':\n      return DirectiveLocation.SUBSCRIPTION;\n  } // istanbul ignore next (Not reachable. All possible types have been considered)\n\n\n  false || invariant(0, 'Unexpected operation: ' + inspect(operation));\n}\n","import { GraphQLError } from \"../../error/GraphQLError.mjs\";\nimport { Kind } from \"../../language/kinds.mjs\";\nimport { isTypeDefinitionNode, isTypeExtensionNode } from \"../../language/predicates.mjs\";\nimport { specifiedDirectives } from \"../../type/directives.mjs\";\n\n/**\n * Unique directive names per location\n *\n * A GraphQL document is only valid if all non-repeatable directives at\n * a given location are uniquely named.\n */\nexport function UniqueDirectivesPerLocationRule(context) {\n  var uniqueDirectiveMap = Object.create(null);\n  var schema = context.getSchema();\n  var definedDirectives = schema ? schema.getDirectives() : specifiedDirectives;\n\n  for (var _i2 = 0; _i2 < definedDirectives.length; _i2++) {\n    var directive = definedDirectives[_i2];\n    uniqueDirectiveMap[directive.name] = !directive.isRepeatable;\n  }\n\n  var astDefinitions = context.getDocument().definitions;\n\n  for (var _i4 = 0; _i4 < astDefinitions.length; _i4++) {\n    var def = astDefinitions[_i4];\n\n    if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      uniqueDirectiveMap[def.name.value] = !def.repeatable;\n    }\n  }\n\n  var schemaDirectives = Object.create(null);\n  var typeDirectivesMap = Object.create(null);\n  return {\n    // Many different AST nodes may contain directives. Rather than listing\n    // them all, just listen for entering any node, and check to see if it\n    // defines any directives.\n    enter: function enter(node) {\n      if (node.directives == null) {\n        return;\n      }\n\n      var seenDirectives;\n\n      if (node.kind === Kind.SCHEMA_DEFINITION || node.kind === Kind.SCHEMA_EXTENSION) {\n        seenDirectives = schemaDirectives;\n      } else if (isTypeDefinitionNode(node) || isTypeExtensionNode(node)) {\n        var typeName = node.name.value;\n        seenDirectives = typeDirectivesMap[typeName];\n\n        if (seenDirectives === undefined) {\n          typeDirectivesMap[typeName] = seenDirectives = Object.create(null);\n        }\n      } else {\n        seenDirectives = Object.create(null);\n      }\n\n      for (var _i6 = 0, _node$directives2 = node.directives; _i6 < _node$directives2.length; _i6++) {\n        var _directive = _node$directives2[_i6];\n        var directiveName = _directive.name.value;\n\n        if (uniqueDirectiveMap[directiveName]) {\n          if (seenDirectives[directiveName]) {\n            context.reportError(new GraphQLError(\"The directive \\\"@\".concat(directiveName, \"\\\" can only be used once at this location.\"), [seenDirectives[directiveName], _directive]));\n          } else {\n            seenDirectives[directiveName] = _directive;\n          }\n        }\n      }\n    }\n  };\n}\n","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport didYouMean from \"../../jsutils/didYouMean.mjs\";\nimport suggestionList from \"../../jsutils/suggestionList.mjs\";\nimport { GraphQLError } from \"../../error/GraphQLError.mjs\";\nimport { Kind } from \"../../language/kinds.mjs\";\nimport { specifiedDirectives } from \"../../type/directives.mjs\";\n\n/**\n * Known argument names\n *\n * A GraphQL field is only valid if all supplied arguments are defined by\n * that field.\n */\nexport function KnownArgumentNamesRule(context) {\n  return _objectSpread(_objectSpread({}, KnownArgumentNamesOnDirectivesRule(context)), {}, {\n    Argument: function Argument(argNode) {\n      var argDef = context.getArgument();\n      var fieldDef = context.getFieldDef();\n      var parentType = context.getParentType();\n\n      if (!argDef && fieldDef && parentType) {\n        var argName = argNode.name.value;\n        var knownArgsNames = fieldDef.args.map(function (arg) {\n          return arg.name;\n        });\n        var suggestions = suggestionList(argName, knownArgsNames);\n        context.reportError(new GraphQLError(\"Unknown argument \\\"\".concat(argName, \"\\\" on field \\\"\").concat(parentType.name, \".\").concat(fieldDef.name, \"\\\".\") + didYouMean(suggestions), argNode));\n      }\n    }\n  });\n}\n/**\n * @internal\n */\n\nexport function KnownArgumentNamesOnDirectivesRule(context) {\n  var directiveArgs = Object.create(null);\n  var schema = context.getSchema();\n  var definedDirectives = schema ? schema.getDirectives() : specifiedDirectives;\n\n  for (var _i2 = 0; _i2 < definedDirectives.length; _i2++) {\n    var directive = definedDirectives[_i2];\n    directiveArgs[directive.name] = directive.args.map(function (arg) {\n      return arg.name;\n    });\n  }\n\n  var astDefinitions = context.getDocument().definitions;\n\n  for (var _i4 = 0; _i4 < astDefinitions.length; _i4++) {\n    var def = astDefinitions[_i4];\n\n    if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      var _def$arguments;\n\n      // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n      var argsNodes = (_def$arguments = def.arguments) !== null && _def$arguments !== void 0 ? _def$arguments : [];\n      directiveArgs[def.name.value] = argsNodes.map(function (arg) {\n        return arg.name.value;\n      });\n    }\n  }\n\n  return {\n    Directive: function Directive(directiveNode) {\n      var directiveName = directiveNode.name.value;\n      var knownArgs = directiveArgs[directiveName];\n\n      if (directiveNode.arguments && knownArgs) {\n        for (var _i6 = 0, _directiveNode$argume2 = directiveNode.arguments; _i6 < _directiveNode$argume2.length; _i6++) {\n          var argNode = _directiveNode$argume2[_i6];\n          var argName = argNode.name.value;\n\n          if (knownArgs.indexOf(argName) === -1) {\n            var suggestions = suggestionList(argName, knownArgs);\n            context.reportError(new GraphQLError(\"Unknown argument \\\"\".concat(argName, \"\\\" on directive \\\"@\").concat(directiveName, \"\\\".\") + didYouMean(suggestions), argNode));\n          }\n        }\n      }\n\n      return false;\n    }\n  };\n}\n","import { GraphQLError } from \"../../error/GraphQLError.mjs\";\n\n/**\n * Unique argument names\n *\n * A GraphQL field or directive is only valid if all supplied arguments are\n * uniquely named.\n */\nexport function UniqueArgumentNamesRule(context) {\n  var knownArgNames = Object.create(null);\n  return {\n    Field: function Field() {\n      knownArgNames = Object.create(null);\n    },\n    Directive: function Directive() {\n      knownArgNames = Object.create(null);\n    },\n    Argument: function Argument(node) {\n      var argName = node.name.value;\n\n      if (knownArgNames[argName]) {\n        context.reportError(new GraphQLError(\"There can be only one argument named \\\"\".concat(argName, \"\\\".\"), [knownArgNames[argName], node.name]));\n      } else {\n        knownArgNames[argName] = node.name;\n      }\n\n      return false;\n    }\n  };\n}\n","import objectValues from \"../../polyfills/objectValues.mjs\";\nimport keyMap from \"../../jsutils/keyMap.mjs\";\nimport inspect from \"../../jsutils/inspect.mjs\";\nimport didYouMean from \"../../jsutils/didYouMean.mjs\";\nimport suggestionList from \"../../jsutils/suggestionList.mjs\";\nimport { GraphQLError } from \"../../error/GraphQLError.mjs\";\nimport { print } from \"../../language/printer.mjs\";\nimport { isLeafType, isInputObjectType, isListType, isNonNullType, isRequiredInputField, getNullableType, getNamedType } from \"../../type/definition.mjs\";\n\n/**\n * Value literals of correct type\n *\n * A GraphQL document is only valid if all value literals are of the type\n * expected at their position.\n */\nexport function ValuesOfCorrectTypeRule(context) {\n  return {\n    ListValue: function ListValue(node) {\n      // Note: TypeInfo will traverse into a list's item type, so look to the\n      // parent input type to check if it is a list.\n      var type = getNullableType(context.getParentInputType());\n\n      if (!isListType(type)) {\n        isValidValueNode(context, node);\n        return false; // Don't traverse further.\n      }\n    },\n    ObjectValue: function ObjectValue(node) {\n      var type = getNamedType(context.getInputType());\n\n      if (!isInputObjectType(type)) {\n        isValidValueNode(context, node);\n        return false; // Don't traverse further.\n      } // Ensure every required field exists.\n\n\n      var fieldNodeMap = keyMap(node.fields, function (field) {\n        return field.name.value;\n      });\n\n      for (var _i2 = 0, _objectValues2 = objectValues(type.getFields()); _i2 < _objectValues2.length; _i2++) {\n        var fieldDef = _objectValues2[_i2];\n        var fieldNode = fieldNodeMap[fieldDef.name];\n\n        if (!fieldNode && isRequiredInputField(fieldDef)) {\n          var typeStr = inspect(fieldDef.type);\n          context.reportError(new GraphQLError(\"Field \\\"\".concat(type.name, \".\").concat(fieldDef.name, \"\\\" of required type \\\"\").concat(typeStr, \"\\\" was not provided.\"), node));\n        }\n      }\n    },\n    ObjectField: function ObjectField(node) {\n      var parentType = getNamedType(context.getParentInputType());\n      var fieldType = context.getInputType();\n\n      if (!fieldType && isInputObjectType(parentType)) {\n        var suggestions = suggestionList(node.name.value, Object.keys(parentType.getFields()));\n        context.reportError(new GraphQLError(\"Field \\\"\".concat(node.name.value, \"\\\" is not defined by type \\\"\").concat(parentType.name, \"\\\".\") + didYouMean(suggestions), node));\n      }\n    },\n    NullValue: function NullValue(node) {\n      var type = context.getInputType();\n\n      if (isNonNullType(type)) {\n        context.reportError(new GraphQLError(\"Expected value of type \\\"\".concat(inspect(type), \"\\\", found \").concat(print(node), \".\"), node));\n      }\n    },\n    EnumValue: function EnumValue(node) {\n      return isValidValueNode(context, node);\n    },\n    IntValue: function IntValue(node) {\n      return isValidValueNode(context, node);\n    },\n    FloatValue: function FloatValue(node) {\n      return isValidValueNode(context, node);\n    },\n    StringValue: function StringValue(node) {\n      return isValidValueNode(context, node);\n    },\n    BooleanValue: function BooleanValue(node) {\n      return isValidValueNode(context, node);\n    }\n  };\n}\n/**\n * Any value literal may be a valid representation of a Scalar, depending on\n * that scalar type.\n */\n\nfunction isValidValueNode(context, node) {\n  // Report any error at the full type expected by the location.\n  var locationType = context.getInputType();\n\n  if (!locationType) {\n    return;\n  }\n\n  var type = getNamedType(locationType);\n\n  if (!isLeafType(type)) {\n    var typeStr = inspect(locationType);\n    context.reportError(new GraphQLError(\"Expected value of type \\\"\".concat(typeStr, \"\\\", found \").concat(print(node), \".\"), node));\n    return;\n  } // Scalars and Enums determine if a literal value is valid via parseLiteral(),\n  // which may throw or return an invalid value to indicate failure.\n\n\n  try {\n    var parseResult = type.parseLiteral(node, undefined\n    /* variables */\n    );\n\n    if (parseResult === undefined) {\n      var _typeStr = inspect(locationType);\n\n      context.reportError(new GraphQLError(\"Expected value of type \\\"\".concat(_typeStr, \"\\\", found \").concat(print(node), \".\"), node));\n    }\n  } catch (error) {\n    var _typeStr2 = inspect(locationType);\n\n    if (error instanceof GraphQLError) {\n      context.reportError(error);\n    } else {\n      context.reportError(new GraphQLError(\"Expected value of type \\\"\".concat(_typeStr2, \"\\\", found \").concat(print(node), \"; \") + error.message, node, undefined, undefined, undefined, error));\n    }\n  }\n}\n","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport inspect from \"../../jsutils/inspect.mjs\";\nimport keyMap from \"../../jsutils/keyMap.mjs\";\nimport { GraphQLError } from \"../../error/GraphQLError.mjs\";\nimport { Kind } from \"../../language/kinds.mjs\";\nimport { print } from \"../../language/printer.mjs\";\nimport { specifiedDirectives } from \"../../type/directives.mjs\";\nimport { isType, isRequiredArgument } from \"../../type/definition.mjs\";\n\n/**\n * Provided required arguments\n *\n * A field or directive is only valid if all required (non-null without a\n * default value) field arguments have been provided.\n */\nexport function ProvidedRequiredArgumentsRule(context) {\n  return _objectSpread(_objectSpread({}, ProvidedRequiredArgumentsOnDirectivesRule(context)), {}, {\n    Field: {\n      // Validate on leave to allow for deeper errors to appear first.\n      leave: function leave(fieldNode) {\n        var _fieldNode$arguments;\n\n        var fieldDef = context.getFieldDef();\n\n        if (!fieldDef) {\n          return false;\n        } // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n\n\n        var argNodes = (_fieldNode$arguments = fieldNode.arguments) !== null && _fieldNode$arguments !== void 0 ? _fieldNode$arguments : [];\n        var argNodeMap = keyMap(argNodes, function (arg) {\n          return arg.name.value;\n        });\n\n        for (var _i2 = 0, _fieldDef$args2 = fieldDef.args; _i2 < _fieldDef$args2.length; _i2++) {\n          var argDef = _fieldDef$args2[_i2];\n          var argNode = argNodeMap[argDef.name];\n\n          if (!argNode && isRequiredArgument(argDef)) {\n            var argTypeStr = inspect(argDef.type);\n            context.reportError(new GraphQLError(\"Field \\\"\".concat(fieldDef.name, \"\\\" argument \\\"\").concat(argDef.name, \"\\\" of type \\\"\").concat(argTypeStr, \"\\\" is required, but it was not provided.\"), fieldNode));\n          }\n        }\n      }\n    }\n  });\n}\n/**\n * @internal\n */\n\nexport function ProvidedRequiredArgumentsOnDirectivesRule(context) {\n  var requiredArgsMap = Object.create(null);\n  var schema = context.getSchema();\n  var definedDirectives = schema ? schema.getDirectives() : specifiedDirectives;\n\n  for (var _i4 = 0; _i4 < definedDirectives.length; _i4++) {\n    var directive = definedDirectives[_i4];\n    requiredArgsMap[directive.name] = keyMap(directive.args.filter(isRequiredArgument), function (arg) {\n      return arg.name;\n    });\n  }\n\n  var astDefinitions = context.getDocument().definitions;\n\n  for (var _i6 = 0; _i6 < astDefinitions.length; _i6++) {\n    var def = astDefinitions[_i6];\n\n    if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      var _def$arguments;\n\n      // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n      var argNodes = (_def$arguments = def.arguments) !== null && _def$arguments !== void 0 ? _def$arguments : [];\n      requiredArgsMap[def.name.value] = keyMap(argNodes.filter(isRequiredArgumentNode), function (arg) {\n        return arg.name.value;\n      });\n    }\n  }\n\n  return {\n    Directive: {\n      // Validate on leave to allow for deeper errors to appear first.\n      leave: function leave(directiveNode) {\n        var directiveName = directiveNode.name.value;\n        var requiredArgs = requiredArgsMap[directiveName];\n\n        if (requiredArgs) {\n          var _directiveNode$argume;\n\n          // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n          var _argNodes = (_directiveNode$argume = directiveNode.arguments) !== null && _directiveNode$argume !== void 0 ? _directiveNode$argume : [];\n\n          var argNodeMap = keyMap(_argNodes, function (arg) {\n            return arg.name.value;\n          });\n\n          for (var _i8 = 0, _Object$keys2 = Object.keys(requiredArgs); _i8 < _Object$keys2.length; _i8++) {\n            var argName = _Object$keys2[_i8];\n\n            if (!argNodeMap[argName]) {\n              var argType = requiredArgs[argName].type;\n              var argTypeStr = isType(argType) ? inspect(argType) : print(argType);\n              context.reportError(new GraphQLError(\"Directive \\\"@\".concat(directiveName, \"\\\" argument \\\"\").concat(argName, \"\\\" of type \\\"\").concat(argTypeStr, \"\\\" is required, but it was not provided.\"), directiveNode));\n            }\n          }\n        }\n      }\n    }\n  };\n}\n\nfunction isRequiredArgumentNode(arg) {\n  return arg.type.kind === Kind.NON_NULL_TYPE && arg.defaultValue == null;\n}\n","import inspect from \"../../jsutils/inspect.mjs\";\nimport { GraphQLError } from \"../../error/GraphQLError.mjs\";\nimport { Kind } from \"../../language/kinds.mjs\";\nimport { isNonNullType } from \"../../type/definition.mjs\";\nimport { typeFromAST } from \"../../utilities/typeFromAST.mjs\";\nimport { isTypeSubTypeOf } from \"../../utilities/typeComparators.mjs\";\n\n/**\n * Variables passed to field arguments conform to type\n */\nexport function VariablesInAllowedPositionRule(context) {\n  var varDefMap = Object.create(null);\n  return {\n    OperationDefinition: {\n      enter: function enter() {\n        varDefMap = Object.create(null);\n      },\n      leave: function leave(operation) {\n        var usages = context.getRecursiveVariableUsages(operation);\n\n        for (var _i2 = 0; _i2 < usages.length; _i2++) {\n          var _ref2 = usages[_i2];\n          var node = _ref2.node;\n          var type = _ref2.type;\n          var defaultValue = _ref2.defaultValue;\n          var varName = node.name.value;\n          var varDef = varDefMap[varName];\n\n          if (varDef && type) {\n            // A var type is allowed if it is the same or more strict (e.g. is\n            // a subtype of) than the expected type. It can be more strict if\n            // the variable type is non-null when the expected type is nullable.\n            // If both are list types, the variable item type can be more strict\n            // than the expected item type (contravariant).\n            var schema = context.getSchema();\n            var varType = typeFromAST(schema, varDef.type);\n\n            if (varType && !allowedVariableUsage(schema, varType, varDef.defaultValue, type, defaultValue)) {\n              var varTypeStr = inspect(varType);\n              var typeStr = inspect(type);\n              context.reportError(new GraphQLError(\"Variable \\\"$\".concat(varName, \"\\\" of type \\\"\").concat(varTypeStr, \"\\\" used in position expecting type \\\"\").concat(typeStr, \"\\\".\"), [varDef, node]));\n            }\n          }\n        }\n      }\n    },\n    VariableDefinition: function VariableDefinition(node) {\n      varDefMap[node.variable.name.value] = node;\n    }\n  };\n}\n/**\n * Returns true if the variable is allowed in the location it was found,\n * which includes considering if default values exist for either the variable\n * or the location at which it is located.\n */\n\nfunction allowedVariableUsage(schema, varType, varDefaultValue, locationType, locationDefaultValue) {\n  if (isNonNullType(locationType) && !isNonNullType(varType)) {\n    var hasNonNullVariableDefaultValue = varDefaultValue != null && varDefaultValue.kind !== Kind.NULL;\n    var hasLocationDefaultValue = locationDefaultValue !== undefined;\n\n    if (!hasNonNullVariableDefaultValue && !hasLocationDefaultValue) {\n      return false;\n    }\n\n    var nullableLocationType = locationType.ofType;\n    return isTypeSubTypeOf(schema, varType, nullableLocationType);\n  }\n\n  return isTypeSubTypeOf(schema, varType, locationType);\n}\n","import find from \"../../polyfills/find.mjs\";\nimport objectEntries from \"../../polyfills/objectEntries.mjs\";\nimport inspect from \"../../jsutils/inspect.mjs\";\nimport { GraphQLError } from \"../../error/GraphQLError.mjs\";\nimport { Kind } from \"../../language/kinds.mjs\";\nimport { print } from \"../../language/printer.mjs\";\nimport { getNamedType, isNonNullType, isLeafType, isObjectType, isListType, isInterfaceType } from \"../../type/definition.mjs\";\nimport { typeFromAST } from \"../../utilities/typeFromAST.mjs\";\n\nfunction reasonMessage(reason) {\n  if (Array.isArray(reason)) {\n    return reason.map(function (_ref) {\n      var responseName = _ref[0],\n          subReason = _ref[1];\n      return \"subfields \\\"\".concat(responseName, \"\\\" conflict because \") + reasonMessage(subReason);\n    }).join(' and ');\n  }\n\n  return reason;\n}\n/**\n * Overlapping fields can be merged\n *\n * A selection set is only valid if all fields (including spreading any\n * fragments) either correspond to distinct response names or can be merged\n * without ambiguity.\n */\n\n\nexport function OverlappingFieldsCanBeMergedRule(context) {\n  // A memoization for when two fragments are compared \"between\" each other for\n  // conflicts. Two fragments may be compared many times, so memoizing this can\n  // dramatically improve the performance of this validator.\n  var comparedFragmentPairs = new PairSet(); // A cache for the \"field map\" and list of fragment names found in any given\n  // selection set. Selection sets may be asked for this information multiple\n  // times, so this improves the performance of this validator.\n\n  var cachedFieldsAndFragmentNames = new Map();\n  return {\n    SelectionSet: function SelectionSet(selectionSet) {\n      var conflicts = findConflictsWithinSelectionSet(context, cachedFieldsAndFragmentNames, comparedFragmentPairs, context.getParentType(), selectionSet);\n\n      for (var _i2 = 0; _i2 < conflicts.length; _i2++) {\n        var _ref3 = conflicts[_i2];\n        var _ref2$ = _ref3[0];\n        var responseName = _ref2$[0];\n        var reason = _ref2$[1];\n        var fields1 = _ref3[1];\n        var fields2 = _ref3[2];\n        var reasonMsg = reasonMessage(reason);\n        context.reportError(new GraphQLError(\"Fields \\\"\".concat(responseName, \"\\\" conflict because \").concat(reasonMsg, \". Use different aliases on the fields to fetch both if this was intentional.\"), fields1.concat(fields2)));\n      }\n    }\n  };\n}\n\n/**\n * Algorithm:\n *\n * Conflicts occur when two fields exist in a query which will produce the same\n * response name, but represent differing values, thus creating a conflict.\n * The algorithm below finds all conflicts via making a series of comparisons\n * between fields. In order to compare as few fields as possible, this makes\n * a series of comparisons \"within\" sets of fields and \"between\" sets of fields.\n *\n * Given any selection set, a collection produces both a set of fields by\n * also including all inline fragments, as well as a list of fragments\n * referenced by fragment spreads.\n *\n * A) Each selection set represented in the document first compares \"within\" its\n * collected set of fields, finding any conflicts between every pair of\n * overlapping fields.\n * Note: This is the *only time* that a the fields \"within\" a set are compared\n * to each other. After this only fields \"between\" sets are compared.\n *\n * B) Also, if any fragment is referenced in a selection set, then a\n * comparison is made \"between\" the original set of fields and the\n * referenced fragment.\n *\n * C) Also, if multiple fragments are referenced, then comparisons\n * are made \"between\" each referenced fragment.\n *\n * D) When comparing \"between\" a set of fields and a referenced fragment, first\n * a comparison is made between each field in the original set of fields and\n * each field in the the referenced set of fields.\n *\n * E) Also, if any fragment is referenced in the referenced selection set,\n * then a comparison is made \"between\" the original set of fields and the\n * referenced fragment (recursively referring to step D).\n *\n * F) When comparing \"between\" two fragments, first a comparison is made between\n * each field in the first referenced set of fields and each field in the the\n * second referenced set of fields.\n *\n * G) Also, any fragments referenced by the first must be compared to the\n * second, and any fragments referenced by the second must be compared to the\n * first (recursively referring to step F).\n *\n * H) When comparing two fields, if both have selection sets, then a comparison\n * is made \"between\" both selection sets, first comparing the set of fields in\n * the first selection set with the set of fields in the second.\n *\n * I) Also, if any fragment is referenced in either selection set, then a\n * comparison is made \"between\" the other set of fields and the\n * referenced fragment.\n *\n * J) Also, if two fragments are referenced in both selection sets, then a\n * comparison is made \"between\" the two fragments.\n *\n */\n// Find all conflicts found \"within\" a selection set, including those found\n// via spreading in fragments. Called when visiting each SelectionSet in the\n// GraphQL Document.\nfunction findConflictsWithinSelectionSet(context, cachedFieldsAndFragmentNames, comparedFragmentPairs, parentType, selectionSet) {\n  var conflicts = [];\n\n  var _getFieldsAndFragment = getFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, parentType, selectionSet),\n      fieldMap = _getFieldsAndFragment[0],\n      fragmentNames = _getFieldsAndFragment[1]; // (A) Find find all conflicts \"within\" the fields of this selection set.\n  // Note: this is the *only place* `collectConflictsWithin` is called.\n\n\n  collectConflictsWithin(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, fieldMap);\n\n  if (fragmentNames.length !== 0) {\n    // (B) Then collect conflicts between these fields and those represented by\n    // each spread fragment name found.\n    for (var i = 0; i < fragmentNames.length; i++) {\n      collectConflictsBetweenFieldsAndFragment(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, false, fieldMap, fragmentNames[i]); // (C) Then compare this fragment with all other fragments found in this\n      // selection set to collect conflicts between fragments spread together.\n      // This compares each item in the list of fragment names to every other\n      // item in that same list (except for itself).\n\n      for (var j = i + 1; j < fragmentNames.length; j++) {\n        collectConflictsBetweenFragments(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, false, fragmentNames[i], fragmentNames[j]);\n      }\n    }\n  }\n\n  return conflicts;\n} // Collect all conflicts found between a set of fields and a fragment reference\n// including via spreading in any nested fragments.\n\n\nfunction collectConflictsBetweenFieldsAndFragment(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fieldMap, fragmentName) {\n  var fragment = context.getFragment(fragmentName);\n\n  if (!fragment) {\n    return;\n  }\n\n  var _getReferencedFieldsA = getReferencedFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, fragment),\n      fieldMap2 = _getReferencedFieldsA[0],\n      fragmentNames2 = _getReferencedFieldsA[1]; // Do not compare a fragment's fieldMap to itself.\n\n\n  if (fieldMap === fieldMap2) {\n    return;\n  } // (D) First collect any conflicts between the provided collection of fields\n  // and the collection of fields represented by the given fragment.\n\n\n  collectConflictsBetween(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fieldMap, fieldMap2); // (E) Then collect any conflicts between the provided collection of fields\n  // and any fragment names found in the given fragment.\n\n  for (var i = 0; i < fragmentNames2.length; i++) {\n    collectConflictsBetweenFieldsAndFragment(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fieldMap, fragmentNames2[i]);\n  }\n} // Collect all conflicts found between two fragments, including via spreading in\n// any nested fragments.\n\n\nfunction collectConflictsBetweenFragments(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fragmentName1, fragmentName2) {\n  // No need to compare a fragment to itself.\n  if (fragmentName1 === fragmentName2) {\n    return;\n  } // Memoize so two fragments are not compared for conflicts more than once.\n\n\n  if (comparedFragmentPairs.has(fragmentName1, fragmentName2, areMutuallyExclusive)) {\n    return;\n  }\n\n  comparedFragmentPairs.add(fragmentName1, fragmentName2, areMutuallyExclusive);\n  var fragment1 = context.getFragment(fragmentName1);\n  var fragment2 = context.getFragment(fragmentName2);\n\n  if (!fragment1 || !fragment2) {\n    return;\n  }\n\n  var _getReferencedFieldsA2 = getReferencedFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, fragment1),\n      fieldMap1 = _getReferencedFieldsA2[0],\n      fragmentNames1 = _getReferencedFieldsA2[1];\n\n  var _getReferencedFieldsA3 = getReferencedFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, fragment2),\n      fieldMap2 = _getReferencedFieldsA3[0],\n      fragmentNames2 = _getReferencedFieldsA3[1]; // (F) First, collect all conflicts between these two collections of fields\n  // (not including any nested fragments).\n\n\n  collectConflictsBetween(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fieldMap1, fieldMap2); // (G) Then collect conflicts between the first fragment and any nested\n  // fragments spread in the second fragment.\n\n  for (var j = 0; j < fragmentNames2.length; j++) {\n    collectConflictsBetweenFragments(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fragmentName1, fragmentNames2[j]);\n  } // (G) Then collect conflicts between the second fragment and any nested\n  // fragments spread in the first fragment.\n\n\n  for (var i = 0; i < fragmentNames1.length; i++) {\n    collectConflictsBetweenFragments(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fragmentNames1[i], fragmentName2);\n  }\n} // Find all conflicts found between two selection sets, including those found\n// via spreading in fragments. Called when determining if conflicts exist\n// between the sub-fields of two overlapping fields.\n\n\nfunction findConflictsBetweenSubSelectionSets(context, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, parentType1, selectionSet1, parentType2, selectionSet2) {\n  var conflicts = [];\n\n  var _getFieldsAndFragment2 = getFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, parentType1, selectionSet1),\n      fieldMap1 = _getFieldsAndFragment2[0],\n      fragmentNames1 = _getFieldsAndFragment2[1];\n\n  var _getFieldsAndFragment3 = getFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, parentType2, selectionSet2),\n      fieldMap2 = _getFieldsAndFragment3[0],\n      fragmentNames2 = _getFieldsAndFragment3[1]; // (H) First, collect all conflicts between these two collections of field.\n\n\n  collectConflictsBetween(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fieldMap1, fieldMap2); // (I) Then collect conflicts between the first collection of fields and\n  // those referenced by each fragment name associated with the second.\n\n  if (fragmentNames2.length !== 0) {\n    for (var j = 0; j < fragmentNames2.length; j++) {\n      collectConflictsBetweenFieldsAndFragment(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fieldMap1, fragmentNames2[j]);\n    }\n  } // (I) Then collect conflicts between the second collection of fields and\n  // those referenced by each fragment name associated with the first.\n\n\n  if (fragmentNames1.length !== 0) {\n    for (var i = 0; i < fragmentNames1.length; i++) {\n      collectConflictsBetweenFieldsAndFragment(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fieldMap2, fragmentNames1[i]);\n    }\n  } // (J) Also collect conflicts between any fragment names by the first and\n  // fragment names by the second. This compares each item in the first set of\n  // names to each item in the second set of names.\n\n\n  for (var _i3 = 0; _i3 < fragmentNames1.length; _i3++) {\n    for (var _j = 0; _j < fragmentNames2.length; _j++) {\n      collectConflictsBetweenFragments(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fragmentNames1[_i3], fragmentNames2[_j]);\n    }\n  }\n\n  return conflicts;\n} // Collect all Conflicts \"within\" one collection of fields.\n\n\nfunction collectConflictsWithin(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, fieldMap) {\n  // A field map is a keyed collection, where each key represents a response\n  // name and the value at that key is a list of all fields which provide that\n  // response name. For every response name, if there are multiple fields, they\n  // must be compared to find a potential conflict.\n  for (var _i5 = 0, _objectEntries2 = objectEntries(fieldMap); _i5 < _objectEntries2.length; _i5++) {\n    var _ref5 = _objectEntries2[_i5];\n    var responseName = _ref5[0];\n    var fields = _ref5[1];\n\n    // This compares every field in the list to every other field in this list\n    // (except to itself). If the list only has one item, nothing needs to\n    // be compared.\n    if (fields.length > 1) {\n      for (var i = 0; i < fields.length; i++) {\n        for (var j = i + 1; j < fields.length; j++) {\n          var conflict = findConflict(context, cachedFieldsAndFragmentNames, comparedFragmentPairs, false, // within one collection is never mutually exclusive\n          responseName, fields[i], fields[j]);\n\n          if (conflict) {\n            conflicts.push(conflict);\n          }\n        }\n      }\n    }\n  }\n} // Collect all Conflicts between two collections of fields. This is similar to,\n// but different from the `collectConflictsWithin` function above. This check\n// assumes that `collectConflictsWithin` has already been called on each\n// provided collection of fields. This is true because this validator traverses\n// each individual selection set.\n\n\nfunction collectConflictsBetween(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, parentFieldsAreMutuallyExclusive, fieldMap1, fieldMap2) {\n  // A field map is a keyed collection, where each key represents a response\n  // name and the value at that key is a list of all fields which provide that\n  // response name. For any response name which appears in both provided field\n  // maps, each field from the first field map must be compared to every field\n  // in the second field map to find potential conflicts.\n  for (var _i7 = 0, _Object$keys2 = Object.keys(fieldMap1); _i7 < _Object$keys2.length; _i7++) {\n    var responseName = _Object$keys2[_i7];\n    var fields2 = fieldMap2[responseName];\n\n    if (fields2) {\n      var fields1 = fieldMap1[responseName];\n\n      for (var i = 0; i < fields1.length; i++) {\n        for (var j = 0; j < fields2.length; j++) {\n          var conflict = findConflict(context, cachedFieldsAndFragmentNames, comparedFragmentPairs, parentFieldsAreMutuallyExclusive, responseName, fields1[i], fields2[j]);\n\n          if (conflict) {\n            conflicts.push(conflict);\n          }\n        }\n      }\n    }\n  }\n} // Determines if there is a conflict between two particular fields, including\n// comparing their sub-fields.\n\n\nfunction findConflict(context, cachedFieldsAndFragmentNames, comparedFragmentPairs, parentFieldsAreMutuallyExclusive, responseName, field1, field2) {\n  var parentType1 = field1[0],\n      node1 = field1[1],\n      def1 = field1[2];\n  var parentType2 = field2[0],\n      node2 = field2[1],\n      def2 = field2[2]; // If it is known that two fields could not possibly apply at the same\n  // time, due to the parent types, then it is safe to permit them to diverge\n  // in aliased field or arguments used as they will not present any ambiguity\n  // by differing.\n  // It is known that two parent types could never overlap if they are\n  // different Object types. Interface or Union types might overlap - if not\n  // in the current state of the schema, then perhaps in some future version,\n  // thus may not safely diverge.\n\n  var areMutuallyExclusive = parentFieldsAreMutuallyExclusive || parentType1 !== parentType2 && isObjectType(parentType1) && isObjectType(parentType2);\n\n  if (!areMutuallyExclusive) {\n    var _node1$arguments, _node2$arguments;\n\n    // Two aliases must refer to the same field.\n    var name1 = node1.name.value;\n    var name2 = node2.name.value;\n\n    if (name1 !== name2) {\n      return [[responseName, \"\\\"\".concat(name1, \"\\\" and \\\"\").concat(name2, \"\\\" are different fields\")], [node1], [node2]];\n    } // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n\n\n    var args1 = (_node1$arguments = node1.arguments) !== null && _node1$arguments !== void 0 ? _node1$arguments : []; // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n\n    var args2 = (_node2$arguments = node2.arguments) !== null && _node2$arguments !== void 0 ? _node2$arguments : []; // Two field calls must have the same arguments.\n\n    if (!sameArguments(args1, args2)) {\n      return [[responseName, 'they have differing arguments'], [node1], [node2]];\n    }\n  } // The return type for each field.\n\n\n  var type1 = def1 === null || def1 === void 0 ? void 0 : def1.type;\n  var type2 = def2 === null || def2 === void 0 ? void 0 : def2.type;\n\n  if (type1 && type2 && doTypesConflict(type1, type2)) {\n    return [[responseName, \"they return conflicting types \\\"\".concat(inspect(type1), \"\\\" and \\\"\").concat(inspect(type2), \"\\\"\")], [node1], [node2]];\n  } // Collect and compare sub-fields. Use the same \"visited fragment names\" list\n  // for both collections so fields in a fragment reference are never\n  // compared to themselves.\n\n\n  var selectionSet1 = node1.selectionSet;\n  var selectionSet2 = node2.selectionSet;\n\n  if (selectionSet1 && selectionSet2) {\n    var conflicts = findConflictsBetweenSubSelectionSets(context, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, getNamedType(type1), selectionSet1, getNamedType(type2), selectionSet2);\n    return subfieldConflicts(conflicts, responseName, node1, node2);\n  }\n}\n\nfunction sameArguments(arguments1, arguments2) {\n  if (arguments1.length !== arguments2.length) {\n    return false;\n  }\n\n  return arguments1.every(function (argument1) {\n    var argument2 = find(arguments2, function (argument) {\n      return argument.name.value === argument1.name.value;\n    });\n\n    if (!argument2) {\n      return false;\n    }\n\n    return sameValue(argument1.value, argument2.value);\n  });\n}\n\nfunction sameValue(value1, value2) {\n  return print(value1) === print(value2);\n} // Two types conflict if both types could not apply to a value simultaneously.\n// Composite types are ignored as their individual field types will be compared\n// later recursively. However List and Non-Null types must match.\n\n\nfunction doTypesConflict(type1, type2) {\n  if (isListType(type1)) {\n    return isListType(type2) ? doTypesConflict(type1.ofType, type2.ofType) : true;\n  }\n\n  if (isListType(type2)) {\n    return true;\n  }\n\n  if (isNonNullType(type1)) {\n    return isNonNullType(type2) ? doTypesConflict(type1.ofType, type2.ofType) : true;\n  }\n\n  if (isNonNullType(type2)) {\n    return true;\n  }\n\n  if (isLeafType(type1) || isLeafType(type2)) {\n    return type1 !== type2;\n  }\n\n  return false;\n} // Given a selection set, return the collection of fields (a mapping of response\n// name to field nodes and definitions) as well as a list of fragment names\n// referenced via fragment spreads.\n\n\nfunction getFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, parentType, selectionSet) {\n  var cached = cachedFieldsAndFragmentNames.get(selectionSet);\n\n  if (!cached) {\n    var nodeAndDefs = Object.create(null);\n    var fragmentNames = Object.create(null);\n\n    _collectFieldsAndFragmentNames(context, parentType, selectionSet, nodeAndDefs, fragmentNames);\n\n    cached = [nodeAndDefs, Object.keys(fragmentNames)];\n    cachedFieldsAndFragmentNames.set(selectionSet, cached);\n  }\n\n  return cached;\n} // Given a reference to a fragment, return the represented collection of fields\n// as well as a list of nested fragment names referenced via fragment spreads.\n\n\nfunction getReferencedFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, fragment) {\n  // Short-circuit building a type from the node if possible.\n  var cached = cachedFieldsAndFragmentNames.get(fragment.selectionSet);\n\n  if (cached) {\n    return cached;\n  }\n\n  var fragmentType = typeFromAST(context.getSchema(), fragment.typeCondition);\n  return getFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, fragmentType, fragment.selectionSet);\n}\n\nfunction _collectFieldsAndFragmentNames(context, parentType, selectionSet, nodeAndDefs, fragmentNames) {\n  for (var _i9 = 0, _selectionSet$selecti2 = selectionSet.selections; _i9 < _selectionSet$selecti2.length; _i9++) {\n    var selection = _selectionSet$selecti2[_i9];\n\n    switch (selection.kind) {\n      case Kind.FIELD:\n        {\n          var fieldName = selection.name.value;\n          var fieldDef = void 0;\n\n          if (isObjectType(parentType) || isInterfaceType(parentType)) {\n            fieldDef = parentType.getFields()[fieldName];\n          }\n\n          var responseName = selection.alias ? selection.alias.value : fieldName;\n\n          if (!nodeAndDefs[responseName]) {\n            nodeAndDefs[responseName] = [];\n          }\n\n          nodeAndDefs[responseName].push([parentType, selection, fieldDef]);\n          break;\n        }\n\n      case Kind.FRAGMENT_SPREAD:\n        fragmentNames[selection.name.value] = true;\n        break;\n\n      case Kind.INLINE_FRAGMENT:\n        {\n          var typeCondition = selection.typeCondition;\n          var inlineFragmentType = typeCondition ? typeFromAST(context.getSchema(), typeCondition) : parentType;\n\n          _collectFieldsAndFragmentNames(context, inlineFragmentType, selection.selectionSet, nodeAndDefs, fragmentNames);\n\n          break;\n        }\n    }\n  }\n} // Given a series of Conflicts which occurred between two sub-fields, generate\n// a single Conflict.\n\n\nfunction subfieldConflicts(conflicts, responseName, node1, node2) {\n  if (conflicts.length > 0) {\n    return [[responseName, conflicts.map(function (_ref6) {\n      var reason = _ref6[0];\n      return reason;\n    })], conflicts.reduce(function (allFields, _ref7) {\n      var fields1 = _ref7[1];\n      return allFields.concat(fields1);\n    }, [node1]), conflicts.reduce(function (allFields, _ref8) {\n      var fields2 = _ref8[2];\n      return allFields.concat(fields2);\n    }, [node2])];\n  }\n}\n/**\n * A way to keep track of pairs of things when the ordering of the pair does\n * not matter. We do this by maintaining a sort of double adjacency sets.\n */\n\n\nvar PairSet = /*#__PURE__*/function () {\n  function PairSet() {\n    this._data = Object.create(null);\n  }\n\n  var _proto = PairSet.prototype;\n\n  _proto.has = function has(a, b, areMutuallyExclusive) {\n    var first = this._data[a];\n    var result = first && first[b];\n\n    if (result === undefined) {\n      return false;\n    } // areMutuallyExclusive being false is a superset of being true,\n    // hence if we want to know if this PairSet \"has\" these two with no\n    // exclusivity, we have to ensure it was added as such.\n\n\n    if (areMutuallyExclusive === false) {\n      return result === false;\n    }\n\n    return true;\n  };\n\n  _proto.add = function add(a, b, areMutuallyExclusive) {\n    this._pairSetAdd(a, b, areMutuallyExclusive);\n\n    this._pairSetAdd(b, a, areMutuallyExclusive);\n  };\n\n  _proto._pairSetAdd = function _pairSetAdd(a, b, areMutuallyExclusive) {\n    var map = this._data[a];\n\n    if (!map) {\n      map = Object.create(null);\n      this._data[a] = map;\n    }\n\n    map[b] = areMutuallyExclusive;\n  };\n\n  return PairSet;\n}();\n","import { GraphQLError } from \"../../error/GraphQLError.mjs\";\n\n/**\n * Unique input field names\n *\n * A GraphQL input object value is only valid if all supplied fields are\n * uniquely named.\n */\nexport function UniqueInputFieldNamesRule(context) {\n  var knownNameStack = [];\n  var knownNames = Object.create(null);\n  return {\n    ObjectValue: {\n      enter: function enter() {\n        knownNameStack.push(knownNames);\n        knownNames = Object.create(null);\n      },\n      leave: function leave() {\n        knownNames = knownNameStack.pop();\n      }\n    },\n    ObjectField: function ObjectField(node) {\n      var fieldName = node.name.value;\n\n      if (knownNames[fieldName]) {\n        context.reportError(new GraphQLError(\"There can be only one input field named \\\"\".concat(fieldName, \"\\\".\"), [knownNames[fieldName], node.name]));\n      } else {\n        knownNames[fieldName] = node.name;\n      }\n    }\n  };\n}\n","import { GraphQLError } from \"../../error/GraphQLError.mjs\";\n\n/**\n * Lone Schema definition\n *\n * A GraphQL document is only valid if it contains only one schema definition.\n */\nexport function LoneSchemaDefinitionRule(context) {\n  var _ref, _ref2, _oldSchema$astNode;\n\n  var oldSchema = context.getSchema();\n  var alreadyDefined = (_ref = (_ref2 = (_oldSchema$astNode = oldSchema === null || oldSchema === void 0 ? void 0 : oldSchema.astNode) !== null && _oldSchema$astNode !== void 0 ? _oldSchema$astNode : oldSchema === null || oldSchema === void 0 ? void 0 : oldSchema.getQueryType()) !== null && _ref2 !== void 0 ? _ref2 : oldSchema === null || oldSchema === void 0 ? void 0 : oldSchema.getMutationType()) !== null && _ref !== void 0 ? _ref : oldSchema === null || oldSchema === void 0 ? void 0 : oldSchema.getSubscriptionType();\n  var schemaDefinitionsCount = 0;\n  return {\n    SchemaDefinition: function SchemaDefinition(node) {\n      if (alreadyDefined) {\n        context.reportError(new GraphQLError('Cannot define a new schema within a schema extension.', node));\n        return;\n      }\n\n      if (schemaDefinitionsCount > 0) {\n        context.reportError(new GraphQLError('Must provide only one schema definition.', node));\n      }\n\n      ++schemaDefinitionsCount;\n    }\n  };\n}\n","import { GraphQLError } from \"../../error/GraphQLError.mjs\";\n\n/**\n * Unique operation types\n *\n * A GraphQL document is only valid if it has only one type per operation.\n */\nexport function UniqueOperationTypesRule(context) {\n  var schema = context.getSchema();\n  var definedOperationTypes = Object.create(null);\n  var existingOperationTypes = schema ? {\n    query: schema.getQueryType(),\n    mutation: schema.getMutationType(),\n    subscription: schema.getSubscriptionType()\n  } : {};\n  return {\n    SchemaDefinition: checkOperationTypes,\n    SchemaExtension: checkOperationTypes\n  };\n\n  function checkOperationTypes(node) {\n    var _node$operationTypes;\n\n    // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n    var operationTypesNodes = (_node$operationTypes = node.operationTypes) !== null && _node$operationTypes !== void 0 ? _node$operationTypes : [];\n\n    for (var _i2 = 0; _i2 < operationTypesNodes.length; _i2++) {\n      var operationType = operationTypesNodes[_i2];\n      var operation = operationType.operation;\n      var alreadyDefinedOperationType = definedOperationTypes[operation];\n\n      if (existingOperationTypes[operation]) {\n        context.reportError(new GraphQLError(\"Type for \".concat(operation, \" already defined in the schema. It cannot be redefined.\"), operationType));\n      } else if (alreadyDefinedOperationType) {\n        context.reportError(new GraphQLError(\"There can be only one \".concat(operation, \" type in schema.\"), [alreadyDefinedOperationType, operationType]));\n      } else {\n        definedOperationTypes[operation] = operationType;\n      }\n    }\n\n    return false;\n  }\n}\n","import { GraphQLError } from \"../../error/GraphQLError.mjs\";\n\n/**\n * Unique type names\n *\n * A GraphQL document is only valid if all defined types have unique names.\n */\nexport function UniqueTypeNamesRule(context) {\n  var knownTypeNames = Object.create(null);\n  var schema = context.getSchema();\n  return {\n    ScalarTypeDefinition: checkTypeName,\n    ObjectTypeDefinition: checkTypeName,\n    InterfaceTypeDefinition: checkTypeName,\n    UnionTypeDefinition: checkTypeName,\n    EnumTypeDefinition: checkTypeName,\n    InputObjectTypeDefinition: checkTypeName\n  };\n\n  function checkTypeName(node) {\n    var typeName = node.name.value;\n\n    if (schema !== null && schema !== void 0 && schema.getType(typeName)) {\n      context.reportError(new GraphQLError(\"Type \\\"\".concat(typeName, \"\\\" already exists in the schema. It cannot also be defined in this type definition.\"), node.name));\n      return;\n    }\n\n    if (knownTypeNames[typeName]) {\n      context.reportError(new GraphQLError(\"There can be only one type named \\\"\".concat(typeName, \"\\\".\"), [knownTypeNames[typeName], node.name]));\n    } else {\n      knownTypeNames[typeName] = node.name;\n    }\n\n    return false;\n  }\n}\n","import { GraphQLError } from \"../../error/GraphQLError.mjs\";\nimport { isEnumType } from \"../../type/definition.mjs\";\n\n/**\n * Unique enum value names\n *\n * A GraphQL enum type is only valid if all its values are uniquely named.\n */\nexport function UniqueEnumValueNamesRule(context) {\n  var schema = context.getSchema();\n  var existingTypeMap = schema ? schema.getTypeMap() : Object.create(null);\n  var knownValueNames = Object.create(null);\n  return {\n    EnumTypeDefinition: checkValueUniqueness,\n    EnumTypeExtension: checkValueUniqueness\n  };\n\n  function checkValueUniqueness(node) {\n    var _node$values;\n\n    var typeName = node.name.value;\n\n    if (!knownValueNames[typeName]) {\n      knownValueNames[typeName] = Object.create(null);\n    } // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n\n\n    var valueNodes = (_node$values = node.values) !== null && _node$values !== void 0 ? _node$values : [];\n    var valueNames = knownValueNames[typeName];\n\n    for (var _i2 = 0; _i2 < valueNodes.length; _i2++) {\n      var valueDef = valueNodes[_i2];\n      var valueName = valueDef.name.value;\n      var existingType = existingTypeMap[typeName];\n\n      if (isEnumType(existingType) && existingType.getValue(valueName)) {\n        context.reportError(new GraphQLError(\"Enum value \\\"\".concat(typeName, \".\").concat(valueName, \"\\\" already exists in the schema. It cannot also be defined in this type extension.\"), valueDef.name));\n      } else if (valueNames[valueName]) {\n        context.reportError(new GraphQLError(\"Enum value \\\"\".concat(typeName, \".\").concat(valueName, \"\\\" can only be defined once.\"), [valueNames[valueName], valueDef.name]));\n      } else {\n        valueNames[valueName] = valueDef.name;\n      }\n    }\n\n    return false;\n  }\n}\n","import { GraphQLError } from \"../../error/GraphQLError.mjs\";\nimport { isObjectType, isInterfaceType, isInputObjectType } from \"../../type/definition.mjs\";\n\n/**\n * Unique field definition names\n *\n * A GraphQL complex type is only valid if all its fields are uniquely named.\n */\nexport function UniqueFieldDefinitionNamesRule(context) {\n  var schema = context.getSchema();\n  var existingTypeMap = schema ? schema.getTypeMap() : Object.create(null);\n  var knownFieldNames = Object.create(null);\n  return {\n    InputObjectTypeDefinition: checkFieldUniqueness,\n    InputObjectTypeExtension: checkFieldUniqueness,\n    InterfaceTypeDefinition: checkFieldUniqueness,\n    InterfaceTypeExtension: checkFieldUniqueness,\n    ObjectTypeDefinition: checkFieldUniqueness,\n    ObjectTypeExtension: checkFieldUniqueness\n  };\n\n  function checkFieldUniqueness(node) {\n    var _node$fields;\n\n    var typeName = node.name.value;\n\n    if (!knownFieldNames[typeName]) {\n      knownFieldNames[typeName] = Object.create(null);\n    } // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n\n\n    var fieldNodes = (_node$fields = node.fields) !== null && _node$fields !== void 0 ? _node$fields : [];\n    var fieldNames = knownFieldNames[typeName];\n\n    for (var _i2 = 0; _i2 < fieldNodes.length; _i2++) {\n      var fieldDef = fieldNodes[_i2];\n      var fieldName = fieldDef.name.value;\n\n      if (hasField(existingTypeMap[typeName], fieldName)) {\n        context.reportError(new GraphQLError(\"Field \\\"\".concat(typeName, \".\").concat(fieldName, \"\\\" already exists in the schema. It cannot also be defined in this type extension.\"), fieldDef.name));\n      } else if (fieldNames[fieldName]) {\n        context.reportError(new GraphQLError(\"Field \\\"\".concat(typeName, \".\").concat(fieldName, \"\\\" can only be defined once.\"), [fieldNames[fieldName], fieldDef.name]));\n      } else {\n        fieldNames[fieldName] = fieldDef.name;\n      }\n    }\n\n    return false;\n  }\n}\n\nfunction hasField(type, fieldName) {\n  if (isObjectType(type) || isInterfaceType(type) || isInputObjectType(type)) {\n    return type.getFields()[fieldName] != null;\n  }\n\n  return false;\n}\n","import { GraphQLError } from \"../../error/GraphQLError.mjs\";\n\n/**\n * Unique directive names\n *\n * A GraphQL document is only valid if all defined directives have unique names.\n */\nexport function UniqueDirectiveNamesRule(context) {\n  var knownDirectiveNames = Object.create(null);\n  var schema = context.getSchema();\n  return {\n    DirectiveDefinition: function DirectiveDefinition(node) {\n      var directiveName = node.name.value;\n\n      if (schema !== null && schema !== void 0 && schema.getDirective(directiveName)) {\n        context.reportError(new GraphQLError(\"Directive \\\"@\".concat(directiveName, \"\\\" already exists in the schema. It cannot be redefined.\"), node.name));\n        return;\n      }\n\n      if (knownDirectiveNames[directiveName]) {\n        context.reportError(new GraphQLError(\"There can be only one directive named \\\"@\".concat(directiveName, \"\\\".\"), [knownDirectiveNames[directiveName], node.name]));\n      } else {\n        knownDirectiveNames[directiveName] = node.name;\n      }\n\n      return false;\n    }\n  };\n}\n","var _defKindToExtKind;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport inspect from \"../../jsutils/inspect.mjs\";\nimport invariant from \"../../jsutils/invariant.mjs\";\nimport didYouMean from \"../../jsutils/didYouMean.mjs\";\nimport suggestionList from \"../../jsutils/suggestionList.mjs\";\nimport { GraphQLError } from \"../../error/GraphQLError.mjs\";\nimport { Kind } from \"../../language/kinds.mjs\";\nimport { isTypeDefinitionNode } from \"../../language/predicates.mjs\";\nimport { isScalarType, isObjectType, isInterfaceType, isUnionType, isEnumType, isInputObjectType } from \"../../type/definition.mjs\";\n\n/**\n * Possible type extension\n *\n * A type extension is only valid if the type is defined and has the same kind.\n */\nexport function PossibleTypeExtensionsRule(context) {\n  var schema = context.getSchema();\n  var definedTypes = Object.create(null);\n\n  for (var _i2 = 0, _context$getDocument$2 = context.getDocument().definitions; _i2 < _context$getDocument$2.length; _i2++) {\n    var def = _context$getDocument$2[_i2];\n\n    if (isTypeDefinitionNode(def)) {\n      definedTypes[def.name.value] = def;\n    }\n  }\n\n  return {\n    ScalarTypeExtension: checkExtension,\n    ObjectTypeExtension: checkExtension,\n    InterfaceTypeExtension: checkExtension,\n    UnionTypeExtension: checkExtension,\n    EnumTypeExtension: checkExtension,\n    InputObjectTypeExtension: checkExtension\n  };\n\n  function checkExtension(node) {\n    var typeName = node.name.value;\n    var defNode = definedTypes[typeName];\n    var existingType = schema === null || schema === void 0 ? void 0 : schema.getType(typeName);\n    var expectedKind;\n\n    if (defNode) {\n      expectedKind = defKindToExtKind[defNode.kind];\n    } else if (existingType) {\n      expectedKind = typeToExtKind(existingType);\n    }\n\n    if (expectedKind) {\n      if (expectedKind !== node.kind) {\n        var kindStr = extensionKindToTypeName(node.kind);\n        context.reportError(new GraphQLError(\"Cannot extend non-\".concat(kindStr, \" type \\\"\").concat(typeName, \"\\\".\"), defNode ? [defNode, node] : node));\n      }\n    } else {\n      var allTypeNames = Object.keys(definedTypes);\n\n      if (schema) {\n        allTypeNames = allTypeNames.concat(Object.keys(schema.getTypeMap()));\n      }\n\n      var suggestedTypes = suggestionList(typeName, allTypeNames);\n      context.reportError(new GraphQLError(\"Cannot extend type \\\"\".concat(typeName, \"\\\" because it is not defined.\") + didYouMean(suggestedTypes), node.name));\n    }\n  }\n}\nvar defKindToExtKind = (_defKindToExtKind = {}, _defineProperty(_defKindToExtKind, Kind.SCALAR_TYPE_DEFINITION, Kind.SCALAR_TYPE_EXTENSION), _defineProperty(_defKindToExtKind, Kind.OBJECT_TYPE_DEFINITION, Kind.OBJECT_TYPE_EXTENSION), _defineProperty(_defKindToExtKind, Kind.INTERFACE_TYPE_DEFINITION, Kind.INTERFACE_TYPE_EXTENSION), _defineProperty(_defKindToExtKind, Kind.UNION_TYPE_DEFINITION, Kind.UNION_TYPE_EXTENSION), _defineProperty(_defKindToExtKind, Kind.ENUM_TYPE_DEFINITION, Kind.ENUM_TYPE_EXTENSION), _defineProperty(_defKindToExtKind, Kind.INPUT_OBJECT_TYPE_DEFINITION, Kind.INPUT_OBJECT_TYPE_EXTENSION), _defKindToExtKind);\n\nfunction typeToExtKind(type) {\n  if (isScalarType(type)) {\n    return Kind.SCALAR_TYPE_EXTENSION;\n  }\n\n  if (isObjectType(type)) {\n    return Kind.OBJECT_TYPE_EXTENSION;\n  }\n\n  if (isInterfaceType(type)) {\n    return Kind.INTERFACE_TYPE_EXTENSION;\n  }\n\n  if (isUnionType(type)) {\n    return Kind.UNION_TYPE_EXTENSION;\n  }\n\n  if (isEnumType(type)) {\n    return Kind.ENUM_TYPE_EXTENSION;\n  } // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2618')\n\n\n  if (isInputObjectType(type)) {\n    return Kind.INPUT_OBJECT_TYPE_EXTENSION;\n  } // istanbul ignore next (Not reachable. All possible types have been considered)\n\n\n  false || invariant(0, 'Unexpected type: ' + inspect(type));\n}\n\nfunction extensionKindToTypeName(kind) {\n  switch (kind) {\n    case Kind.SCALAR_TYPE_EXTENSION:\n      return 'scalar';\n\n    case Kind.OBJECT_TYPE_EXTENSION:\n      return 'object';\n\n    case Kind.INTERFACE_TYPE_EXTENSION:\n      return 'interface';\n\n    case Kind.UNION_TYPE_EXTENSION:\n      return 'union';\n\n    case Kind.ENUM_TYPE_EXTENSION:\n      return 'enum';\n\n    case Kind.INPUT_OBJECT_TYPE_EXTENSION:\n      return 'input object';\n  } // istanbul ignore next (Not reachable. All possible types have been considered)\n\n\n  false || invariant(0, 'Unexpected kind: ' + inspect(kind));\n}\n","// Spec Section: \"Executable Definitions\"\nimport { ExecutableDefinitionsRule } from \"./rules/ExecutableDefinitionsRule.mjs\"; // Spec Section: \"Operation Name Uniqueness\"\n\nimport { UniqueOperationNamesRule } from \"./rules/UniqueOperationNamesRule.mjs\"; // Spec Section: \"Lone Anonymous Operation\"\n\nimport { LoneAnonymousOperationRule } from \"./rules/LoneAnonymousOperationRule.mjs\"; // Spec Section: \"Subscriptions with Single Root Field\"\n\nimport { SingleFieldSubscriptionsRule } from \"./rules/SingleFieldSubscriptionsRule.mjs\"; // Spec Section: \"Fragment Spread Type Existence\"\n\nimport { KnownTypeNamesRule } from \"./rules/KnownTypeNamesRule.mjs\"; // Spec Section: \"Fragments on Composite Types\"\n\nimport { FragmentsOnCompositeTypesRule } from \"./rules/FragmentsOnCompositeTypesRule.mjs\"; // Spec Section: \"Variables are Input Types\"\n\nimport { VariablesAreInputTypesRule } from \"./rules/VariablesAreInputTypesRule.mjs\"; // Spec Section: \"Leaf Field Selections\"\n\nimport { ScalarLeafsRule } from \"./rules/ScalarLeafsRule.mjs\"; // Spec Section: \"Field Selections on Objects, Interfaces, and Unions Types\"\n\nimport { FieldsOnCorrectTypeRule } from \"./rules/FieldsOnCorrectTypeRule.mjs\"; // Spec Section: \"Fragment Name Uniqueness\"\n\nimport { UniqueFragmentNamesRule } from \"./rules/UniqueFragmentNamesRule.mjs\"; // Spec Section: \"Fragment spread target defined\"\n\nimport { KnownFragmentNamesRule } from \"./rules/KnownFragmentNamesRule.mjs\"; // Spec Section: \"Fragments must be used\"\n\nimport { NoUnusedFragmentsRule } from \"./rules/NoUnusedFragmentsRule.mjs\"; // Spec Section: \"Fragment spread is possible\"\n\nimport { PossibleFragmentSpreadsRule } from \"./rules/PossibleFragmentSpreadsRule.mjs\"; // Spec Section: \"Fragments must not form cycles\"\n\nimport { NoFragmentCyclesRule } from \"./rules/NoFragmentCyclesRule.mjs\"; // Spec Section: \"Variable Uniqueness\"\n\nimport { UniqueVariableNamesRule } from \"./rules/UniqueVariableNamesRule.mjs\"; // Spec Section: \"All Variable Used Defined\"\n\nimport { NoUndefinedVariablesRule } from \"./rules/NoUndefinedVariablesRule.mjs\"; // Spec Section: \"All Variables Used\"\n\nimport { NoUnusedVariablesRule } from \"./rules/NoUnusedVariablesRule.mjs\"; // Spec Section: \"Directives Are Defined\"\n\nimport { KnownDirectivesRule } from \"./rules/KnownDirectivesRule.mjs\"; // Spec Section: \"Directives Are Unique Per Location\"\n\nimport { UniqueDirectivesPerLocationRule } from \"./rules/UniqueDirectivesPerLocationRule.mjs\"; // Spec Section: \"Argument Names\"\n\nimport { KnownArgumentNamesRule, KnownArgumentNamesOnDirectivesRule } from \"./rules/KnownArgumentNamesRule.mjs\"; // Spec Section: \"Argument Uniqueness\"\n\nimport { UniqueArgumentNamesRule } from \"./rules/UniqueArgumentNamesRule.mjs\"; // Spec Section: \"Value Type Correctness\"\n\nimport { ValuesOfCorrectTypeRule } from \"./rules/ValuesOfCorrectTypeRule.mjs\"; // Spec Section: \"Argument Optionality\"\n\nimport { ProvidedRequiredArgumentsRule, ProvidedRequiredArgumentsOnDirectivesRule } from \"./rules/ProvidedRequiredArgumentsRule.mjs\"; // Spec Section: \"All Variable Usages Are Allowed\"\n\nimport { VariablesInAllowedPositionRule } from \"./rules/VariablesInAllowedPositionRule.mjs\"; // Spec Section: \"Field Selection Merging\"\n\nimport { OverlappingFieldsCanBeMergedRule } from \"./rules/OverlappingFieldsCanBeMergedRule.mjs\"; // Spec Section: \"Input Object Field Uniqueness\"\n\nimport { UniqueInputFieldNamesRule } from \"./rules/UniqueInputFieldNamesRule.mjs\"; // SDL-specific validation rules\n\nimport { LoneSchemaDefinitionRule } from \"./rules/LoneSchemaDefinitionRule.mjs\";\nimport { UniqueOperationTypesRule } from \"./rules/UniqueOperationTypesRule.mjs\";\nimport { UniqueTypeNamesRule } from \"./rules/UniqueTypeNamesRule.mjs\";\nimport { UniqueEnumValueNamesRule } from \"./rules/UniqueEnumValueNamesRule.mjs\";\nimport { UniqueFieldDefinitionNamesRule } from \"./rules/UniqueFieldDefinitionNamesRule.mjs\";\nimport { UniqueDirectiveNamesRule } from \"./rules/UniqueDirectiveNamesRule.mjs\";\nimport { PossibleTypeExtensionsRule } from \"./rules/PossibleTypeExtensionsRule.mjs\";\n/**\n * This set includes all validation rules defined by the GraphQL spec.\n *\n * The order of the rules in this list has been adjusted to lead to the\n * most clear output when encountering multiple validation errors.\n */\n\nexport var specifiedRules = Object.freeze([ExecutableDefinitionsRule, UniqueOperationNamesRule, LoneAnonymousOperationRule, SingleFieldSubscriptionsRule, KnownTypeNamesRule, FragmentsOnCompositeTypesRule, VariablesAreInputTypesRule, ScalarLeafsRule, FieldsOnCorrectTypeRule, UniqueFragmentNamesRule, KnownFragmentNamesRule, NoUnusedFragmentsRule, PossibleFragmentSpreadsRule, NoFragmentCyclesRule, UniqueVariableNamesRule, NoUndefinedVariablesRule, NoUnusedVariablesRule, KnownDirectivesRule, UniqueDirectivesPerLocationRule, KnownArgumentNamesRule, UniqueArgumentNamesRule, ValuesOfCorrectTypeRule, ProvidedRequiredArgumentsRule, VariablesInAllowedPositionRule, OverlappingFieldsCanBeMergedRule, UniqueInputFieldNamesRule]);\n/**\n * @internal\n */\n\nexport var specifiedSDLRules = Object.freeze([LoneSchemaDefinitionRule, UniqueOperationTypesRule, UniqueTypeNamesRule, UniqueEnumValueNamesRule, UniqueFieldDefinitionNamesRule, UniqueDirectiveNamesRule, KnownTypeNamesRule, KnownDirectivesRule, UniqueDirectivesPerLocationRule, PossibleTypeExtensionsRule, KnownArgumentNamesOnDirectivesRule, UniqueArgumentNamesRule, UniqueInputFieldNamesRule, ProvidedRequiredArgumentsOnDirectivesRule]);\n","function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nimport { Kind } from \"../language/kinds.mjs\";\nimport { visit } from \"../language/visitor.mjs\";\nimport { TypeInfo, visitWithTypeInfo } from \"../utilities/TypeInfo.mjs\";\n\n/**\n * An instance of this class is passed as the \"this\" context to all validators,\n * allowing access to commonly useful contextual information from within a\n * validation rule.\n */\nexport var ASTValidationContext = /*#__PURE__*/function () {\n  function ASTValidationContext(ast, onError) {\n    this._ast = ast;\n    this._fragments = undefined;\n    this._fragmentSpreads = new Map();\n    this._recursivelyReferencedFragments = new Map();\n    this._onError = onError;\n  }\n\n  var _proto = ASTValidationContext.prototype;\n\n  _proto.reportError = function reportError(error) {\n    this._onError(error);\n  };\n\n  _proto.getDocument = function getDocument() {\n    return this._ast;\n  };\n\n  _proto.getFragment = function getFragment(name) {\n    var fragments = this._fragments;\n\n    if (!fragments) {\n      this._fragments = fragments = this.getDocument().definitions.reduce(function (frags, statement) {\n        if (statement.kind === Kind.FRAGMENT_DEFINITION) {\n          frags[statement.name.value] = statement;\n        }\n\n        return frags;\n      }, Object.create(null));\n    }\n\n    return fragments[name];\n  };\n\n  _proto.getFragmentSpreads = function getFragmentSpreads(node) {\n    var spreads = this._fragmentSpreads.get(node);\n\n    if (!spreads) {\n      spreads = [];\n      var setsToVisit = [node];\n\n      while (setsToVisit.length !== 0) {\n        var set = setsToVisit.pop();\n\n        for (var _i2 = 0, _set$selections2 = set.selections; _i2 < _set$selections2.length; _i2++) {\n          var selection = _set$selections2[_i2];\n\n          if (selection.kind === Kind.FRAGMENT_SPREAD) {\n            spreads.push(selection);\n          } else if (selection.selectionSet) {\n            setsToVisit.push(selection.selectionSet);\n          }\n        }\n      }\n\n      this._fragmentSpreads.set(node, spreads);\n    }\n\n    return spreads;\n  };\n\n  _proto.getRecursivelyReferencedFragments = function getRecursivelyReferencedFragments(operation) {\n    var fragments = this._recursivelyReferencedFragments.get(operation);\n\n    if (!fragments) {\n      fragments = [];\n      var collectedNames = Object.create(null);\n      var nodesToVisit = [operation.selectionSet];\n\n      while (nodesToVisit.length !== 0) {\n        var node = nodesToVisit.pop();\n\n        for (var _i4 = 0, _this$getFragmentSpre2 = this.getFragmentSpreads(node); _i4 < _this$getFragmentSpre2.length; _i4++) {\n          var spread = _this$getFragmentSpre2[_i4];\n          var fragName = spread.name.value;\n\n          if (collectedNames[fragName] !== true) {\n            collectedNames[fragName] = true;\n            var fragment = this.getFragment(fragName);\n\n            if (fragment) {\n              fragments.push(fragment);\n              nodesToVisit.push(fragment.selectionSet);\n            }\n          }\n        }\n      }\n\n      this._recursivelyReferencedFragments.set(operation, fragments);\n    }\n\n    return fragments;\n  };\n\n  return ASTValidationContext;\n}();\nexport var SDLValidationContext = /*#__PURE__*/function (_ASTValidationContext) {\n  _inheritsLoose(SDLValidationContext, _ASTValidationContext);\n\n  function SDLValidationContext(ast, schema, onError) {\n    var _this;\n\n    _this = _ASTValidationContext.call(this, ast, onError) || this;\n    _this._schema = schema;\n    return _this;\n  }\n\n  var _proto2 = SDLValidationContext.prototype;\n\n  _proto2.getSchema = function getSchema() {\n    return this._schema;\n  };\n\n  return SDLValidationContext;\n}(ASTValidationContext);\nexport var ValidationContext = /*#__PURE__*/function (_ASTValidationContext2) {\n  _inheritsLoose(ValidationContext, _ASTValidationContext2);\n\n  function ValidationContext(schema, ast, typeInfo, onError) {\n    var _this2;\n\n    _this2 = _ASTValidationContext2.call(this, ast, onError) || this;\n    _this2._schema = schema;\n    _this2._typeInfo = typeInfo;\n    _this2._variableUsages = new Map();\n    _this2._recursiveVariableUsages = new Map();\n    return _this2;\n  }\n\n  var _proto3 = ValidationContext.prototype;\n\n  _proto3.getSchema = function getSchema() {\n    return this._schema;\n  };\n\n  _proto3.getVariableUsages = function getVariableUsages(node) {\n    var usages = this._variableUsages.get(node);\n\n    if (!usages) {\n      var newUsages = [];\n      var typeInfo = new TypeInfo(this._schema);\n      visit(node, visitWithTypeInfo(typeInfo, {\n        VariableDefinition: function VariableDefinition() {\n          return false;\n        },\n        Variable: function Variable(variable) {\n          newUsages.push({\n            node: variable,\n            type: typeInfo.getInputType(),\n            defaultValue: typeInfo.getDefaultValue()\n          });\n        }\n      }));\n      usages = newUsages;\n\n      this._variableUsages.set(node, usages);\n    }\n\n    return usages;\n  };\n\n  _proto3.getRecursiveVariableUsages = function getRecursiveVariableUsages(operation) {\n    var usages = this._recursiveVariableUsages.get(operation);\n\n    if (!usages) {\n      usages = this.getVariableUsages(operation);\n\n      for (var _i6 = 0, _this$getRecursivelyR2 = this.getRecursivelyReferencedFragments(operation); _i6 < _this$getRecursivelyR2.length; _i6++) {\n        var frag = _this$getRecursivelyR2[_i6];\n        usages = usages.concat(this.getVariableUsages(frag));\n      }\n\n      this._recursiveVariableUsages.set(operation, usages);\n    }\n\n    return usages;\n  };\n\n  _proto3.getType = function getType() {\n    return this._typeInfo.getType();\n  };\n\n  _proto3.getParentType = function getParentType() {\n    return this._typeInfo.getParentType();\n  };\n\n  _proto3.getInputType = function getInputType() {\n    return this._typeInfo.getInputType();\n  };\n\n  _proto3.getParentInputType = function getParentInputType() {\n    return this._typeInfo.getParentInputType();\n  };\n\n  _proto3.getFieldDef = function getFieldDef() {\n    return this._typeInfo.getFieldDef();\n  };\n\n  _proto3.getDirective = function getDirective() {\n    return this._typeInfo.getDirective();\n  };\n\n  _proto3.getArgument = function getArgument() {\n    return this._typeInfo.getArgument();\n  };\n\n  _proto3.getEnumValue = function getEnumValue() {\n    return this._typeInfo.getEnumValue();\n  };\n\n  return ValidationContext;\n}(ASTValidationContext);\n","import devAssert from \"../jsutils/devAssert.mjs\";\nimport { GraphQLError } from \"../error/GraphQLError.mjs\";\nimport { visit, visitInParallel } from \"../language/visitor.mjs\";\nimport { assertValidSchema } from \"../type/validate.mjs\";\nimport { TypeInfo, visitWithTypeInfo } from \"../utilities/TypeInfo.mjs\";\nimport { specifiedRules, specifiedSDLRules } from \"./specifiedRules.mjs\";\nimport { SDLValidationContext, ValidationContext } from \"./ValidationContext.mjs\";\n/**\n * Implements the \"Validation\" section of the spec.\n *\n * Validation runs synchronously, returning an array of encountered errors, or\n * an empty array if no errors were encountered and the document is valid.\n *\n * A list of specific validation rules may be provided. If not provided, the\n * default list of rules defined by the GraphQL specification will be used.\n *\n * Each validation rules is a function which returns a visitor\n * (see the language/visitor API). Visitor methods are expected to return\n * GraphQLErrors, or Arrays of GraphQLErrors when invalid.\n *\n * Optionally a custom TypeInfo instance may be provided. If not provided, one\n * will be created from the provided schema.\n */\n\nexport function validate(schema, documentAST) {\n  var rules = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : specifiedRules;\n  var typeInfo = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : new TypeInfo(schema);\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {\n    maxErrors: undefined\n  };\n  documentAST || devAssert(0, 'Must provide document.'); // If the schema used for validation is invalid, throw an error.\n\n  assertValidSchema(schema);\n  var abortObj = Object.freeze({});\n  var errors = [];\n  var context = new ValidationContext(schema, documentAST, typeInfo, function (error) {\n    if (options.maxErrors != null && errors.length >= options.maxErrors) {\n      errors.push(new GraphQLError('Too many validation errors, error limit reached. Validation aborted.'));\n      throw abortObj;\n    }\n\n    errors.push(error);\n  }); // This uses a specialized visitor which runs multiple visitors in parallel,\n  // while maintaining the visitor skip and break API.\n\n  var visitor = visitInParallel(rules.map(function (rule) {\n    return rule(context);\n  })); // Visit the whole document with each instance of all provided rules.\n\n  try {\n    visit(documentAST, visitWithTypeInfo(typeInfo, visitor));\n  } catch (e) {\n    if (e !== abortObj) {\n      throw e;\n    }\n  }\n\n  return errors;\n}\n/**\n * @internal\n */\n\nexport function validateSDL(documentAST, schemaToExtend) {\n  var rules = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : specifiedSDLRules;\n  var errors = [];\n  var context = new SDLValidationContext(documentAST, schemaToExtend, function (error) {\n    errors.push(error);\n  });\n  var visitors = rules.map(function (rule) {\n    return rule(context);\n  });\n  visit(documentAST, visitInParallel(visitors));\n  return errors;\n}\n/**\n * Utility function which asserts a SDL document is valid by throwing an error\n * if it is invalid.\n *\n * @internal\n */\n\nexport function assertValidSDL(documentAST) {\n  var errors = validateSDL(documentAST);\n\n  if (errors.length !== 0) {\n    throw new Error(errors.map(function (error) {\n      return error.message;\n    }).join('\\n\\n'));\n  }\n}\n/**\n * Utility function which asserts a SDL document is valid by throwing an error\n * if it is invalid.\n *\n * @internal\n */\n\nexport function assertValidSDLExtension(documentAST, schema) {\n  var errors = validateSDL(documentAST, schema);\n\n  if (errors.length !== 0) {\n    throw new Error(errors.map(function (error) {\n      return error.message;\n    }).join('\\n\\n'));\n  }\n}\n","import objectValues from \"../polyfills/objectValues.mjs\";\nimport keyMap from \"../jsutils/keyMap.mjs\";\nimport inspect from \"../jsutils/inspect.mjs\";\nimport invariant from \"../jsutils/invariant.mjs\";\nimport { Kind } from \"../language/kinds.mjs\";\nimport { isLeafType, isInputObjectType, isListType, isNonNullType } from \"../type/definition.mjs\";\n/**\n * Produces a JavaScript value given a GraphQL Value AST.\n *\n * A GraphQL type must be provided, which will be used to interpret different\n * GraphQL Value literals.\n *\n * Returns `undefined` when the value could not be validly coerced according to\n * the provided type.\n *\n * | GraphQL Value        | JSON Value    |\n * | -------------------- | ------------- |\n * | Input Object         | Object        |\n * | List                 | Array         |\n * | Boolean              | Boolean       |\n * | String               | String        |\n * | Int / Float          | Number        |\n * | Enum Value           | Mixed         |\n * | NullValue            | null          |\n *\n */\n\nexport function valueFromAST(valueNode, type, variables) {\n  if (!valueNode) {\n    // When there is no node, then there is also no value.\n    // Importantly, this is different from returning the value null.\n    return;\n  }\n\n  if (valueNode.kind === Kind.VARIABLE) {\n    var variableName = valueNode.name.value;\n\n    if (variables == null || variables[variableName] === undefined) {\n      // No valid return value.\n      return;\n    }\n\n    var variableValue = variables[variableName];\n\n    if (variableValue === null && isNonNullType(type)) {\n      return; // Invalid: intentionally return no value.\n    } // Note: This does no further checking that this variable is correct.\n    // This assumes that this query has been validated and the variable\n    // usage here is of the correct type.\n\n\n    return variableValue;\n  }\n\n  if (isNonNullType(type)) {\n    if (valueNode.kind === Kind.NULL) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    return valueFromAST(valueNode, type.ofType, variables);\n  }\n\n  if (valueNode.kind === Kind.NULL) {\n    // This is explicitly returning the value null.\n    return null;\n  }\n\n  if (isListType(type)) {\n    var itemType = type.ofType;\n\n    if (valueNode.kind === Kind.LIST) {\n      var coercedValues = [];\n\n      for (var _i2 = 0, _valueNode$values2 = valueNode.values; _i2 < _valueNode$values2.length; _i2++) {\n        var itemNode = _valueNode$values2[_i2];\n\n        if (isMissingVariable(itemNode, variables)) {\n          // If an array contains a missing variable, it is either coerced to\n          // null or if the item type is non-null, it considered invalid.\n          if (isNonNullType(itemType)) {\n            return; // Invalid: intentionally return no value.\n          }\n\n          coercedValues.push(null);\n        } else {\n          var itemValue = valueFromAST(itemNode, itemType, variables);\n\n          if (itemValue === undefined) {\n            return; // Invalid: intentionally return no value.\n          }\n\n          coercedValues.push(itemValue);\n        }\n      }\n\n      return coercedValues;\n    }\n\n    var coercedValue = valueFromAST(valueNode, itemType, variables);\n\n    if (coercedValue === undefined) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    return [coercedValue];\n  }\n\n  if (isInputObjectType(type)) {\n    if (valueNode.kind !== Kind.OBJECT) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    var coercedObj = Object.create(null);\n    var fieldNodes = keyMap(valueNode.fields, function (field) {\n      return field.name.value;\n    });\n\n    for (var _i4 = 0, _objectValues2 = objectValues(type.getFields()); _i4 < _objectValues2.length; _i4++) {\n      var field = _objectValues2[_i4];\n      var fieldNode = fieldNodes[field.name];\n\n      if (!fieldNode || isMissingVariable(fieldNode.value, variables)) {\n        if (field.defaultValue !== undefined) {\n          coercedObj[field.name] = field.defaultValue;\n        } else if (isNonNullType(field.type)) {\n          return; // Invalid: intentionally return no value.\n        }\n\n        continue;\n      }\n\n      var fieldValue = valueFromAST(fieldNode.value, field.type, variables);\n\n      if (fieldValue === undefined) {\n        return; // Invalid: intentionally return no value.\n      }\n\n      coercedObj[field.name] = fieldValue;\n    }\n\n    return coercedObj;\n  } // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2618')\n\n\n  if (isLeafType(type)) {\n    // Scalars and Enums fulfill parsing a literal value via parseLiteral().\n    // Invalid values represent a failure to parse correctly, in which case\n    // no value is returned.\n    var result;\n\n    try {\n      result = type.parseLiteral(valueNode, variables);\n    } catch (_error) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    if (result === undefined) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    return result;\n  } // istanbul ignore next (Not reachable. All possible input types have been considered)\n\n\n  false || invariant(0, 'Unexpected input type: ' + inspect(type));\n} // Returns true if the provided valueNode is a variable which is not defined\n// in the set of variables.\n\nfunction isMissingVariable(valueNode, variables) {\n  return valueNode.kind === Kind.VARIABLE && (variables == null || variables[valueNode.name.value] === undefined);\n}\n","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport function getIntrospectionQuery(options) {\n  var optionsWithDefault = _objectSpread({\n    descriptions: true,\n    specifiedByUrl: false,\n    directiveIsRepeatable: false,\n    schemaDescription: false,\n    inputValueDeprecation: false\n  }, options);\n\n  var descriptions = optionsWithDefault.descriptions ? 'description' : '';\n  var specifiedByUrl = optionsWithDefault.specifiedByUrl ? 'specifiedByUrl' : '';\n  var directiveIsRepeatable = optionsWithDefault.directiveIsRepeatable ? 'isRepeatable' : '';\n  var schemaDescription = optionsWithDefault.schemaDescription ? descriptions : '';\n\n  function inputDeprecation(str) {\n    return optionsWithDefault.inputValueDeprecation ? str : '';\n  }\n\n  return \"\\n    query IntrospectionQuery {\\n      __schema {\\n        \".concat(schemaDescription, \"\\n        queryType { name }\\n        mutationType { name }\\n        subscriptionType { name }\\n        types {\\n          ...FullType\\n        }\\n        directives {\\n          name\\n          \").concat(descriptions, \"\\n          \").concat(directiveIsRepeatable, \"\\n          locations\\n          args\").concat(inputDeprecation('(includeDeprecated: true)'), \" {\\n            ...InputValue\\n          }\\n        }\\n      }\\n    }\\n\\n    fragment FullType on __Type {\\n      kind\\n      name\\n      \").concat(descriptions, \"\\n      \").concat(specifiedByUrl, \"\\n      fields(includeDeprecated: true) {\\n        name\\n        \").concat(descriptions, \"\\n        args\").concat(inputDeprecation('(includeDeprecated: true)'), \" {\\n          ...InputValue\\n        }\\n        type {\\n          ...TypeRef\\n        }\\n        isDeprecated\\n        deprecationReason\\n      }\\n      inputFields\").concat(inputDeprecation('(includeDeprecated: true)'), \" {\\n        ...InputValue\\n      }\\n      interfaces {\\n        ...TypeRef\\n      }\\n      enumValues(includeDeprecated: true) {\\n        name\\n        \").concat(descriptions, \"\\n        isDeprecated\\n        deprecationReason\\n      }\\n      possibleTypes {\\n        ...TypeRef\\n      }\\n    }\\n\\n    fragment InputValue on __InputValue {\\n      name\\n      \").concat(descriptions, \"\\n      type { ...TypeRef }\\n      defaultValue\\n      \").concat(inputDeprecation('isDeprecated'), \"\\n      \").concat(inputDeprecation('deprecationReason'), \"\\n    }\\n\\n    fragment TypeRef on __Type {\\n      kind\\n      name\\n      ofType {\\n        kind\\n        name\\n        ofType {\\n          kind\\n          name\\n          ofType {\\n            kind\\n            name\\n            ofType {\\n              kind\\n              name\\n              ofType {\\n                kind\\n                name\\n                ofType {\\n                  kind\\n                  name\\n                  ofType {\\n                    kind\\n                    name\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  \");\n}\n","import objectValues from \"../polyfills/objectValues.mjs\";\nimport inspect from \"../jsutils/inspect.mjs\";\nimport devAssert from \"../jsutils/devAssert.mjs\";\nimport keyValMap from \"../jsutils/keyValMap.mjs\";\nimport isObjectLike from \"../jsutils/isObjectLike.mjs\";\nimport { parseValue } from \"../language/parser.mjs\";\nimport { GraphQLSchema } from \"../type/schema.mjs\";\nimport { GraphQLDirective } from \"../type/directives.mjs\";\nimport { specifiedScalarTypes } from \"../type/scalars.mjs\";\nimport { introspectionTypes, TypeKind } from \"../type/introspection.mjs\";\nimport { isInputType, isOutputType, GraphQLList, GraphQLNonNull, GraphQLScalarType, GraphQLObjectType, GraphQLInterfaceType, GraphQLUnionType, GraphQLEnumType, GraphQLInputObjectType, assertNullableType, assertObjectType, assertInterfaceType } from \"../type/definition.mjs\";\nimport { valueFromAST } from \"./valueFromAST.mjs\";\n/**\n * Build a GraphQLSchema for use by client tools.\n *\n * Given the result of a client running the introspection query, creates and\n * returns a GraphQLSchema instance which can be then used with all graphql-js\n * tools, but cannot be used to execute a query, as introspection does not\n * represent the \"resolver\", \"parse\" or \"serialize\" functions or any other\n * server-internal mechanisms.\n *\n * This function expects a complete introspection result. Don't forget to check\n * the \"errors\" field of a server response before calling this function.\n */\n\nexport function buildClientSchema(introspection, options) {\n  isObjectLike(introspection) && isObjectLike(introspection.__schema) || devAssert(0, \"Invalid or incomplete introspection result. Ensure that you are passing \\\"data\\\" property of introspection response and no \\\"errors\\\" was returned alongside: \".concat(inspect(introspection), \".\")); // Get the schema from the introspection result.\n\n  var schemaIntrospection = introspection.__schema; // Iterate through all types, getting the type definition for each.\n\n  var typeMap = keyValMap(schemaIntrospection.types, function (typeIntrospection) {\n    return typeIntrospection.name;\n  }, function (typeIntrospection) {\n    return buildType(typeIntrospection);\n  }); // Include standard types only if they are used.\n\n  for (var _i2 = 0, _ref2 = [].concat(specifiedScalarTypes, introspectionTypes); _i2 < _ref2.length; _i2++) {\n    var stdType = _ref2[_i2];\n\n    if (typeMap[stdType.name]) {\n      typeMap[stdType.name] = stdType;\n    }\n  } // Get the root Query, Mutation, and Subscription types.\n\n\n  var queryType = schemaIntrospection.queryType ? getObjectType(schemaIntrospection.queryType) : null;\n  var mutationType = schemaIntrospection.mutationType ? getObjectType(schemaIntrospection.mutationType) : null;\n  var subscriptionType = schemaIntrospection.subscriptionType ? getObjectType(schemaIntrospection.subscriptionType) : null; // Get the directives supported by Introspection, assuming empty-set if\n  // directives were not queried for.\n\n  var directives = schemaIntrospection.directives ? schemaIntrospection.directives.map(buildDirective) : []; // Then produce and return a Schema with these types.\n\n  return new GraphQLSchema({\n    description: schemaIntrospection.description,\n    query: queryType,\n    mutation: mutationType,\n    subscription: subscriptionType,\n    types: objectValues(typeMap),\n    directives: directives,\n    assumeValid: options === null || options === void 0 ? void 0 : options.assumeValid\n  }); // Given a type reference in introspection, return the GraphQLType instance.\n  // preferring cached instances before building new instances.\n\n  function getType(typeRef) {\n    if (typeRef.kind === TypeKind.LIST) {\n      var itemRef = typeRef.ofType;\n\n      if (!itemRef) {\n        throw new Error('Decorated type deeper than introspection query.');\n      }\n\n      return new GraphQLList(getType(itemRef));\n    }\n\n    if (typeRef.kind === TypeKind.NON_NULL) {\n      var nullableRef = typeRef.ofType;\n\n      if (!nullableRef) {\n        throw new Error('Decorated type deeper than introspection query.');\n      }\n\n      var nullableType = getType(nullableRef);\n      return new GraphQLNonNull(assertNullableType(nullableType));\n    }\n\n    return getNamedType(typeRef);\n  }\n\n  function getNamedType(typeRef) {\n    var typeName = typeRef.name;\n\n    if (!typeName) {\n      throw new Error(\"Unknown type reference: \".concat(inspect(typeRef), \".\"));\n    }\n\n    var type = typeMap[typeName];\n\n    if (!type) {\n      throw new Error(\"Invalid or incomplete schema, unknown type: \".concat(typeName, \". Ensure that a full introspection query is used in order to build a client schema.\"));\n    }\n\n    return type;\n  }\n\n  function getObjectType(typeRef) {\n    return assertObjectType(getNamedType(typeRef));\n  }\n\n  function getInterfaceType(typeRef) {\n    return assertInterfaceType(getNamedType(typeRef));\n  } // Given a type's introspection result, construct the correct\n  // GraphQLType instance.\n\n\n  function buildType(type) {\n    if (type != null && type.name != null && type.kind != null) {\n      switch (type.kind) {\n        case TypeKind.SCALAR:\n          return buildScalarDef(type);\n\n        case TypeKind.OBJECT:\n          return buildObjectDef(type);\n\n        case TypeKind.INTERFACE:\n          return buildInterfaceDef(type);\n\n        case TypeKind.UNION:\n          return buildUnionDef(type);\n\n        case TypeKind.ENUM:\n          return buildEnumDef(type);\n\n        case TypeKind.INPUT_OBJECT:\n          return buildInputObjectDef(type);\n      }\n    }\n\n    var typeStr = inspect(type);\n    throw new Error(\"Invalid or incomplete introspection result. Ensure that a full introspection query is used in order to build a client schema: \".concat(typeStr, \".\"));\n  }\n\n  function buildScalarDef(scalarIntrospection) {\n    return new GraphQLScalarType({\n      name: scalarIntrospection.name,\n      description: scalarIntrospection.description,\n      specifiedByUrl: scalarIntrospection.specifiedByUrl\n    });\n  }\n\n  function buildImplementationsList(implementingIntrospection) {\n    // TODO: Temporary workaround until GraphQL ecosystem will fully support\n    // 'interfaces' on interface types.\n    if (implementingIntrospection.interfaces === null && implementingIntrospection.kind === TypeKind.INTERFACE) {\n      return [];\n    }\n\n    if (!implementingIntrospection.interfaces) {\n      var implementingIntrospectionStr = inspect(implementingIntrospection);\n      throw new Error(\"Introspection result missing interfaces: \".concat(implementingIntrospectionStr, \".\"));\n    }\n\n    return implementingIntrospection.interfaces.map(getInterfaceType);\n  }\n\n  function buildObjectDef(objectIntrospection) {\n    return new GraphQLObjectType({\n      name: objectIntrospection.name,\n      description: objectIntrospection.description,\n      interfaces: function interfaces() {\n        return buildImplementationsList(objectIntrospection);\n      },\n      fields: function fields() {\n        return buildFieldDefMap(objectIntrospection);\n      }\n    });\n  }\n\n  function buildInterfaceDef(interfaceIntrospection) {\n    return new GraphQLInterfaceType({\n      name: interfaceIntrospection.name,\n      description: interfaceIntrospection.description,\n      interfaces: function interfaces() {\n        return buildImplementationsList(interfaceIntrospection);\n      },\n      fields: function fields() {\n        return buildFieldDefMap(interfaceIntrospection);\n      }\n    });\n  }\n\n  function buildUnionDef(unionIntrospection) {\n    if (!unionIntrospection.possibleTypes) {\n      var unionIntrospectionStr = inspect(unionIntrospection);\n      throw new Error(\"Introspection result missing possibleTypes: \".concat(unionIntrospectionStr, \".\"));\n    }\n\n    return new GraphQLUnionType({\n      name: unionIntrospection.name,\n      description: unionIntrospection.description,\n      types: function types() {\n        return unionIntrospection.possibleTypes.map(getObjectType);\n      }\n    });\n  }\n\n  function buildEnumDef(enumIntrospection) {\n    if (!enumIntrospection.enumValues) {\n      var enumIntrospectionStr = inspect(enumIntrospection);\n      throw new Error(\"Introspection result missing enumValues: \".concat(enumIntrospectionStr, \".\"));\n    }\n\n    return new GraphQLEnumType({\n      name: enumIntrospection.name,\n      description: enumIntrospection.description,\n      values: keyValMap(enumIntrospection.enumValues, function (valueIntrospection) {\n        return valueIntrospection.name;\n      }, function (valueIntrospection) {\n        return {\n          description: valueIntrospection.description,\n          deprecationReason: valueIntrospection.deprecationReason\n        };\n      })\n    });\n  }\n\n  function buildInputObjectDef(inputObjectIntrospection) {\n    if (!inputObjectIntrospection.inputFields) {\n      var inputObjectIntrospectionStr = inspect(inputObjectIntrospection);\n      throw new Error(\"Introspection result missing inputFields: \".concat(inputObjectIntrospectionStr, \".\"));\n    }\n\n    return new GraphQLInputObjectType({\n      name: inputObjectIntrospection.name,\n      description: inputObjectIntrospection.description,\n      fields: function fields() {\n        return buildInputValueDefMap(inputObjectIntrospection.inputFields);\n      }\n    });\n  }\n\n  function buildFieldDefMap(typeIntrospection) {\n    if (!typeIntrospection.fields) {\n      throw new Error(\"Introspection result missing fields: \".concat(inspect(typeIntrospection), \".\"));\n    }\n\n    return keyValMap(typeIntrospection.fields, function (fieldIntrospection) {\n      return fieldIntrospection.name;\n    }, buildField);\n  }\n\n  function buildField(fieldIntrospection) {\n    var type = getType(fieldIntrospection.type);\n\n    if (!isOutputType(type)) {\n      var typeStr = inspect(type);\n      throw new Error(\"Introspection must provide output type for fields, but received: \".concat(typeStr, \".\"));\n    }\n\n    if (!fieldIntrospection.args) {\n      var fieldIntrospectionStr = inspect(fieldIntrospection);\n      throw new Error(\"Introspection result missing field args: \".concat(fieldIntrospectionStr, \".\"));\n    }\n\n    return {\n      description: fieldIntrospection.description,\n      deprecationReason: fieldIntrospection.deprecationReason,\n      type: type,\n      args: buildInputValueDefMap(fieldIntrospection.args)\n    };\n  }\n\n  function buildInputValueDefMap(inputValueIntrospections) {\n    return keyValMap(inputValueIntrospections, function (inputValue) {\n      return inputValue.name;\n    }, buildInputValue);\n  }\n\n  function buildInputValue(inputValueIntrospection) {\n    var type = getType(inputValueIntrospection.type);\n\n    if (!isInputType(type)) {\n      var typeStr = inspect(type);\n      throw new Error(\"Introspection must provide input type for arguments, but received: \".concat(typeStr, \".\"));\n    }\n\n    var defaultValue = inputValueIntrospection.defaultValue != null ? valueFromAST(parseValue(inputValueIntrospection.defaultValue), type) : undefined;\n    return {\n      description: inputValueIntrospection.description,\n      type: type,\n      defaultValue: defaultValue,\n      deprecationReason: inputValueIntrospection.deprecationReason\n    };\n  }\n\n  function buildDirective(directiveIntrospection) {\n    if (!directiveIntrospection.args) {\n      var directiveIntrospectionStr = inspect(directiveIntrospection);\n      throw new Error(\"Introspection result missing directive args: \".concat(directiveIntrospectionStr, \".\"));\n    }\n\n    if (!directiveIntrospection.locations) {\n      var _directiveIntrospectionStr = inspect(directiveIntrospection);\n\n      throw new Error(\"Introspection result missing directive locations: \".concat(_directiveIntrospectionStr, \".\"));\n    }\n\n    return new GraphQLDirective({\n      name: directiveIntrospection.name,\n      description: directiveIntrospection.description,\n      isRepeatable: directiveIntrospection.isRepeatable,\n      locations: directiveIntrospection.locations.slice(),\n      args: buildInputValueDefMap(directiveIntrospection.args)\n    });\n  }\n}\n","import objectValues from \"../polyfills/objectValues.mjs\";\nimport inspect from \"../jsutils/inspect.mjs\";\nimport invariant from \"../jsutils/invariant.mjs\";\nimport { print } from \"../language/printer.mjs\";\nimport { printBlockString } from \"../language/blockString.mjs\";\nimport { isIntrospectionType } from \"../type/introspection.mjs\";\nimport { GraphQLString, isSpecifiedScalarType } from \"../type/scalars.mjs\";\nimport { DEFAULT_DEPRECATION_REASON, isSpecifiedDirective } from \"../type/directives.mjs\";\nimport { isScalarType, isObjectType, isInterfaceType, isUnionType, isEnumType, isInputObjectType } from \"../type/definition.mjs\";\nimport { astFromValue } from \"./astFromValue.mjs\";\n\n/**\n * Accepts options as a second argument:\n *\n *    - commentDescriptions:\n *        Provide true to use preceding comments as the description.\n *\n */\nexport function printSchema(schema, options) {\n  return printFilteredSchema(schema, function (n) {\n    return !isSpecifiedDirective(n);\n  }, isDefinedType, options);\n}\nexport function printIntrospectionSchema(schema, options) {\n  return printFilteredSchema(schema, isSpecifiedDirective, isIntrospectionType, options);\n}\n\nfunction isDefinedType(type) {\n  return !isSpecifiedScalarType(type) && !isIntrospectionType(type);\n}\n\nfunction printFilteredSchema(schema, directiveFilter, typeFilter, options) {\n  var directives = schema.getDirectives().filter(directiveFilter);\n  var types = objectValues(schema.getTypeMap()).filter(typeFilter);\n  return [printSchemaDefinition(schema)].concat(directives.map(function (directive) {\n    return printDirective(directive, options);\n  }), types.map(function (type) {\n    return printType(type, options);\n  })).filter(Boolean).join('\\n\\n') + '\\n';\n}\n\nfunction printSchemaDefinition(schema) {\n  if (schema.description == null && isSchemaOfCommonNames(schema)) {\n    return;\n  }\n\n  var operationTypes = [];\n  var queryType = schema.getQueryType();\n\n  if (queryType) {\n    operationTypes.push(\"  query: \".concat(queryType.name));\n  }\n\n  var mutationType = schema.getMutationType();\n\n  if (mutationType) {\n    operationTypes.push(\"  mutation: \".concat(mutationType.name));\n  }\n\n  var subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType) {\n    operationTypes.push(\"  subscription: \".concat(subscriptionType.name));\n  }\n\n  return printDescription({}, schema) + \"schema {\\n\".concat(operationTypes.join('\\n'), \"\\n}\");\n}\n/**\n * GraphQL schema define root types for each type of operation. These types are\n * the same as any other type and can be named in any manner, however there is\n * a common naming convention:\n *\n *   schema {\n *     query: Query\n *     mutation: Mutation\n *   }\n *\n * When using this naming convention, the schema description can be omitted.\n */\n\n\nfunction isSchemaOfCommonNames(schema) {\n  var queryType = schema.getQueryType();\n\n  if (queryType && queryType.name !== 'Query') {\n    return false;\n  }\n\n  var mutationType = schema.getMutationType();\n\n  if (mutationType && mutationType.name !== 'Mutation') {\n    return false;\n  }\n\n  var subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType && subscriptionType.name !== 'Subscription') {\n    return false;\n  }\n\n  return true;\n}\n\nexport function printType(type, options) {\n  if (isScalarType(type)) {\n    return printScalar(type, options);\n  }\n\n  if (isObjectType(type)) {\n    return printObject(type, options);\n  }\n\n  if (isInterfaceType(type)) {\n    return printInterface(type, options);\n  }\n\n  if (isUnionType(type)) {\n    return printUnion(type, options);\n  }\n\n  if (isEnumType(type)) {\n    return printEnum(type, options);\n  } // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2618')\n\n\n  if (isInputObjectType(type)) {\n    return printInputObject(type, options);\n  } // istanbul ignore next (Not reachable. All possible types have been considered)\n\n\n  false || invariant(0, 'Unexpected type: ' + inspect(type));\n}\n\nfunction printScalar(type, options) {\n  return printDescription(options, type) + \"scalar \".concat(type.name) + printSpecifiedByUrl(type);\n}\n\nfunction printImplementedInterfaces(type) {\n  var interfaces = type.getInterfaces();\n  return interfaces.length ? ' implements ' + interfaces.map(function (i) {\n    return i.name;\n  }).join(' & ') : '';\n}\n\nfunction printObject(type, options) {\n  return printDescription(options, type) + \"type \".concat(type.name) + printImplementedInterfaces(type) + printFields(options, type);\n}\n\nfunction printInterface(type, options) {\n  return printDescription(options, type) + \"interface \".concat(type.name) + printImplementedInterfaces(type) + printFields(options, type);\n}\n\nfunction printUnion(type, options) {\n  var types = type.getTypes();\n  var possibleTypes = types.length ? ' = ' + types.join(' | ') : '';\n  return printDescription(options, type) + 'union ' + type.name + possibleTypes;\n}\n\nfunction printEnum(type, options) {\n  var values = type.getValues().map(function (value, i) {\n    return printDescription(options, value, '  ', !i) + '  ' + value.name + printDeprecated(value.deprecationReason);\n  });\n  return printDescription(options, type) + \"enum \".concat(type.name) + printBlock(values);\n}\n\nfunction printInputObject(type, options) {\n  var fields = objectValues(type.getFields()).map(function (f, i) {\n    return printDescription(options, f, '  ', !i) + '  ' + printInputValue(f);\n  });\n  return printDescription(options, type) + \"input \".concat(type.name) + printBlock(fields);\n}\n\nfunction printFields(options, type) {\n  var fields = objectValues(type.getFields()).map(function (f, i) {\n    return printDescription(options, f, '  ', !i) + '  ' + f.name + printArgs(options, f.args, '  ') + ': ' + String(f.type) + printDeprecated(f.deprecationReason);\n  });\n  return printBlock(fields);\n}\n\nfunction printBlock(items) {\n  return items.length !== 0 ? ' {\\n' + items.join('\\n') + '\\n}' : '';\n}\n\nfunction printArgs(options, args) {\n  var indentation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n\n  if (args.length === 0) {\n    return '';\n  } // If every arg does not have a description, print them on one line.\n\n\n  if (args.every(function (arg) {\n    return !arg.description;\n  })) {\n    return '(' + args.map(printInputValue).join(', ') + ')';\n  }\n\n  return '(\\n' + args.map(function (arg, i) {\n    return printDescription(options, arg, '  ' + indentation, !i) + '  ' + indentation + printInputValue(arg);\n  }).join('\\n') + '\\n' + indentation + ')';\n}\n\nfunction printInputValue(arg) {\n  var defaultAST = astFromValue(arg.defaultValue, arg.type);\n  var argDecl = arg.name + ': ' + String(arg.type);\n\n  if (defaultAST) {\n    argDecl += \" = \".concat(print(defaultAST));\n  }\n\n  return argDecl + printDeprecated(arg.deprecationReason);\n}\n\nfunction printDirective(directive, options) {\n  return printDescription(options, directive) + 'directive @' + directive.name + printArgs(options, directive.args) + (directive.isRepeatable ? ' repeatable' : '') + ' on ' + directive.locations.join(' | ');\n}\n\nfunction printDeprecated(reason) {\n  if (reason == null) {\n    return '';\n  }\n\n  var reasonAST = astFromValue(reason, GraphQLString);\n\n  if (reasonAST && reason !== DEFAULT_DEPRECATION_REASON) {\n    return ' @deprecated(reason: ' + print(reasonAST) + ')';\n  }\n\n  return ' @deprecated';\n}\n\nfunction printSpecifiedByUrl(scalar) {\n  if (scalar.specifiedByUrl == null) {\n    return '';\n  }\n\n  var url = scalar.specifiedByUrl;\n  var urlAST = astFromValue(url, GraphQLString);\n  urlAST || invariant(0, 'Unexpected null value returned from `astFromValue` for specifiedByUrl');\n  return ' @specifiedBy(url: ' + print(urlAST) + ')';\n}\n\nfunction printDescription(options, def) {\n  var indentation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  var firstInBlock = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  var description = def.description;\n\n  if (description == null) {\n    return '';\n  }\n\n  if ((options === null || options === void 0 ? void 0 : options.commentDescriptions) === true) {\n    return printDescriptionWithComments(description, indentation, firstInBlock);\n  }\n\n  var preferMultipleLines = description.length > 70;\n  var blockString = printBlockString(description, '', preferMultipleLines);\n  var prefix = indentation && !firstInBlock ? '\\n' + indentation : indentation;\n  return prefix + blockString.replace(/\\n/g, '\\n' + indentation) + '\\n';\n}\n\nfunction printDescriptionWithComments(description, indentation, firstInBlock) {\n  var prefix = indentation && !firstInBlock ? '\\n' : '';\n  var comment = description.split('\\n').map(function (line) {\n    return indentation + (line !== '' ? '# ' + line : '#');\n  }).join('\\n');\n  return prefix + comment + '\\n';\n}\n","<template>\n  <span\n    :class=\"isScalar ? 'text-secondaryLight' : 'cursor-pointer text-accent'\"\n    @click=\"jumpToType\"\n  >\n    {{ typeString }}\n  </span>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\"\nimport { GraphQLScalarType } from \"graphql\"\n\nexport default defineComponent({\n  props: {\n    // eslint-disable-next-line vue/require-default-prop\n    gqlType: null,\n    // (typeName: string) => void\n    // eslint-disable-next-line vue/require-default-prop\n    jumpTypeCallback: Function,\n  },\n\n  computed: {\n    typeString() {\n      return `${this.gqlType}`\n    },\n    isScalar() {\n      return this.resolveRootType(this.gqlType) instanceof GraphQLScalarType\n    },\n  },\n\n  methods: {\n    jumpToType() {\n      if (this.isScalar) return\n      this.jumpTypeCallback(this.gqlType)\n    },\n    resolveRootType(type) {\n      let t = type\n      while (t.ofType != null) t = t.ofType\n      return t\n    },\n  },\n})\n</script>\n","<template>\n  <span\n    :class=\"isScalar ? 'text-secondaryLight' : 'cursor-pointer text-accent'\"\n    @click=\"jumpToType\"\n  >\n    {{ typeString }}\n  </span>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\"\nimport { GraphQLScalarType } from \"graphql\"\n\nexport default defineComponent({\n  props: {\n    // eslint-disable-next-line vue/require-default-prop\n    gqlType: null,\n    // (typeName: string) => void\n    // eslint-disable-next-line vue/require-default-prop\n    jumpTypeCallback: Function,\n  },\n\n  computed: {\n    typeString() {\n      return `${this.gqlType}`\n    },\n    isScalar() {\n      return this.resolveRootType(this.gqlType) instanceof GraphQLScalarType\n    },\n  },\n\n  methods: {\n    jumpToType() {\n      if (this.isScalar) return\n      this.jumpTypeCallback(this.gqlType)\n    },\n    resolveRootType(type) {\n      let t = type\n      while (t.ofType != null) t = t.ofType\n      return t\n    },\n  },\n})\n</script>\n","<template>\n  <div>\n    <div class=\"field-title\" :class=\"{ 'field-highlighted': isHighlighted }\">\n      {{ fieldName }}\n      <span v-if=\"fieldArgs.length > 0\">\n        (\n        <span v-for=\"(field, index) in fieldArgs\" :key=\"`field-${index}`\">\n          {{ field.name }}:\n          <GraphqlTypeLink\n            :gql-type=\"field.type\"\n            :jump-type-callback=\"jumpTypeCallback\"\n          />\n          <span v-if=\"index !== fieldArgs.length - 1\">, </span>\n        </span>\n        ) </span\n      >:\n      <GraphqlTypeLink\n        :gql-type=\"gqlField.type\"\n        :jump-type-callback=\"jumpTypeCallback\"\n      />\n    </div>\n    <div\n      v-if=\"gqlField.description\"\n      class=\"py-2 text-secondaryLight field-desc\"\n    >\n      {{ gqlField.description }}\n    </div>\n    <div\n      v-if=\"gqlField.isDeprecated\"\n      class=\"inline-block px-2 py-1 my-1 text-black bg-yellow-200 rounded field-deprecated\"\n    >\n      {{ t(\"state.deprecated\") }}\n    </div>\n    <div v-if=\"fieldArgs.length > 0\">\n      <h5 class=\"my-2\">Arguments:</h5>\n      <div class=\"pl-4 border-l-2 border-divider\">\n        <div v-for=\"(field, index) in fieldArgs\" :key=\"`field-${index}`\">\n          <span>\n            {{ field.name }}:\n            <GraphqlTypeLink\n              :gql-type=\"field.type\"\n              :jump-type-callback=\"jumpTypeCallback\"\n            />\n          </span>\n          <div\n            v-if=\"field.description\"\n            class=\"py-2 text-secondaryLight field-desc\"\n          >\n            {{ field.description }}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n// TypeScript + Script Setup this :)\nimport { defineComponent } from \"vue\"\nimport { useI18n } from \"@composables/i18n\"\n\nexport default defineComponent({\n  props: {\n    gqlField: { type: Object, default: () => ({}) },\n    jumpTypeCallback: { type: Function, default: () => ({}) },\n    isHighlighted: { type: Boolean, default: false },\n  },\n  setup() {\n    return {\n      t: useI18n(),\n    }\n  },\n  computed: {\n    fieldName() {\n      return this.gqlField.name\n    },\n\n    fieldArgs() {\n      return this.gqlField.args || []\n    },\n  },\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.field-highlighted {\n  @apply border-accent border-b-2;\n}\n\n.field-title {\n  @apply select-text;\n}\n</style>\n","<template>\n  <div :id=\"`type_${gqlType.name}`\" class=\"p-4\">\n    <div class=\"type-title\" :class=\"{ 'text-accent': isHighlighted }\">\n      <span v-if=\"isInput\" class=\"text-accent\">input </span>\n      <span v-else-if=\"isInterface\" class=\"text-accent\">interface </span>\n      <span v-else-if=\"isEnum\" class=\"text-accent\">enum </span>\n      {{ gqlType.name }}\n    </div>\n    <div v-if=\"gqlType.description\" class=\"py-2 text-secondaryLight type-desc\">\n      {{ gqlType.description }}\n    </div>\n    <div v-if=\"interfaces.length > 0\">\n      <h5 class=\"my-2\">Interfaces:</h5>\n      <div\n        v-for=\"(gqlInterface, index) in interfaces\"\n        :key=\"`gqlInterface-${index}`\"\n      >\n        <GraphqlTypeLink\n          :gql-type=\"gqlInterface\"\n          :jump-type-callback=\"jumpTypeCallback\"\n          class=\"pl-4 border-l-2 border-divider\"\n        />\n      </div>\n    </div>\n    <div v-if=\"children.length > 0\" class=\"mb-2\">\n      <h5 class=\"my-2\">Children:</h5>\n      <GraphqlTypeLink\n        v-for=\"(child, index) in children\"\n        :key=\"`child-${index}`\"\n        :gql-type=\"child\"\n        :jump-type-callback=\"jumpTypeCallback\"\n        class=\"pl-4 border-l-2 border-divider\"\n      />\n    </div>\n    <div v-if=\"gqlType.getFields\">\n      <h5 class=\"my-2\">Fields:</h5>\n      <GraphqlField\n        v-for=\"(field, index) in gqlType.getFields()\"\n        :key=\"`field-${index}`\"\n        class=\"pl-4 border-l-2 border-divider\"\n        :gql-field=\"field\"\n        :is-highlighted=\"isFieldHighlighted({ field })\"\n        :jump-type-callback=\"jumpTypeCallback\"\n      />\n    </div>\n    <div v-if=\"isEnum\">\n      <h5 class=\"my-2\">Values:</h5>\n      <div\n        v-for=\"(value, index) in gqlType.getValues()\"\n        :key=\"`value-${index}`\"\n        class=\"pl-4 border-l-2 border-divider\"\n        v-text=\"value.name\"\n      ></div>\n    </div>\n  </div>\n</template>\n\n<script>\n// TODO: TypeScript + Setup Script this at some point :)\n\nimport { defineComponent } from \"vue\"\nimport {\n  GraphQLEnumType,\n  GraphQLInputObjectType,\n  GraphQLInterfaceType,\n} from \"graphql\"\n\nexport default defineComponent({\n  props: {\n    // eslint-disable-next-line vue/require-default-prop, vue/require-prop-types\n    gqlType: {},\n    gqlTypes: { type: Array, default: () => [] },\n    jumpTypeCallback: { type: Function, default: () => ({}) },\n    isHighlighted: { type: Boolean, default: false },\n    highlightedFields: { type: Array, default: () => [] },\n  },\n  computed: {\n    isInput() {\n      return this.gqlType instanceof GraphQLInputObjectType\n    },\n    isInterface() {\n      return this.gqlType instanceof GraphQLInterfaceType\n    },\n    isEnum() {\n      return this.gqlType instanceof GraphQLEnumType\n    },\n    interfaces() {\n      return (this.gqlType.getInterfaces && this.gqlType.getInterfaces()) || []\n    },\n    children() {\n      return this.gqlTypes.filter(\n        (type) =>\n          type.getInterfaces && type.getInterfaces().includes(this.gqlType)\n      )\n    },\n  },\n  methods: {\n    isFieldHighlighted({ field }) {\n      return !!this.highlightedFields.find(({ name }) => name === field.name)\n    },\n  },\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.type-highlighted {\n  @apply text-accent;\n}\n</style>\n","<template>\n  <SmartTabs\n    v-model=\"selectedNavigationTab\"\n    styles=\"sticky overflow-x-auto flex-shrink-0 bg-primary z-10 top-0\"\n    vertical\n    render-inactive-tabs\n  >\n    <SmartTab :id=\"'history'\" :icon=\"IconClock\" :label=\"`${t('tab.history')}`\">\n      <History :page=\"'graphql'\" @use-history=\"handleUseHistory\" />\n    </SmartTab>\n    <SmartTab\n      :id=\"'collections'\"\n      :icon=\"IconFolder\"\n      :label=\"`${t('tab.collections')}`\"\n    >\n      <CollectionsGraphql />\n    </SmartTab>\n    <SmartTab\n      :id=\"'docs'\"\n      :icon=\"IconBookOpen\"\n      :label=\"`${t('tab.documentation')}`\"\n    >\n      <div\n        v-if=\"\n          queryFields.length === 0 &&\n          mutationFields.length === 0 &&\n          subscriptionFields.length === 0 &&\n          graphqlTypes.length === 0\n        \"\n        class=\"flex flex-col items-center justify-center p-4 text-secondaryLight\"\n      >\n        <img\n          :src=\"`/images/states/${colorMode.value}/add_comment.svg`\"\n          loading=\"lazy\"\n          class=\"inline-flex flex-col object-contain object-center w-16 h-16 my-4\"\n          :alt=\"`${t('empty.documentation')}`\"\n        />\n        <span class=\"mb-4 text-center\">\n          {{ t(\"empty.documentation\") }}\n        </span>\n      </div>\n      <div v-else>\n        <div\n          class=\"sticky top-0 z-10 flex flex-shrink-0 overflow-x-auto bg-primary\"\n        >\n          <input\n            v-model=\"graphqlFieldsFilterText\"\n            type=\"search\"\n            autocomplete=\"off\"\n            :placeholder=\"`${t('action.search')}`\"\n            class=\"flex flex-1 p-4 py-2 bg-transparent\"\n          />\n          <div class=\"flex\">\n            <ButtonSecondary\n              v-tippy=\"{ theme: 'tooltip' }\"\n              to=\"https://docs.hoppscotch.io/quickstart/graphql\"\n              blank\n              :title=\"t('app.wiki')\"\n              :icon=\"IconHelpCircle\"\n            />\n          </div>\n        </div>\n        <SmartTabs\n          v-model=\"selectedGqlTab\"\n          styles=\"border-t border-b border-dividerLight bg-primary sticky overflow-x-auto flex-shrink-0 z-10 top-sidebarPrimaryStickyFold\"\n          render-inactive-tabs\n        >\n          <SmartTab\n            v-if=\"queryFields.length > 0\"\n            :id=\"'queries'\"\n            :label=\"`${t('tab.queries')}`\"\n            class=\"divide-y divide-dividerLight\"\n          >\n            <GraphqlField\n              v-for=\"(field, index) in filteredQueryFields\"\n              :key=\"`field-${index}`\"\n              :gql-field=\"field\"\n              :jump-type-callback=\"handleJumpToType\"\n              class=\"p-4\"\n            />\n          </SmartTab>\n          <SmartTab\n            v-if=\"mutationFields.length > 0\"\n            :id=\"'mutations'\"\n            :label=\"`${t('graphql.mutations')}`\"\n            class=\"divide-y divide-dividerLight\"\n          >\n            <GraphqlField\n              v-for=\"(field, index) in filteredMutationFields\"\n              :key=\"`field-${index}`\"\n              :gql-field=\"field\"\n              :jump-type-callback=\"handleJumpToType\"\n              class=\"p-4\"\n            />\n          </SmartTab>\n          <SmartTab\n            v-if=\"subscriptionFields.length > 0\"\n            :id=\"'subscriptions'\"\n            :label=\"`${t('graphql.subscriptions')}`\"\n            class=\"divide-y divide-dividerLight\"\n          >\n            <GraphqlField\n              v-for=\"(field, index) in filteredSubscriptionFields\"\n              :key=\"`field-${index}`\"\n              :gql-field=\"field\"\n              :jump-type-callback=\"handleJumpToType\"\n              class=\"p-4\"\n            />\n          </SmartTab>\n          <SmartTab\n            v-if=\"graphqlTypes.length > 0\"\n            :id=\"'types'\"\n            :label=\"`${t('tab.types')}`\"\n            class=\"divide-y divide-dividerLight\"\n          >\n            <GraphqlType\n              v-for=\"(type, index) in filteredGraphqlTypes\"\n              :key=\"`type-${index}`\"\n              :gql-type=\"type\"\n              :gql-types=\"graphqlTypes\"\n              :is-highlighted=\"isGqlTypeHighlighted(type)\"\n              :highlighted-fields=\"getGqlTypeHighlightedFields(type)\"\n              :jump-type-callback=\"handleJumpToType\"\n            />\n          </SmartTab>\n        </SmartTabs>\n      </div>\n    </SmartTab>\n    <SmartTab :id=\"'schema'\" :icon=\"IconBox\" :label=\"`${t('tab.schema')}`\">\n      <div\n        v-if=\"schemaString\"\n        class=\"sticky top-0 z-10 flex items-center justify-between flex-shrink-0 pl-4 overflow-x-auto border-b bg-primary border-dividerLight\"\n      >\n        <label class=\"font-semibold truncate text-secondaryLight\">\n          {{ t(\"graphql.schema\") }}\n        </label>\n        <div class=\"flex\">\n          <ButtonSecondary\n            v-tippy=\"{ theme: 'tooltip' }\"\n            to=\"https://docs.hoppscotch.io/quickstart/graphql\"\n            blank\n            :title=\"t('app.wiki')\"\n            :icon=\"IconHelpCircle\"\n          />\n          <ButtonSecondary\n            v-tippy=\"{ theme: 'tooltip' }\"\n            :title=\"t('state.linewrap')\"\n            :class=\"{ '!text-accent': linewrapEnabled }\"\n            :icon=\"IconWrapText\"\n            @click.prevent=\"linewrapEnabled = !linewrapEnabled\"\n          />\n          <ButtonSecondary\n            v-tippy=\"{ theme: 'tooltip' }\"\n            :title=\"t('action.download_file')\"\n            :icon=\"downloadSchemaIcon\"\n            @click=\"downloadSchema\"\n          />\n          <ButtonSecondary\n            v-tippy=\"{ theme: 'tooltip' }\"\n            :title=\"t('action.copy')\"\n            :icon=\"copySchemaIcon\"\n            @click=\"copySchema\"\n          />\n        </div>\n      </div>\n      <div\n        v-if=\"schemaString\"\n        ref=\"schemaEditor\"\n        class=\"flex flex-col flex-1\"\n      ></div>\n      <div\n        v-else\n        class=\"flex flex-col items-center justify-center p-4 text-secondaryLight\"\n      >\n        <img\n          :src=\"`/images/states/${colorMode.value}/blockchain.svg`\"\n          loading=\"lazy\"\n          class=\"inline-flex flex-col object-contain object-center w-16 h-16 my-4\"\n          :alt=\"`${t('empty.schema')}`\"\n        />\n        <span class=\"mb-4 text-center\">\n          {{ t(\"empty.schema\") }}\n        </span>\n      </div>\n    </SmartTab>\n  </SmartTabs>\n</template>\n\n<script setup lang=\"ts\">\nimport IconFolder from \"~icons/lucide/folder\"\nimport IconBookOpen from \"~icons/lucide/book-open\"\nimport IconHelpCircle from \"~icons/lucide/help-circle\"\nimport IconWrapText from \"~icons/lucide/wrap-text\"\nimport IconDownload from \"~icons/lucide/download\"\nimport IconCheck from \"~icons/lucide/check\"\nimport IconClock from \"~icons/lucide/clock\"\nimport IconCopy from \"~icons/lucide/copy\"\nimport IconBox from \"~icons/lucide/box\"\nimport { computed, nextTick, reactive, ref } from \"vue\"\nimport { GraphQLField, GraphQLType } from \"graphql\"\nimport { map } from \"rxjs/operators\"\nimport { GQLHeader } from \"@hoppscotch/data\"\nimport { refAutoReset } from \"@vueuse/core\"\nimport { useCodemirror } from \"@composables/codemirror\"\nimport { GQLConnection } from \"@helpers/GQLConnection\"\nimport { copyToClipboard } from \"@helpers/utils/clipboard\"\nimport { useReadonlyStream } from \"@composables/stream\"\nimport { useI18n } from \"@composables/i18n\"\nimport { useToast } from \"@composables/toast\"\nimport { useColorMode } from \"@composables/theming\"\nimport {\n  setGQLAuth,\n  setGQLHeaders,\n  setGQLQuery,\n  setGQLResponse,\n  setGQLURL,\n  setGQLVariables,\n} from \"~/newstore/GQLSession\"\n\ntype NavigationTabs = \"history\" | \"collection\" | \"docs\" | \"schema\"\ntype GqlTabs = \"queries\" | \"mutations\" | \"subscriptions\" | \"types\"\n\nconst selectedNavigationTab = ref<NavigationTabs>(\"history\")\nconst selectedGqlTab = ref<GqlTabs>(\"queries\")\n\nconst t = useI18n()\nconst colorMode = useColorMode()\n\nfunction isTextFoundInGraphqlFieldObject(\n  text: string,\n  field: GraphQLField<any, any>\n) {\n  const normalizedText = text.toLowerCase()\n\n  const isFilterTextFoundInDescription = field.description\n    ? field.description.toLowerCase().includes(normalizedText)\n    : false\n  const isFilterTextFoundInName = field.name\n    .toLowerCase()\n    .includes(normalizedText)\n\n  return isFilterTextFoundInDescription || isFilterTextFoundInName\n}\n\nfunction getFilteredGraphqlFields(\n  filterText: string,\n  fields: GraphQLField<any, any>[]\n) {\n  if (!filterText) return fields\n\n  return fields.filter((field) =>\n    isTextFoundInGraphqlFieldObject(filterText, field)\n  )\n}\n\nfunction getFilteredGraphqlTypes(filterText: string, types: GraphQLType[]) {\n  if (!filterText) return types\n\n  return types.filter((type) => {\n    const isFilterTextMatching = isTextFoundInGraphqlFieldObject(\n      filterText,\n      type as any\n    )\n\n    if (isFilterTextMatching) {\n      return true\n    }\n\n    const isFilterTextMatchingAtLeastOneField = Object.values(\n      (type as any)._fields || {}\n    ).some((field) => isTextFoundInGraphqlFieldObject(filterText, field as any))\n\n    return isFilterTextMatchingAtLeastOneField\n  })\n}\n\nfunction resolveRootType(type: GraphQLType) {\n  let t: any = type\n  while (t.ofType) t = t.ofType\n  return t\n}\n\ntype GQLHistoryEntry = {\n  url: string\n  headers: GQLHeader[]\n  query: string\n  response: string\n  variables: string\n}\n\nconst props = defineProps<{\n  conn: GQLConnection\n}>()\n\nconst toast = useToast()\n\nconst queryFields = useReadonlyStream(\n  props.conn.queryFields$.pipe(map((x) => x ?? [])),\n  []\n)\n\nconst mutationFields = useReadonlyStream(\n  props.conn.mutationFields$.pipe(map((x) => x ?? [])),\n  []\n)\n\nconst subscriptionFields = useReadonlyStream(\n  props.conn.subscriptionFields$.pipe(map((x) => x ?? [])),\n  []\n)\n\nconst graphqlTypes = useReadonlyStream(\n  props.conn.graphqlTypes$.pipe(map((x) => x ?? [])),\n  []\n)\n\nconst downloadSchemaIcon = refAutoReset<typeof IconDownload | typeof IconCheck>(\n  IconDownload,\n  1000\n)\nconst copySchemaIcon = refAutoReset<typeof IconCopy | typeof IconCheck>(\n  IconCopy,\n  1000\n)\n\nconst graphqlFieldsFilterText = ref(\"\")\n\nconst filteredQueryFields = computed(() => {\n  return getFilteredGraphqlFields(\n    graphqlFieldsFilterText.value,\n    queryFields.value as any\n  )\n})\n\nconst filteredMutationFields = computed(() => {\n  return getFilteredGraphqlFields(\n    graphqlFieldsFilterText.value,\n    mutationFields.value as any\n  )\n})\n\nconst filteredSubscriptionFields = computed(() => {\n  return getFilteredGraphqlFields(\n    graphqlFieldsFilterText.value,\n    subscriptionFields.value as any\n  )\n})\n\nconst filteredGraphqlTypes = computed(() => {\n  return getFilteredGraphqlTypes(\n    graphqlFieldsFilterText.value,\n    graphqlTypes.value as any\n  )\n})\n\nconst isGqlTypeHighlighted = (gqlType: GraphQLType) => {\n  if (!graphqlFieldsFilterText.value) return false\n\n  return isTextFoundInGraphqlFieldObject(\n    graphqlFieldsFilterText.value,\n    gqlType as any\n  )\n}\n\nconst getGqlTypeHighlightedFields = (gqlType: GraphQLType) => {\n  if (!graphqlFieldsFilterText.value) return []\n\n  const fields = Object.values((gqlType as any)._fields || {})\n  if (!fields || fields.length === 0) return []\n\n  return fields.filter((field) =>\n    isTextFoundInGraphqlFieldObject(graphqlFieldsFilterText.value, field as any)\n  )\n}\n\nconst handleJumpToType = async (type: GraphQLType) => {\n  selectedGqlTab.value = \"types\"\n  await nextTick()\n\n  const rootTypeName = resolveRootType(type).name\n  const target = document.getElementById(`type_${rootTypeName}`)\n  if (target) {\n    target.scrollIntoView({ block: \"center\", behavior: \"smooth\" })\n    target.classList.add(\n      \"transition-all\",\n      \"ring-inset\",\n      \"ring-accentLight\",\n      \"ring-4\"\n    )\n    setTimeout(\n      () =>\n        target.classList.remove(\n          \"ring-inset\",\n          \"ring-accentLight\",\n          \"ring-4\",\n          \"transition-all\"\n        ),\n      2000\n    )\n  }\n}\n\nconst schemaString = useReadonlyStream(\n  props.conn.schemaString$.pipe(map((x) => x ?? \"\")),\n  \"\"\n)\n\nconst schemaEditor = ref<any | null>(null)\nconst linewrapEnabled = ref(true)\n\nuseCodemirror(\n  schemaEditor,\n  schemaString,\n  reactive({\n    extendedEditorConfig: {\n      mode: \"graphql\",\n      readOnly: true,\n      lineWrapping: linewrapEnabled,\n    },\n    linter: null,\n    completer: null,\n    environmentHighlights: false,\n  })\n)\n\nconst downloadSchema = () => {\n  const dataToWrite = JSON.stringify(schemaString.value, null, 2)\n  const file = new Blob([dataToWrite], { type: \"application/graphql\" })\n  const a = document.createElement(\"a\")\n  const url = URL.createObjectURL(file)\n  a.href = url\n  a.download = `${url.split(\"/\").pop()!.split(\"#\")[0].split(\"?\")[0]}.graphql`\n  document.body.appendChild(a)\n  a.click()\n  downloadSchemaIcon.value = IconCheck\n  toast.success(`${t(\"state.download_started\")}`)\n  setTimeout(() => {\n    document.body.removeChild(a)\n    URL.revokeObjectURL(url)\n  }, 1000)\n}\n\nconst copySchema = () => {\n  if (!schemaString.value) return\n\n  copyToClipboard(schemaString.value)\n  copySchemaIcon.value = IconCheck\n}\n\nconst handleUseHistory = (entry: GQLHistoryEntry) => {\n  const url = entry.url\n  const headers = entry.headers\n  const gqlQueryString = entry.query\n  const variableString = entry.variables\n  const responseText = entry.response\n\n  setGQLURL(url)\n  setGQLHeaders(headers)\n  setGQLQuery(gqlQueryString)\n  setGQLVariables(variableString)\n  setGQLResponse(responseText)\n  setGQLAuth({\n    authType: \"none\",\n    authActive: true,\n  })\n  props.conn.reset()\n}\n</script>\n","<template>\n  <div class=\"flex flex-col flex-1 overflow-auto whitespace-nowrap\">\n    <div\n      v-if=\"responseString === 'loading'\"\n      class=\"flex flex-col items-center justify-center p-4 text-secondaryLight\"\n    >\n      <SmartSpinner class=\"my-4\" />\n      <span class=\"text-secondaryLight\">{{ t(\"state.loading\") }}</span>\n    </div>\n    <div v-else-if=\"responseString\" class=\"flex flex-col flex-1\">\n      <div\n        class=\"sticky top-0 z-10 flex items-center justify-between flex-shrink-0 pl-4 overflow-x-auto border-b bg-primary border-dividerLight\"\n      >\n        <label class=\"font-semibold truncate text-secondaryLight\">\n          {{ t(\"response.title\") }}\n        </label>\n        <div class=\"flex items-center\">\n          <ButtonSecondary\n            v-tippy=\"{ theme: 'tooltip' }\"\n            :title=\"t('state.linewrap')\"\n            :class=\"{ '!text-accent': linewrapEnabled }\"\n            :icon=\"IconWrapText\"\n            @click.prevent=\"linewrapEnabled = !linewrapEnabled\"\n          />\n          <ButtonSecondary\n            v-tippy=\"{ theme: 'tooltip', allowHTML: true }\"\n            :title=\"`${t(\n              'action.download_file'\n            )} <kbd>${getSpecialKey()}</kbd><kbd>J</kbd>`\"\n            :icon=\"downloadResponseIcon\"\n            @click=\"downloadResponse\"\n          />\n          <ButtonSecondary\n            v-tippy=\"{ theme: 'tooltip', allowHTML: true }\"\n            :title=\"`${t(\n              'action.copy'\n            )} <kbd>${getSpecialKey()}</kbd><kbd>.</kbd>`\"\n            :icon=\"copyResponseIcon\"\n            @click=\"copyResponse\"\n          />\n        </div>\n      </div>\n      <div ref=\"schemaEditor\" class=\"flex flex-col flex-1\"></div>\n    </div>\n    <AppShortcutsPrompt v-else class=\"p-4\" />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport IconWrapText from \"~icons/lucide/wrap-text\"\nimport IconDownload from \"~icons/lucide/download\"\nimport IconCheck from \"~icons/lucide/check\"\nimport IconCopy from \"~icons/lucide/copy\"\nimport { reactive, ref } from \"vue\"\nimport { refAutoReset } from \"@vueuse/core\"\nimport { useCodemirror } from \"@composables/codemirror\"\nimport { copyToClipboard } from \"~/helpers/utils/clipboard\"\nimport { useReadonlyStream } from \"@composables/stream\"\nimport { useI18n } from \"@composables/i18n\"\nimport { useToast } from \"@composables/toast\"\nimport { gqlResponse$ } from \"~/newstore/GQLSession\"\nimport { defineActionHandler } from \"~/helpers/actions\"\nimport { getPlatformSpecialKey as getSpecialKey } from \"~/helpers/platformutils\"\n\nconst t = useI18n()\n\nconst toast = useToast()\n\nconst responseString = useReadonlyStream(gqlResponse$, \"\")\n\nconst schemaEditor = ref<any | null>(null)\nconst linewrapEnabled = ref(true)\n\nuseCodemirror(\n  schemaEditor,\n  responseString,\n  reactive({\n    extendedEditorConfig: {\n      mode: \"application/ld+json\",\n      readOnly: true,\n      lineWrapping: linewrapEnabled,\n    },\n    linter: null,\n    completer: null,\n    environmentHighlights: false,\n  })\n)\n\nconst downloadResponseIcon = refAutoReset<\n  typeof IconDownload | typeof IconCheck\n>(IconDownload, 1000)\nconst copyResponseIcon = refAutoReset<typeof IconCopy | typeof IconCheck>(\n  IconCopy,\n  1000\n)\n\nconst copyResponse = () => {\n  copyToClipboard(responseString.value!)\n  copyResponseIcon.value = IconCheck\n  toast.success(`${t(\"state.copied_to_clipboard\")}`)\n}\n\nconst downloadResponse = () => {\n  const dataToWrite = responseString.value\n  const file = new Blob([dataToWrite!], { type: \"application/json\" })\n  const a = document.createElement(\"a\")\n  const url = URL.createObjectURL(file)\n  a.href = url\n  a.download = `${url.split(\"/\").pop()!.split(\"#\")[0].split(\"?\")[0]}`\n  document.body.appendChild(a)\n  a.click()\n  downloadResponseIcon.value = IconCheck\n  toast.success(`${t(\"state.download_started\")}`)\n  setTimeout(() => {\n    document.body.removeChild(a)\n    URL.revokeObjectURL(url)\n  }, 1000)\n}\n\ndefineActionHandler(\"response.file.download\", () => downloadResponse())\ndefineActionHandler(\"response.copy\", () => copyResponse())\n</script>\n","<template>\n  <div class=\"flex flex-col flex-1\">\n    <div\n      class=\"sticky z-10 flex items-center justify-between flex-shrink-0 pl-4 overflow-x-auto border-b bg-primary border-dividerLight top-upperSecondaryStickyFold\"\n    >\n      <span class=\"flex items-center\">\n        <label class=\"font-semibold truncate text-secondaryLight\">\n          {{ t(\"authorization.type\") }}\n        </label>\n        <tippy\n          interactive\n          trigger=\"click\"\n          theme=\"popover\"\n          :on-shown=\"() => tippyActions.focus()\"\n        >\n          <span class=\"select-wrapper\">\n            <ButtonSecondary class=\"pr-8 ml-2 rounded-none\" :label=\"authName\" />\n          </span>\n          <template #content=\"{ hide }\">\n            <div\n              ref=\"tippyActions\"\n              class=\"flex flex-col focus:outline-none\"\n              tabindex=\"0\"\n              @keyup.escape=\"hide()\"\n            >\n              <SmartItem\n                label=\"None\"\n                :icon=\"authName === 'None' ? IconCircleDot : IconCircle\"\n                :active=\"authName === 'None'\"\n                @click=\"\n                  () => {\n                    authType = 'none'\n                    hide()\n                  }\n                \"\n              />\n              <SmartItem\n                label=\"Basic Auth\"\n                :icon=\"authName === 'Basic Auth' ? IconCircleDot : IconCircle\"\n                :active=\"authName === 'Basic Auth'\"\n                @click=\"\n                  () => {\n                    authType = 'basic'\n                    hide()\n                  }\n                \"\n              />\n              <SmartItem\n                label=\"Bearer Token\"\n                :icon=\"authName === 'Bearer' ? IconCircleDot : IconCircle\"\n                :active=\"authName === 'Bearer'\"\n                @click=\"\n                  () => {\n                    authType = 'bearer'\n                    hide()\n                  }\n                \"\n              />\n              <SmartItem\n                label=\"OAuth 2.0\"\n                :icon=\"authName === 'OAuth 2.0' ? IconCircleDot : IconCircle\"\n                :active=\"authName === 'OAuth 2.0'\"\n                @click=\"\n                  () => {\n                    authType = 'oauth-2'\n                    hide()\n                  }\n                \"\n              />\n              <SmartItem\n                label=\"API key\"\n                :icon=\"authName === 'API key' ? IconCircleDot : IconCircle\"\n                :active=\"authName === 'API key'\"\n                @click=\"\n                  () => {\n                    authType = 'api-key'\n                    hide()\n                  }\n                \"\n              />\n            </div>\n          </template>\n        </tippy>\n      </span>\n      <div class=\"flex\">\n        <!-- <SmartCheckbox\n          :on=\"!URLExcludes.auth\"\n          @change=\"setExclude('auth', !$event)\"\n        >\n          {{ t(\"authorization.include_in_url\") }}\n        </SmartCheckbox> -->\n        <SmartCheckbox\n          :on=\"authActive\"\n          class=\"px-2\"\n          @change=\"authActive = !authActive\"\n        >\n          {{ t(\"state.enabled\") }}\n        </SmartCheckbox>\n        <ButtonSecondary\n          v-tippy=\"{ theme: 'tooltip' }\"\n          to=\"https://docs.hoppscotch.io/features/authorization\"\n          blank\n          :title=\"t('app.wiki')\"\n          :icon=\"IconHelpCircle\"\n        />\n        <ButtonSecondary\n          v-tippy=\"{ theme: 'tooltip' }\"\n          :title=\"t('action.clear')\"\n          :icon=\"IconTrash2\"\n          @click=\"clearContent\"\n        />\n      </div>\n    </div>\n    <div\n      v-if=\"authType === 'none'\"\n      class=\"flex flex-col items-center justify-center p-4 text-secondaryLight\"\n    >\n      <img\n        :src=\"`/images/states/${colorMode.value}/login.svg`\"\n        loading=\"lazy\"\n        class=\"inline-flex flex-col object-contain object-center w-16 h-16 my-4\"\n        :alt=\"`${t('empty.authorization')}`\"\n      />\n      <span class=\"pb-4 text-center\">\n        {{ t(\"empty.authorization\") }}\n      </span>\n      <ButtonSecondary\n        outline\n        :label=\"t('app.documentation')\"\n        to=\"https://docs.hoppscotch.io/features/authorization\"\n        blank\n        :icon=\"IconExternalLink\"\n        reverse\n        class=\"mb-4\"\n      />\n    </div>\n    <div v-else class=\"flex flex-1 border-b border-dividerLight\">\n      <div class=\"w-2/3 border-r border-dividerLight\">\n        <div v-if=\"authType === 'basic'\">\n          <div class=\"flex flex-1 border-b border-dividerLight\">\n            <SmartEnvInput\n              v-model=\"basicUsername\"\n              :placeholder=\"t('authorization.username')\"\n            />\n          </div>\n          <div class=\"flex flex-1 border-b border-dividerLight\">\n            <SmartEnvInput\n              v-model=\"basicPassword\"\n              :placeholder=\"t('authorization.password')\"\n            />\n          </div>\n        </div>\n        <div v-if=\"authType === 'bearer'\">\n          <div class=\"flex flex-1 border-b border-dividerLight\">\n            <SmartEnvInput v-model=\"bearerToken\" placeholder=\"Token\" />\n          </div>\n        </div>\n        <div v-if=\"authType === 'oauth-2'\">\n          <div class=\"flex flex-1 border-b border-dividerLight\">\n            <SmartEnvInput v-model=\"oauth2Token\" placeholder=\"Token\" />\n          </div>\n          <HttpOAuth2Authorization />\n        </div>\n        <div v-if=\"authType === 'api-key'\">\n          <div class=\"flex flex-1 border-b border-dividerLight\">\n            <SmartEnvInput v-model=\"apiKey\" placeholder=\"Key\" />\n          </div>\n          <div class=\"flex flex-1 border-b border-dividerLight\">\n            <SmartEnvInput v-model=\"apiValue\" placeholder=\"Value\" />\n          </div>\n          <div class=\"flex items-center border-b border-dividerLight\">\n            <span class=\"flex items-center\">\n              <label class=\"ml-4 text-secondaryLight\">\n                {{ t(\"authorization.pass_key_by\") }}\n              </label>\n              <tippy\n                interactive\n                trigger=\"click\"\n                theme=\"popover\"\n                :on-shown=\"() => authTippyActions.focus()\"\n              >\n                <span class=\"select-wrapper\">\n                  <ButtonSecondary\n                    :label=\"addTo || t('state.none')\"\n                    class=\"pr-8 ml-2 rounded-none\"\n                  />\n                </span>\n                <template #content=\"{ hide }\">\n                  <div\n                    ref=\"authTippyActions\"\n                    class=\"flex flex-col focus:outline-none\"\n                    tabindex=\"0\"\n                    @keyup.escape=\"hide()\"\n                  >\n                    <SmartItem\n                      :icon=\"addTo === 'Headers' ? IconCircleDot : IconCircle\"\n                      :active=\"addTo === 'Headers'\"\n                      :label=\"'Headers'\"\n                      @click=\"\n                        () => {\n                          addTo = 'Headers'\n                          hide()\n                        }\n                      \"\n                    />\n                    <SmartItem\n                      :icon=\"\n                        addTo === 'Query params' ? IconCircleDot : IconCircle\n                      \"\n                      :active=\"addTo === 'Query params'\"\n                      :label=\"'Query params'\"\n                      @click=\"\n                        () => {\n                          addTo = 'Query params'\n                          hide()\n                        }\n                      \"\n                    />\n                  </div>\n                </template>\n              </tippy>\n            </span>\n          </div>\n        </div>\n      </div>\n      <div\n        class=\"sticky flex-shrink-0 h-full p-4 overflow-auto overflow-x-auto bg-primary top-upperTertiaryStickyFold min-w-46 max-w-1/3 z-9\"\n      >\n        <div class=\"pb-2 text-secondaryLight\">\n          {{ t(\"helpers.authorization\") }}\n        </div>\n        <SmartAnchor\n          class=\"link\"\n          :label=\"t('authorization.learn')\"\n          :icon=\"IconExternalLink\"\n          to=\"https://docs.hoppscotch.io/features/authorization\"\n          blank\n          reverse\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, ref, Ref } from \"vue\"\nimport {\n  HoppGQLAuthAPIKey,\n  HoppGQLAuthBasic,\n  HoppGQLAuthBearer,\n  HoppGQLAuthOAuth2,\n} from \"@hoppscotch/data\"\n\nimport { pluckRef } from \"@composables/ref\"\nimport { useStream } from \"@composables/stream\"\nimport { useI18n } from \"@composables/i18n\"\nimport { useColorMode } from \"@composables/theming\"\nimport { gqlAuth$, setGQLAuth } from \"~/newstore/GQLSession\"\n\nimport IconTrash2 from \"~icons/lucide/trash-2\"\nimport IconHelpCircle from \"~icons/lucide/help-circle\"\nimport IconExternalLink from \"~icons/lucide/external-link\"\nimport IconCircleDot from \"~icons/lucide/circle-dot\"\nimport IconCircle from \"~icons/lucide/circle\"\n\nconst t = useI18n()\nconst colorMode = useColorMode()\n\nconst auth = useStream(\n  gqlAuth$,\n  { authType: \"none\", authActive: true },\n  setGQLAuth\n)\nconst authType = pluckRef(auth, \"authType\")\nconst authName = computed(() => {\n  if (authType.value === \"basic\") return \"Basic Auth\"\n  else if (authType.value === \"bearer\") return \"Bearer\"\n  else if (authType.value === \"oauth-2\") return \"OAuth 2.0\"\n  else if (authType.value === \"api-key\") return \"API key\"\n  else return \"None\"\n})\nconst authActive = pluckRef(auth, \"authActive\")\nconst basicUsername = pluckRef(auth as Ref<HoppGQLAuthBasic>, \"username\")\nconst basicPassword = pluckRef(auth as Ref<HoppGQLAuthBasic>, \"password\")\nconst bearerToken = pluckRef(auth as Ref<HoppGQLAuthBearer>, \"token\")\nconst oauth2Token = pluckRef(auth as Ref<HoppGQLAuthOAuth2>, \"token\")\nconst apiKey = pluckRef(auth as Ref<HoppGQLAuthAPIKey>, \"key\")\nconst apiValue = pluckRef(auth as Ref<HoppGQLAuthAPIKey>, \"value\")\nconst addTo = pluckRef(auth as Ref<HoppGQLAuthAPIKey>, \"addTo\")\nif (typeof addTo.value === \"undefined\") {\n  addTo.value = \"Headers\"\n  apiKey.value = \"\"\n  apiValue.value = \"\"\n}\n\nconst clearContent = () => {\n  auth.value = {\n    authType: \"none\",\n    authActive: true,\n  }\n}\n\n// Template refs\nconst tippyActions = ref<any | null>(null)\nconst authTippyActions = ref<any | null>(null)\n</script>\n","import { Ref } from \"vue\"\nimport {\n  GraphQLError,\n  GraphQLSchema,\n  parse as gqlParse,\n  validate as gqlValidate,\n} from \"graphql\"\nimport { LinterDefinition, LinterResult } from \"./linter\"\n\n/**\n * Creates a Linter function that can lint a GQL query against a given\n * schema\n */\nexport const createGQLQueryLinter: (\n  schema: Ref<GraphQLSchema | null>\n) => LinterDefinition = (schema: Ref<GraphQLSchema | null>) => (text) => {\n  if (text === \"\") return Promise.resolve([])\n  if (!schema.value) return Promise.resolve([])\n\n  try {\n    const doc = gqlParse(text)\n\n    const results = gqlValidate(schema.value, doc).map(\n      ({ locations, message }) =>\n        <LinterResult>{\n          from: {\n            line: locations![0].line,\n            ch: locations![0].column - 1,\n          },\n          to: {\n            line: locations![0].line,\n            ch: locations![0].column - 1,\n          },\n          message,\n          severity: \"error\",\n        }\n    )\n\n    return Promise.resolve(results)\n  } catch (e) {\n    const err = e as GraphQLError\n\n    return Promise.resolve([\n      <LinterResult>{\n        from: {\n          line: err.locations![0].line,\n          ch: err.locations![0].column - 1,\n        },\n        to: {\n          line: err.locations![0].line,\n          ch: err.locations![0].column,\n        },\n        message: err.message,\n        severity: \"error\",\n      },\n    ])\n  }\n}\n","import { isCompositeType } from 'graphql';\nimport { SchemaMetaFieldDef, TypeMetaFieldDef, TypeNameMetaFieldDef, } from 'graphql/type/introspection';\nexport function getDefinitionState(tokenState) {\n    let definitionState;\n    forEachState(tokenState, (state) => {\n        switch (state.kind) {\n            case 'Query':\n            case 'ShortQuery':\n            case 'Mutation':\n            case 'Subscription':\n            case 'FragmentDefinition':\n                definitionState = state;\n                break;\n        }\n    });\n    return definitionState;\n}\nexport function getFieldDef(schema, type, fieldName) {\n    if (fieldName === SchemaMetaFieldDef.name && schema.getQueryType() === type) {\n        return SchemaMetaFieldDef;\n    }\n    if (fieldName === TypeMetaFieldDef.name && schema.getQueryType() === type) {\n        return TypeMetaFieldDef;\n    }\n    if (fieldName === TypeNameMetaFieldDef.name && isCompositeType(type)) {\n        return TypeNameMetaFieldDef;\n    }\n    if ('getFields' in type) {\n        return type.getFields()[fieldName];\n    }\n    return null;\n}\nexport function forEachState(stack, fn) {\n    const reverseStateStack = [];\n    let state = stack;\n    while (state && state.kind) {\n        reverseStateStack.push(state);\n        state = state.prevState;\n    }\n    for (let i = reverseStateStack.length - 1; i >= 0; i--) {\n        fn(reverseStateStack[i]);\n    }\n}\nexport function objectValues(object) {\n    const keys = Object.keys(object);\n    const len = keys.length;\n    const values = new Array(len);\n    for (let i = 0; i < len; ++i) {\n        values[i] = object[keys[i]];\n    }\n    return values;\n}\nexport function hintList(token, list) {\n    return filterAndSortList(list, normalizeText(token.string));\n}\nfunction filterAndSortList(list, text) {\n    if (!text) {\n        return filterNonEmpty(list, entry => !entry.isDeprecated);\n    }\n    const byProximity = list.map(entry => ({\n        proximity: getProximity(normalizeText(entry.label), text),\n        entry,\n    }));\n    return filterNonEmpty(filterNonEmpty(byProximity, pair => pair.proximity <= 2), pair => !pair.entry.isDeprecated)\n        .sort((a, b) => (a.entry.isDeprecated ? 1 : 0) - (b.entry.isDeprecated ? 1 : 0) ||\n        a.proximity - b.proximity ||\n        a.entry.label.length - b.entry.label.length)\n        .map(pair => pair.entry);\n}\nfunction filterNonEmpty(array, predicate) {\n    const filtered = array.filter(predicate);\n    return filtered.length === 0 ? array : filtered;\n}\nfunction normalizeText(text) {\n    return text.toLowerCase().replace(/\\W/g, '');\n}\nfunction getProximity(suggestion, text) {\n    let proximity = lexicalDistance(text, suggestion);\n    if (suggestion.length > text.length) {\n        proximity -= suggestion.length - text.length - 1;\n        proximity += suggestion.indexOf(text) === 0 ? 0 : 0.5;\n    }\n    return proximity;\n}\nfunction lexicalDistance(a, b) {\n    let i;\n    let j;\n    const d = [];\n    const aLength = a.length;\n    const bLength = b.length;\n    for (i = 0; i <= aLength; i++) {\n        d[i] = [i];\n    }\n    for (j = 1; j <= bLength; j++) {\n        d[0][j] = j;\n    }\n    for (i = 1; i <= aLength; i++) {\n        for (j = 1; j <= bLength; j++) {\n            const cost = a[i - 1] === b[j - 1] ? 0 : 1;\n            d[i][j] = Math.min(d[i - 1][j] + 1, d[i][j - 1] + 1, d[i - 1][j - 1] + cost);\n            if (i > 1 && j > 1 && a[i - 1] === b[j - 2] && a[i - 2] === b[j - 1]) {\n                d[i][j] = Math.min(d[i][j], d[i - 2][j - 2] + cost);\n            }\n        }\n    }\n    return d[aLength][bLength];\n}\n//# sourceMappingURL=autocompleteUtils.js.map","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nexport var DocumentUri;\n(function (DocumentUri) {\n    function is(value) {\n        return typeof value === 'string';\n    }\n    DocumentUri.is = is;\n})(DocumentUri || (DocumentUri = {}));\nexport var URI;\n(function (URI) {\n    function is(value) {\n        return typeof value === 'string';\n    }\n    URI.is = is;\n})(URI || (URI = {}));\nexport var integer;\n(function (integer) {\n    integer.MIN_VALUE = -2147483648;\n    integer.MAX_VALUE = 2147483647;\n    function is(value) {\n        return typeof value === 'number' && integer.MIN_VALUE <= value && value <= integer.MAX_VALUE;\n    }\n    integer.is = is;\n})(integer || (integer = {}));\nexport var uinteger;\n(function (uinteger) {\n    uinteger.MIN_VALUE = 0;\n    uinteger.MAX_VALUE = 2147483647;\n    function is(value) {\n        return typeof value === 'number' && uinteger.MIN_VALUE <= value && value <= uinteger.MAX_VALUE;\n    }\n    uinteger.is = is;\n})(uinteger || (uinteger = {}));\n/**\n * The Position namespace provides helper functions to work with\n * [Position](#Position) literals.\n */\nexport var Position;\n(function (Position) {\n    /**\n     * Creates a new Position literal from the given line and character.\n     * @param line The position's line.\n     * @param character The position's character.\n     */\n    function create(line, character) {\n        if (line === Number.MAX_VALUE) {\n            line = uinteger.MAX_VALUE;\n        }\n        if (character === Number.MAX_VALUE) {\n            character = uinteger.MAX_VALUE;\n        }\n        return { line: line, character: character };\n    }\n    Position.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Position](#Position) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate) && Is.uinteger(candidate.line) && Is.uinteger(candidate.character);\n    }\n    Position.is = is;\n})(Position || (Position = {}));\n/**\n * The Range namespace provides helper functions to work with\n * [Range](#Range) literals.\n */\nexport var Range;\n(function (Range) {\n    function create(one, two, three, four) {\n        if (Is.uinteger(one) && Is.uinteger(two) && Is.uinteger(three) && Is.uinteger(four)) {\n            return { start: Position.create(one, two), end: Position.create(three, four) };\n        }\n        else if (Position.is(one) && Position.is(two)) {\n            return { start: one, end: two };\n        }\n        else {\n            throw new Error(\"Range#create called with invalid arguments[\".concat(one, \", \").concat(two, \", \").concat(three, \", \").concat(four, \"]\"));\n        }\n    }\n    Range.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\n    }\n    Range.is = is;\n})(Range || (Range = {}));\n/**\n * The Location namespace provides helper functions to work with\n * [Location](#Location) literals.\n */\nexport var Location;\n(function (Location) {\n    /**\n     * Creates a Location literal.\n     * @param uri The location's uri.\n     * @param range The location's range.\n     */\n    function create(uri, range) {\n        return { uri: uri, range: range };\n    }\n    Location.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\n    }\n    Location.is = is;\n})(Location || (Location = {}));\n/**\n * The LocationLink namespace provides helper functions to work with\n * [LocationLink](#LocationLink) literals.\n */\nexport var LocationLink;\n(function (LocationLink) {\n    /**\n     * Creates a LocationLink literal.\n     * @param targetUri The definition's uri.\n     * @param targetRange The full range of the definition.\n     * @param targetSelectionRange The span of the symbol definition at the target.\n     * @param originSelectionRange The span of the symbol being defined in the originating source file.\n     */\n    function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\n        return { targetUri: targetUri, targetRange: targetRange, targetSelectionRange: targetSelectionRange, originSelectionRange: originSelectionRange };\n    }\n    LocationLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the [LocationLink](#LocationLink) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri)\n            && Range.is(candidate.targetSelectionRange)\n            && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\n    }\n    LocationLink.is = is;\n})(LocationLink || (LocationLink = {}));\n/**\n * The Color namespace provides helper functions to work with\n * [Color](#Color) literals.\n */\nexport var Color;\n(function (Color) {\n    /**\n     * Creates a new Color literal.\n     */\n    function create(red, green, blue, alpha) {\n        return {\n            red: red,\n            green: green,\n            blue: blue,\n            alpha: alpha,\n        };\n    }\n    Color.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Color](#Color) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate) && Is.numberRange(candidate.red, 0, 1)\n            && Is.numberRange(candidate.green, 0, 1)\n            && Is.numberRange(candidate.blue, 0, 1)\n            && Is.numberRange(candidate.alpha, 0, 1);\n    }\n    Color.is = is;\n})(Color || (Color = {}));\n/**\n * The ColorInformation namespace provides helper functions to work with\n * [ColorInformation](#ColorInformation) literals.\n */\nexport var ColorInformation;\n(function (ColorInformation) {\n    /**\n     * Creates a new ColorInformation literal.\n     */\n    function create(range, color) {\n        return {\n            range: range,\n            color: color,\n        };\n    }\n    ColorInformation.create = create;\n    /**\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.range) && Color.is(candidate.color);\n    }\n    ColorInformation.is = is;\n})(ColorInformation || (ColorInformation = {}));\n/**\n * The Color namespace provides helper functions to work with\n * [ColorPresentation](#ColorPresentation) literals.\n */\nexport var ColorPresentation;\n(function (ColorPresentation) {\n    /**\n     * Creates a new ColorInformation literal.\n     */\n    function create(label, textEdit, additionalTextEdits) {\n        return {\n            label: label,\n            textEdit: textEdit,\n            additionalTextEdits: additionalTextEdits,\n        };\n    }\n    ColorPresentation.create = create;\n    /**\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate) && Is.string(candidate.label)\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\n    }\n    ColorPresentation.is = is;\n})(ColorPresentation || (ColorPresentation = {}));\n/**\n * A set of predefined range kinds.\n */\nexport var FoldingRangeKind;\n(function (FoldingRangeKind) {\n    /**\n     * Folding range for a comment\n     */\n    FoldingRangeKind.Comment = 'comment';\n    /**\n     * Folding range for a imports or includes\n     */\n    FoldingRangeKind.Imports = 'imports';\n    /**\n     * Folding range for a region (e.g. `#region`)\n     */\n    FoldingRangeKind.Region = 'region';\n})(FoldingRangeKind || (FoldingRangeKind = {}));\n/**\n * The folding range namespace provides helper functions to work with\n * [FoldingRange](#FoldingRange) literals.\n */\nexport var FoldingRange;\n(function (FoldingRange) {\n    /**\n     * Creates a new FoldingRange literal.\n     */\n    function create(startLine, endLine, startCharacter, endCharacter, kind, collapsedText) {\n        var result = {\n            startLine: startLine,\n            endLine: endLine\n        };\n        if (Is.defined(startCharacter)) {\n            result.startCharacter = startCharacter;\n        }\n        if (Is.defined(endCharacter)) {\n            result.endCharacter = endCharacter;\n        }\n        if (Is.defined(kind)) {\n            result.kind = kind;\n        }\n        if (Is.defined(collapsedText)) {\n            result.collapsedText = collapsedText;\n        }\n        return result;\n    }\n    FoldingRange.create = create;\n    /**\n     * Checks whether the given literal conforms to the [FoldingRange](#FoldingRange) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate) && Is.uinteger(candidate.startLine) && Is.uinteger(candidate.startLine)\n            && (Is.undefined(candidate.startCharacter) || Is.uinteger(candidate.startCharacter))\n            && (Is.undefined(candidate.endCharacter) || Is.uinteger(candidate.endCharacter))\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\n    }\n    FoldingRange.is = is;\n})(FoldingRange || (FoldingRange = {}));\n/**\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\n * [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) literals.\n */\nexport var DiagnosticRelatedInformation;\n(function (DiagnosticRelatedInformation) {\n    /**\n     * Creates a new DiagnosticRelatedInformation literal.\n     */\n    function create(location, message) {\n        return {\n            location: location,\n            message: message\n        };\n    }\n    DiagnosticRelatedInformation.create = create;\n    /**\n     * Checks whether the given literal conforms to the [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\n    }\n    DiagnosticRelatedInformation.is = is;\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\n/**\n * The diagnostic's severity.\n */\nexport var DiagnosticSeverity;\n(function (DiagnosticSeverity) {\n    /**\n     * Reports an error.\n     */\n    DiagnosticSeverity.Error = 1;\n    /**\n     * Reports a warning.\n     */\n    DiagnosticSeverity.Warning = 2;\n    /**\n     * Reports an information.\n     */\n    DiagnosticSeverity.Information = 3;\n    /**\n     * Reports a hint.\n     */\n    DiagnosticSeverity.Hint = 4;\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\n/**\n * The diagnostic tags.\n *\n * @since 3.15.0\n */\nexport var DiagnosticTag;\n(function (DiagnosticTag) {\n    /**\n     * Unused or unnecessary code.\n     *\n     * Clients are allowed to render diagnostics with this tag faded out instead of having\n     * an error squiggle.\n     */\n    DiagnosticTag.Unnecessary = 1;\n    /**\n     * Deprecated or obsolete code.\n     *\n     * Clients are allowed to rendered diagnostics with this tag strike through.\n     */\n    DiagnosticTag.Deprecated = 2;\n})(DiagnosticTag || (DiagnosticTag = {}));\n/**\n * The CodeDescription namespace provides functions to deal with descriptions for diagnostic codes.\n *\n * @since 3.16.0\n */\nexport var CodeDescription;\n(function (CodeDescription) {\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate) && Is.string(candidate.href);\n    }\n    CodeDescription.is = is;\n})(CodeDescription || (CodeDescription = {}));\n/**\n * The Diagnostic namespace provides helper functions to work with\n * [Diagnostic](#Diagnostic) literals.\n */\nexport var Diagnostic;\n(function (Diagnostic) {\n    /**\n     * Creates a new Diagnostic literal.\n     */\n    function create(range, message, severity, code, source, relatedInformation) {\n        var result = { range: range, message: message };\n        if (Is.defined(severity)) {\n            result.severity = severity;\n        }\n        if (Is.defined(code)) {\n            result.code = code;\n        }\n        if (Is.defined(source)) {\n            result.source = source;\n        }\n        if (Is.defined(relatedInformation)) {\n            result.relatedInformation = relatedInformation;\n        }\n        return result;\n    }\n    Diagnostic.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\n     */\n    function is(value) {\n        var _a;\n        var candidate = value;\n        return Is.defined(candidate)\n            && Range.is(candidate.range)\n            && Is.string(candidate.message)\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\n            && (Is.integer(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\n            && (Is.undefined(candidate.codeDescription) || (Is.string((_a = candidate.codeDescription) === null || _a === void 0 ? void 0 : _a.href)))\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\n    }\n    Diagnostic.is = is;\n})(Diagnostic || (Diagnostic = {}));\n/**\n * The Command namespace provides helper functions to work with\n * [Command](#Command) literals.\n */\nexport var Command;\n(function (Command) {\n    /**\n     * Creates a new Command literal.\n     */\n    function create(title, command) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var result = { title: title, command: command };\n        if (Is.defined(args) && args.length > 0) {\n            result.arguments = args;\n        }\n        return result;\n    }\n    Command.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\n    }\n    Command.is = is;\n})(Command || (Command = {}));\n/**\n * The TextEdit namespace provides helper function to create replace,\n * insert and delete edits more easily.\n */\nexport var TextEdit;\n(function (TextEdit) {\n    /**\n     * Creates a replace text edit.\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     */\n    function replace(range, newText) {\n        return { range: range, newText: newText };\n    }\n    TextEdit.replace = replace;\n    /**\n     * Creates a insert text edit.\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     */\n    function insert(position, newText) {\n        return { range: { start: position, end: position }, newText: newText };\n    }\n    TextEdit.insert = insert;\n    /**\n     * Creates a delete text edit.\n     * @param range The range of text to be deleted.\n     */\n    function del(range) {\n        return { range: range, newText: '' };\n    }\n    TextEdit.del = del;\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate)\n            && Is.string(candidate.newText)\n            && Range.is(candidate.range);\n    }\n    TextEdit.is = is;\n})(TextEdit || (TextEdit = {}));\nexport var ChangeAnnotation;\n(function (ChangeAnnotation) {\n    function create(label, needsConfirmation, description) {\n        var result = { label: label };\n        if (needsConfirmation !== undefined) {\n            result.needsConfirmation = needsConfirmation;\n        }\n        if (description !== undefined) {\n            result.description = description;\n        }\n        return result;\n    }\n    ChangeAnnotation.create = create;\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate) && Is.string(candidate.label) &&\n            (Is.boolean(candidate.needsConfirmation) || candidate.needsConfirmation === undefined) &&\n            (Is.string(candidate.description) || candidate.description === undefined);\n    }\n    ChangeAnnotation.is = is;\n})(ChangeAnnotation || (ChangeAnnotation = {}));\nexport var ChangeAnnotationIdentifier;\n(function (ChangeAnnotationIdentifier) {\n    function is(value) {\n        var candidate = value;\n        return Is.string(candidate);\n    }\n    ChangeAnnotationIdentifier.is = is;\n})(ChangeAnnotationIdentifier || (ChangeAnnotationIdentifier = {}));\nexport var AnnotatedTextEdit;\n(function (AnnotatedTextEdit) {\n    /**\n     * Creates an annotated replace text edit.\n     *\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     * @param annotation The annotation.\n     */\n    function replace(range, newText, annotation) {\n        return { range: range, newText: newText, annotationId: annotation };\n    }\n    AnnotatedTextEdit.replace = replace;\n    /**\n     * Creates an annotated insert text edit.\n     *\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     * @param annotation The annotation.\n     */\n    function insert(position, newText, annotation) {\n        return { range: { start: position, end: position }, newText: newText, annotationId: annotation };\n    }\n    AnnotatedTextEdit.insert = insert;\n    /**\n     * Creates an annotated delete text edit.\n     *\n     * @param range The range of text to be deleted.\n     * @param annotation The annotation.\n     */\n    function del(range, annotation) {\n        return { range: range, newText: '', annotationId: annotation };\n    }\n    AnnotatedTextEdit.del = del;\n    function is(value) {\n        var candidate = value;\n        return TextEdit.is(candidate) && (ChangeAnnotation.is(candidate.annotationId) || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    AnnotatedTextEdit.is = is;\n})(AnnotatedTextEdit || (AnnotatedTextEdit = {}));\n/**\n * The TextDocumentEdit namespace provides helper function to create\n * an edit that manipulates a text document.\n */\nexport var TextDocumentEdit;\n(function (TextDocumentEdit) {\n    /**\n     * Creates a new `TextDocumentEdit`\n     */\n    function create(textDocument, edits) {\n        return { textDocument: textDocument, edits: edits };\n    }\n    TextDocumentEdit.create = create;\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate)\n            && OptionalVersionedTextDocumentIdentifier.is(candidate.textDocument)\n            && Array.isArray(candidate.edits);\n    }\n    TextDocumentEdit.is = is;\n})(TextDocumentEdit || (TextDocumentEdit = {}));\nexport var CreateFile;\n(function (CreateFile) {\n    function create(uri, options, annotation) {\n        var result = {\n            kind: 'create',\n            uri: uri\n        };\n        if (options !== undefined && (options.overwrite !== undefined || options.ignoreIfExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    CreateFile.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate && candidate.kind === 'create' && Is.string(candidate.uri) && (candidate.options === undefined ||\n            ((candidate.options.overwrite === undefined || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === undefined || Is.boolean(candidate.options.ignoreIfExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    CreateFile.is = is;\n})(CreateFile || (CreateFile = {}));\nexport var RenameFile;\n(function (RenameFile) {\n    function create(oldUri, newUri, options, annotation) {\n        var result = {\n            kind: 'rename',\n            oldUri: oldUri,\n            newUri: newUri\n        };\n        if (options !== undefined && (options.overwrite !== undefined || options.ignoreIfExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    RenameFile.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate && candidate.kind === 'rename' && Is.string(candidate.oldUri) && Is.string(candidate.newUri) && (candidate.options === undefined ||\n            ((candidate.options.overwrite === undefined || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === undefined || Is.boolean(candidate.options.ignoreIfExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    RenameFile.is = is;\n})(RenameFile || (RenameFile = {}));\nexport var DeleteFile;\n(function (DeleteFile) {\n    function create(uri, options, annotation) {\n        var result = {\n            kind: 'delete',\n            uri: uri\n        };\n        if (options !== undefined && (options.recursive !== undefined || options.ignoreIfNotExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    DeleteFile.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate && candidate.kind === 'delete' && Is.string(candidate.uri) && (candidate.options === undefined ||\n            ((candidate.options.recursive === undefined || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === undefined || Is.boolean(candidate.options.ignoreIfNotExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    DeleteFile.is = is;\n})(DeleteFile || (DeleteFile = {}));\nexport var WorkspaceEdit;\n(function (WorkspaceEdit) {\n    function is(value) {\n        var candidate = value;\n        return candidate &&\n            (candidate.changes !== undefined || candidate.documentChanges !== undefined) &&\n            (candidate.documentChanges === undefined || candidate.documentChanges.every(function (change) {\n                if (Is.string(change.kind)) {\n                    return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\n                }\n                else {\n                    return TextDocumentEdit.is(change);\n                }\n            }));\n    }\n    WorkspaceEdit.is = is;\n})(WorkspaceEdit || (WorkspaceEdit = {}));\nvar TextEditChangeImpl = /** @class */ (function () {\n    function TextEditChangeImpl(edits, changeAnnotations) {\n        this.edits = edits;\n        this.changeAnnotations = changeAnnotations;\n    }\n    TextEditChangeImpl.prototype.insert = function (position, newText, annotation) {\n        var edit;\n        var id;\n        if (annotation === undefined) {\n            edit = TextEdit.insert(position, newText);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.insert(position, newText, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.insert(position, newText, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    };\n    TextEditChangeImpl.prototype.replace = function (range, newText, annotation) {\n        var edit;\n        var id;\n        if (annotation === undefined) {\n            edit = TextEdit.replace(range, newText);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.replace(range, newText, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.replace(range, newText, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    };\n    TextEditChangeImpl.prototype.delete = function (range, annotation) {\n        var edit;\n        var id;\n        if (annotation === undefined) {\n            edit = TextEdit.del(range);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.del(range, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.del(range, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    };\n    TextEditChangeImpl.prototype.add = function (edit) {\n        this.edits.push(edit);\n    };\n    TextEditChangeImpl.prototype.all = function () {\n        return this.edits;\n    };\n    TextEditChangeImpl.prototype.clear = function () {\n        this.edits.splice(0, this.edits.length);\n    };\n    TextEditChangeImpl.prototype.assertChangeAnnotations = function (value) {\n        if (value === undefined) {\n            throw new Error(\"Text edit change is not configured to manage change annotations.\");\n        }\n    };\n    return TextEditChangeImpl;\n}());\n/**\n * A helper class\n */\nvar ChangeAnnotations = /** @class */ (function () {\n    function ChangeAnnotations(annotations) {\n        this._annotations = annotations === undefined ? Object.create(null) : annotations;\n        this._counter = 0;\n        this._size = 0;\n    }\n    ChangeAnnotations.prototype.all = function () {\n        return this._annotations;\n    };\n    Object.defineProperty(ChangeAnnotations.prototype, \"size\", {\n        get: function () {\n            return this._size;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ChangeAnnotations.prototype.manage = function (idOrAnnotation, annotation) {\n        var id;\n        if (ChangeAnnotationIdentifier.is(idOrAnnotation)) {\n            id = idOrAnnotation;\n        }\n        else {\n            id = this.nextId();\n            annotation = idOrAnnotation;\n        }\n        if (this._annotations[id] !== undefined) {\n            throw new Error(\"Id \".concat(id, \" is already in use.\"));\n        }\n        if (annotation === undefined) {\n            throw new Error(\"No annotation provided for id \".concat(id));\n        }\n        this._annotations[id] = annotation;\n        this._size++;\n        return id;\n    };\n    ChangeAnnotations.prototype.nextId = function () {\n        this._counter++;\n        return this._counter.toString();\n    };\n    return ChangeAnnotations;\n}());\n/**\n * A workspace change helps constructing changes to a workspace.\n */\nvar WorkspaceChange = /** @class */ (function () {\n    function WorkspaceChange(workspaceEdit) {\n        var _this = this;\n        this._textEditChanges = Object.create(null);\n        if (workspaceEdit !== undefined) {\n            this._workspaceEdit = workspaceEdit;\n            if (workspaceEdit.documentChanges) {\n                this._changeAnnotations = new ChangeAnnotations(workspaceEdit.changeAnnotations);\n                workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n                workspaceEdit.documentChanges.forEach(function (change) {\n                    if (TextDocumentEdit.is(change)) {\n                        var textEditChange = new TextEditChangeImpl(change.edits, _this._changeAnnotations);\n                        _this._textEditChanges[change.textDocument.uri] = textEditChange;\n                    }\n                });\n            }\n            else if (workspaceEdit.changes) {\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\n                    _this._textEditChanges[key] = textEditChange;\n                });\n            }\n        }\n        else {\n            this._workspaceEdit = {};\n        }\n    }\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\n        /**\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\n         * use to be returned from a workspace edit operation like rename.\n         */\n        get: function () {\n            this.initDocumentChanges();\n            if (this._changeAnnotations !== undefined) {\n                if (this._changeAnnotations.size === 0) {\n                    this._workspaceEdit.changeAnnotations = undefined;\n                }\n                else {\n                    this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n                }\n            }\n            return this._workspaceEdit;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\n        if (OptionalVersionedTextDocumentIdentifier.is(key)) {\n            this.initDocumentChanges();\n            if (this._workspaceEdit.documentChanges === undefined) {\n                throw new Error('Workspace edit is not configured for document changes.');\n            }\n            var textDocument = { uri: key.uri, version: key.version };\n            var result = this._textEditChanges[textDocument.uri];\n            if (!result) {\n                var edits = [];\n                var textDocumentEdit = {\n                    textDocument: textDocument,\n                    edits: edits\n                };\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\n                result = new TextEditChangeImpl(edits, this._changeAnnotations);\n                this._textEditChanges[textDocument.uri] = result;\n            }\n            return result;\n        }\n        else {\n            this.initChanges();\n            if (this._workspaceEdit.changes === undefined) {\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\n            }\n            var result = this._textEditChanges[key];\n            if (!result) {\n                var edits = [];\n                this._workspaceEdit.changes[key] = edits;\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[key] = result;\n            }\n            return result;\n        }\n    };\n    WorkspaceChange.prototype.initDocumentChanges = function () {\n        if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {\n            this._changeAnnotations = new ChangeAnnotations();\n            this._workspaceEdit.documentChanges = [];\n            this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n        }\n    };\n    WorkspaceChange.prototype.initChanges = function () {\n        if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {\n            this._workspaceEdit.changes = Object.create(null);\n        }\n    };\n    WorkspaceChange.prototype.createFile = function (uri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        var annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        var operation;\n        var id;\n        if (annotation === undefined) {\n            operation = CreateFile.create(uri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = CreateFile.create(uri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    };\n    WorkspaceChange.prototype.renameFile = function (oldUri, newUri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        var annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        var operation;\n        var id;\n        if (annotation === undefined) {\n            operation = RenameFile.create(oldUri, newUri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = RenameFile.create(oldUri, newUri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    };\n    WorkspaceChange.prototype.deleteFile = function (uri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        var annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        var operation;\n        var id;\n        if (annotation === undefined) {\n            operation = DeleteFile.create(uri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = DeleteFile.create(uri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    };\n    return WorkspaceChange;\n}());\nexport { WorkspaceChange };\n/**\n * The TextDocumentIdentifier namespace provides helper functions to work with\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\n */\nexport var TextDocumentIdentifier;\n(function (TextDocumentIdentifier) {\n    /**\n     * Creates a new TextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     */\n    function create(uri) {\n        return { uri: uri };\n    }\n    TextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri);\n    }\n    TextDocumentIdentifier.is = is;\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\n/**\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\n */\nexport var VersionedTextDocumentIdentifier;\n(function (VersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new VersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param version The document's version.\n     */\n    function create(uri, version) {\n        return { uri: uri, version: version };\n    }\n    VersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.integer(candidate.version);\n    }\n    VersionedTextDocumentIdentifier.is = is;\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\n/**\n * The OptionalVersionedTextDocumentIdentifier namespace provides helper functions to work with\n * [OptionalVersionedTextDocumentIdentifier](#OptionalVersionedTextDocumentIdentifier) literals.\n */\nexport var OptionalVersionedTextDocumentIdentifier;\n(function (OptionalVersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new OptionalVersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param version The document's version.\n     */\n    function create(uri, version) {\n        return { uri: uri, version: version };\n    }\n    OptionalVersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [OptionalVersionedTextDocumentIdentifier](#OptionalVersionedTextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.integer(candidate.version));\n    }\n    OptionalVersionedTextDocumentIdentifier.is = is;\n})(OptionalVersionedTextDocumentIdentifier || (OptionalVersionedTextDocumentIdentifier = {}));\n/**\n * The TextDocumentItem namespace provides helper functions to work with\n * [TextDocumentItem](#TextDocumentItem) literals.\n */\nexport var TextDocumentItem;\n(function (TextDocumentItem) {\n    /**\n     * Creates a new TextDocumentItem literal.\n     * @param uri The document's uri.\n     * @param languageId The document's language identifier.\n     * @param version The document's version number.\n     * @param text The document's text.\n     */\n    function create(uri, languageId, version, text) {\n        return { uri: uri, languageId: languageId, version: version, text: text };\n    }\n    TextDocumentItem.create = create;\n    /**\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.integer(candidate.version) && Is.string(candidate.text);\n    }\n    TextDocumentItem.is = is;\n})(TextDocumentItem || (TextDocumentItem = {}));\n/**\n * Describes the content type that a client supports in various\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n *\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\n * are reserved for internal usage.\n */\nexport var MarkupKind;\n(function (MarkupKind) {\n    /**\n     * Plain text is supported as a content format\n     */\n    MarkupKind.PlainText = 'plaintext';\n    /**\n     * Markdown is supported as a content format\n     */\n    MarkupKind.Markdown = 'markdown';\n    /**\n     * Checks whether the given value is a value of the [MarkupKind](#MarkupKind) type.\n     */\n    function is(value) {\n        var candidate = value;\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\n    }\n    MarkupKind.is = is;\n})(MarkupKind || (MarkupKind = {}));\nexport var MarkupContent;\n(function (MarkupContent) {\n    /**\n     * Checks whether the given value conforms to the [MarkupContent](#MarkupContent) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\n    }\n    MarkupContent.is = is;\n})(MarkupContent || (MarkupContent = {}));\n/**\n * The kind of a completion entry.\n */\nexport var CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind.Text = 1;\n    CompletionItemKind.Method = 2;\n    CompletionItemKind.Function = 3;\n    CompletionItemKind.Constructor = 4;\n    CompletionItemKind.Field = 5;\n    CompletionItemKind.Variable = 6;\n    CompletionItemKind.Class = 7;\n    CompletionItemKind.Interface = 8;\n    CompletionItemKind.Module = 9;\n    CompletionItemKind.Property = 10;\n    CompletionItemKind.Unit = 11;\n    CompletionItemKind.Value = 12;\n    CompletionItemKind.Enum = 13;\n    CompletionItemKind.Keyword = 14;\n    CompletionItemKind.Snippet = 15;\n    CompletionItemKind.Color = 16;\n    CompletionItemKind.File = 17;\n    CompletionItemKind.Reference = 18;\n    CompletionItemKind.Folder = 19;\n    CompletionItemKind.EnumMember = 20;\n    CompletionItemKind.Constant = 21;\n    CompletionItemKind.Struct = 22;\n    CompletionItemKind.Event = 23;\n    CompletionItemKind.Operator = 24;\n    CompletionItemKind.TypeParameter = 25;\n})(CompletionItemKind || (CompletionItemKind = {}));\n/**\n * Defines whether the insert text in a completion item should be interpreted as\n * plain text or a snippet.\n */\nexport var InsertTextFormat;\n(function (InsertTextFormat) {\n    /**\n     * The primary text to be inserted is treated as a plain string.\n     */\n    InsertTextFormat.PlainText = 1;\n    /**\n     * The primary text to be inserted is treated as a snippet.\n     *\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\n     * the end of the snippet. Placeholders with equal identifiers are linked,\n     * that is typing in one will update others too.\n     *\n     * See also: https://microsoft.github.io/language-server-protocol/specifications/specification-current/#snippet_syntax\n     */\n    InsertTextFormat.Snippet = 2;\n})(InsertTextFormat || (InsertTextFormat = {}));\n/**\n * Completion item tags are extra annotations that tweak the rendering of a completion\n * item.\n *\n * @since 3.15.0\n */\nexport var CompletionItemTag;\n(function (CompletionItemTag) {\n    /**\n     * Render a completion as obsolete, usually using a strike-out.\n     */\n    CompletionItemTag.Deprecated = 1;\n})(CompletionItemTag || (CompletionItemTag = {}));\n/**\n * The InsertReplaceEdit namespace provides functions to deal with insert / replace edits.\n *\n * @since 3.16.0\n */\nexport var InsertReplaceEdit;\n(function (InsertReplaceEdit) {\n    /**\n     * Creates a new insert / replace edit\n     */\n    function create(newText, insert, replace) {\n        return { newText: newText, insert: insert, replace: replace };\n    }\n    InsertReplaceEdit.create = create;\n    /**\n     * Checks whether the given literal conforms to the [InsertReplaceEdit](#InsertReplaceEdit) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return candidate && Is.string(candidate.newText) && Range.is(candidate.insert) && Range.is(candidate.replace);\n    }\n    InsertReplaceEdit.is = is;\n})(InsertReplaceEdit || (InsertReplaceEdit = {}));\n/**\n * How whitespace and indentation is handled during completion\n * item insertion.\n *\n * @since 3.16.0\n */\nexport var InsertTextMode;\n(function (InsertTextMode) {\n    /**\n     * The insertion or replace strings is taken as it is. If the\n     * value is multi line the lines below the cursor will be\n     * inserted using the indentation defined in the string value.\n     * The client will not apply any kind of adjustments to the\n     * string.\n     */\n    InsertTextMode.asIs = 1;\n    /**\n     * The editor adjusts leading whitespace of new lines so that\n     * they match the indentation up to the cursor of the line for\n     * which the item is accepted.\n     *\n     * Consider a line like this: <2tabs><cursor><3tabs>foo. Accepting a\n     * multi line completion item is indented using 2 tabs and all\n     * following lines inserted will be indented using 2 tabs as well.\n     */\n    InsertTextMode.adjustIndentation = 2;\n})(InsertTextMode || (InsertTextMode = {}));\nexport var CompletionItemLabelDetails;\n(function (CompletionItemLabelDetails) {\n    function is(value) {\n        var candidate = value;\n        return candidate && (Is.string(candidate.detail) || candidate.detail === undefined) &&\n            (Is.string(candidate.description) || candidate.description === undefined);\n    }\n    CompletionItemLabelDetails.is = is;\n})(CompletionItemLabelDetails || (CompletionItemLabelDetails = {}));\n/**\n * The CompletionItem namespace provides functions to deal with\n * completion items.\n */\nexport var CompletionItem;\n(function (CompletionItem) {\n    /**\n     * Create a completion item and seed it with a label.\n     * @param label The completion item's label\n     */\n    function create(label) {\n        return { label: label };\n    }\n    CompletionItem.create = create;\n})(CompletionItem || (CompletionItem = {}));\n/**\n * The CompletionList namespace provides functions to deal with\n * completion lists.\n */\nexport var CompletionList;\n(function (CompletionList) {\n    /**\n     * Creates a new completion list.\n     *\n     * @param items The completion items.\n     * @param isIncomplete The list is not complete.\n     */\n    function create(items, isIncomplete) {\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\n    }\n    CompletionList.create = create;\n})(CompletionList || (CompletionList = {}));\nexport var MarkedString;\n(function (MarkedString) {\n    /**\n     * Creates a marked string from plain text.\n     *\n     * @param plainText The plain text.\n     */\n    function fromPlainText(plainText) {\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&'); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    }\n    MarkedString.fromPlainText = fromPlainText;\n    /**\n     * Checks whether the given value conforms to the [MarkedString](#MarkedString) type.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\n    }\n    MarkedString.is = is;\n})(MarkedString || (MarkedString = {}));\nexport var Hover;\n(function (Hover) {\n    /**\n     * Checks whether the given value conforms to the [Hover](#Hover) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\n            MarkedString.is(candidate.contents) ||\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === undefined || Range.is(value.range));\n    }\n    Hover.is = is;\n})(Hover || (Hover = {}));\n/**\n * The ParameterInformation namespace provides helper functions to work with\n * [ParameterInformation](#ParameterInformation) literals.\n */\nexport var ParameterInformation;\n(function (ParameterInformation) {\n    /**\n     * Creates a new parameter information literal.\n     *\n     * @param label A label string.\n     * @param documentation A doc string.\n     */\n    function create(label, documentation) {\n        return documentation ? { label: label, documentation: documentation } : { label: label };\n    }\n    ParameterInformation.create = create;\n})(ParameterInformation || (ParameterInformation = {}));\n/**\n * The SignatureInformation namespace provides helper functions to work with\n * [SignatureInformation](#SignatureInformation) literals.\n */\nexport var SignatureInformation;\n(function (SignatureInformation) {\n    function create(label, documentation) {\n        var parameters = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            parameters[_i - 2] = arguments[_i];\n        }\n        var result = { label: label };\n        if (Is.defined(documentation)) {\n            result.documentation = documentation;\n        }\n        if (Is.defined(parameters)) {\n            result.parameters = parameters;\n        }\n        else {\n            result.parameters = [];\n        }\n        return result;\n    }\n    SignatureInformation.create = create;\n})(SignatureInformation || (SignatureInformation = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrence.\n     */\n    DocumentHighlightKind.Text = 1;\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind.Read = 2;\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind.Write = 3;\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * DocumentHighlight namespace to provide helper functions to work with\n * [DocumentHighlight](#DocumentHighlight) literals.\n */\nexport var DocumentHighlight;\n(function (DocumentHighlight) {\n    /**\n     * Create a DocumentHighlight object.\n     * @param range The range the highlight applies to.\n     * @param kind The highlight kind\n     */\n    function create(range, kind) {\n        var result = { range: range };\n        if (Is.number(kind)) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    DocumentHighlight.create = create;\n})(DocumentHighlight || (DocumentHighlight = {}));\n/**\n * A symbol kind.\n */\nexport var SymbolKind;\n(function (SymbolKind) {\n    SymbolKind.File = 1;\n    SymbolKind.Module = 2;\n    SymbolKind.Namespace = 3;\n    SymbolKind.Package = 4;\n    SymbolKind.Class = 5;\n    SymbolKind.Method = 6;\n    SymbolKind.Property = 7;\n    SymbolKind.Field = 8;\n    SymbolKind.Constructor = 9;\n    SymbolKind.Enum = 10;\n    SymbolKind.Interface = 11;\n    SymbolKind.Function = 12;\n    SymbolKind.Variable = 13;\n    SymbolKind.Constant = 14;\n    SymbolKind.String = 15;\n    SymbolKind.Number = 16;\n    SymbolKind.Boolean = 17;\n    SymbolKind.Array = 18;\n    SymbolKind.Object = 19;\n    SymbolKind.Key = 20;\n    SymbolKind.Null = 21;\n    SymbolKind.EnumMember = 22;\n    SymbolKind.Struct = 23;\n    SymbolKind.Event = 24;\n    SymbolKind.Operator = 25;\n    SymbolKind.TypeParameter = 26;\n})(SymbolKind || (SymbolKind = {}));\n/**\n * Symbol tags are extra annotations that tweak the rendering of a symbol.\n * @since 3.16\n */\nexport var SymbolTag;\n(function (SymbolTag) {\n    /**\n     * Render a symbol as obsolete, usually using a strike-out.\n     */\n    SymbolTag.Deprecated = 1;\n})(SymbolTag || (SymbolTag = {}));\nexport var SymbolInformation;\n(function (SymbolInformation) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the location of the symbol.\n     * @param uri The resource of the location of symbol.\n     * @param containerName The name of the symbol containing the symbol.\n     */\n    function create(name, kind, range, uri, containerName) {\n        var result = {\n            name: name,\n            kind: kind,\n            location: { uri: uri, range: range }\n        };\n        if (containerName) {\n            result.containerName = containerName;\n        }\n        return result;\n    }\n    SymbolInformation.create = create;\n})(SymbolInformation || (SymbolInformation = {}));\nexport var WorkspaceSymbol;\n(function (WorkspaceSymbol) {\n    /**\n     * Create a new workspace symbol.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param uri The resource of the location of the symbol.\n     * @param range An options range of the location.\n     * @returns A WorkspaceSymbol.\n     */\n    function create(name, kind, uri, range) {\n        return range !== undefined\n            ? { name: name, kind: kind, location: { uri: uri, range: range } }\n            : { name: name, kind: kind, location: { uri: uri } };\n    }\n    WorkspaceSymbol.create = create;\n})(WorkspaceSymbol || (WorkspaceSymbol = {}));\nexport var DocumentSymbol;\n(function (DocumentSymbol) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param detail The detail of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the symbol.\n     * @param selectionRange The selectionRange of the symbol.\n     * @param children Children of the symbol.\n     */\n    function create(name, detail, kind, range, selectionRange, children) {\n        var result = {\n            name: name,\n            detail: detail,\n            kind: kind,\n            range: range,\n            selectionRange: selectionRange\n        };\n        if (children !== undefined) {\n            result.children = children;\n        }\n        return result;\n    }\n    DocumentSymbol.create = create;\n    /**\n     * Checks whether the given literal conforms to the [DocumentSymbol](#DocumentSymbol) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return candidate &&\n            Is.string(candidate.name) && Is.number(candidate.kind) &&\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\n            (candidate.detail === undefined || Is.string(candidate.detail)) &&\n            (candidate.deprecated === undefined || Is.boolean(candidate.deprecated)) &&\n            (candidate.children === undefined || Array.isArray(candidate.children)) &&\n            (candidate.tags === undefined || Array.isArray(candidate.tags));\n    }\n    DocumentSymbol.is = is;\n})(DocumentSymbol || (DocumentSymbol = {}));\n/**\n * A set of predefined code action kinds\n */\nexport var CodeActionKind;\n(function (CodeActionKind) {\n    /**\n     * Empty kind.\n     */\n    CodeActionKind.Empty = '';\n    /**\n     * Base kind for quickfix actions: 'quickfix'\n     */\n    CodeActionKind.QuickFix = 'quickfix';\n    /**\n     * Base kind for refactoring actions: 'refactor'\n     */\n    CodeActionKind.Refactor = 'refactor';\n    /**\n     * Base kind for refactoring extraction actions: 'refactor.extract'\n     *\n     * Example extract actions:\n     *\n     * - Extract method\n     * - Extract function\n     * - Extract variable\n     * - Extract interface from class\n     * - ...\n     */\n    CodeActionKind.RefactorExtract = 'refactor.extract';\n    /**\n     * Base kind for refactoring inline actions: 'refactor.inline'\n     *\n     * Example inline actions:\n     *\n     * - Inline function\n     * - Inline variable\n     * - Inline constant\n     * - ...\n     */\n    CodeActionKind.RefactorInline = 'refactor.inline';\n    /**\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\n     *\n     * Example rewrite actions:\n     *\n     * - Convert JavaScript function to class\n     * - Add or remove parameter\n     * - Encapsulate field\n     * - Make method static\n     * - Move method to base class\n     * - ...\n     */\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\n    /**\n     * Base kind for source actions: `source`\n     *\n     * Source code actions apply to the entire file.\n     */\n    CodeActionKind.Source = 'source';\n    /**\n     * Base kind for an organize imports source action: `source.organizeImports`\n     */\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\n    /**\n     * Base kind for auto-fix source actions: `source.fixAll`.\n     *\n     * Fix all actions automatically fix errors that have a clear fix that do not require user input.\n     * They should not suppress errors or perform unsafe fixes such as generating new types or classes.\n     *\n     * @since 3.15.0\n     */\n    CodeActionKind.SourceFixAll = 'source.fixAll';\n})(CodeActionKind || (CodeActionKind = {}));\n/**\n * The reason why code actions were requested.\n *\n * @since 3.17.0\n */\nexport var CodeActionTriggerKind;\n(function (CodeActionTriggerKind) {\n    /**\n     * Code actions were explicitly requested by the user or by an extension.\n     */\n    CodeActionTriggerKind.Invoked = 1;\n    /**\n     * Code actions were requested automatically.\n     *\n     * This typically happens when current selection in a file changes, but can\n     * also be triggered when file content changes.\n     */\n    CodeActionTriggerKind.Automatic = 2;\n})(CodeActionTriggerKind || (CodeActionTriggerKind = {}));\n/**\n * The CodeActionContext namespace provides helper functions to work with\n * [CodeActionContext](#CodeActionContext) literals.\n */\nexport var CodeActionContext;\n(function (CodeActionContext) {\n    /**\n     * Creates a new CodeActionContext literal.\n     */\n    function create(diagnostics, only, triggerKind) {\n        var result = { diagnostics: diagnostics };\n        if (only !== undefined && only !== null) {\n            result.only = only;\n        }\n        if (triggerKind !== undefined && triggerKind !== null) {\n            result.triggerKind = triggerKind;\n        }\n        return result;\n    }\n    CodeActionContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is)\n            && (candidate.only === undefined || Is.typedArray(candidate.only, Is.string))\n            && (candidate.triggerKind === undefined || candidate.triggerKind === CodeActionTriggerKind.Invoked || candidate.triggerKind === CodeActionTriggerKind.Automatic);\n    }\n    CodeActionContext.is = is;\n})(CodeActionContext || (CodeActionContext = {}));\nexport var CodeAction;\n(function (CodeAction) {\n    function create(title, kindOrCommandOrEdit, kind) {\n        var result = { title: title };\n        var checkKind = true;\n        if (typeof kindOrCommandOrEdit === 'string') {\n            checkKind = false;\n            result.kind = kindOrCommandOrEdit;\n        }\n        else if (Command.is(kindOrCommandOrEdit)) {\n            result.command = kindOrCommandOrEdit;\n        }\n        else {\n            result.edit = kindOrCommandOrEdit;\n        }\n        if (checkKind && kind !== undefined) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    CodeAction.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate && Is.string(candidate.title) &&\n            (candidate.diagnostics === undefined || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\n            (candidate.kind === undefined || Is.string(candidate.kind)) &&\n            (candidate.edit !== undefined || candidate.command !== undefined) &&\n            (candidate.command === undefined || Command.is(candidate.command)) &&\n            (candidate.isPreferred === undefined || Is.boolean(candidate.isPreferred)) &&\n            (candidate.edit === undefined || WorkspaceEdit.is(candidate.edit));\n    }\n    CodeAction.is = is;\n})(CodeAction || (CodeAction = {}));\n/**\n * The CodeLens namespace provides helper functions to work with\n * [CodeLens](#CodeLens) literals.\n */\nexport var CodeLens;\n(function (CodeLens) {\n    /**\n     * Creates a new CodeLens literal.\n     */\n    function create(range, data) {\n        var result = { range: range };\n        if (Is.defined(data)) {\n            result.data = data;\n        }\n        return result;\n    }\n    CodeLens.create = create;\n    /**\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\n    }\n    CodeLens.is = is;\n})(CodeLens || (CodeLens = {}));\n/**\n * The FormattingOptions namespace provides helper functions to work with\n * [FormattingOptions](#FormattingOptions) literals.\n */\nexport var FormattingOptions;\n(function (FormattingOptions) {\n    /**\n     * Creates a new FormattingOptions literal.\n     */\n    function create(tabSize, insertSpaces) {\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\n    }\n    FormattingOptions.create = create;\n    /**\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.uinteger(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\n    }\n    FormattingOptions.is = is;\n})(FormattingOptions || (FormattingOptions = {}));\n/**\n * The DocumentLink namespace provides helper functions to work with\n * [DocumentLink](#DocumentLink) literals.\n */\nexport var DocumentLink;\n(function (DocumentLink) {\n    /**\n     * Creates a new DocumentLink literal.\n     */\n    function create(range, target, data) {\n        return { range: range, target: target, data: data };\n    }\n    DocumentLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\n    }\n    DocumentLink.is = is;\n})(DocumentLink || (DocumentLink = {}));\n/**\n * The SelectionRange namespace provides helper function to work with\n * SelectionRange literals.\n */\nexport var SelectionRange;\n(function (SelectionRange) {\n    /**\n     * Creates a new SelectionRange\n     * @param range the range.\n     * @param parent an optional parent.\n     */\n    function create(range, parent) {\n        return { range: range, parent: parent };\n    }\n    SelectionRange.create = create;\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.range) && (candidate.parent === undefined || SelectionRange.is(candidate.parent));\n    }\n    SelectionRange.is = is;\n})(SelectionRange || (SelectionRange = {}));\n/**\n * A set of predefined token types. This set is not fixed\n * an clients can specify additional token types via the\n * corresponding client capabilities.\n *\n * @since 3.16.0\n */\nexport var SemanticTokenTypes;\n(function (SemanticTokenTypes) {\n    SemanticTokenTypes[\"namespace\"] = \"namespace\";\n    /**\n     * Represents a generic type. Acts as a fallback for types which can't be mapped to\n     * a specific type like class or enum.\n     */\n    SemanticTokenTypes[\"type\"] = \"type\";\n    SemanticTokenTypes[\"class\"] = \"class\";\n    SemanticTokenTypes[\"enum\"] = \"enum\";\n    SemanticTokenTypes[\"interface\"] = \"interface\";\n    SemanticTokenTypes[\"struct\"] = \"struct\";\n    SemanticTokenTypes[\"typeParameter\"] = \"typeParameter\";\n    SemanticTokenTypes[\"parameter\"] = \"parameter\";\n    SemanticTokenTypes[\"variable\"] = \"variable\";\n    SemanticTokenTypes[\"property\"] = \"property\";\n    SemanticTokenTypes[\"enumMember\"] = \"enumMember\";\n    SemanticTokenTypes[\"event\"] = \"event\";\n    SemanticTokenTypes[\"function\"] = \"function\";\n    SemanticTokenTypes[\"method\"] = \"method\";\n    SemanticTokenTypes[\"macro\"] = \"macro\";\n    SemanticTokenTypes[\"keyword\"] = \"keyword\";\n    SemanticTokenTypes[\"modifier\"] = \"modifier\";\n    SemanticTokenTypes[\"comment\"] = \"comment\";\n    SemanticTokenTypes[\"string\"] = \"string\";\n    SemanticTokenTypes[\"number\"] = \"number\";\n    SemanticTokenTypes[\"regexp\"] = \"regexp\";\n    SemanticTokenTypes[\"operator\"] = \"operator\";\n    /**\n     * @since 3.17.0\n     */\n    SemanticTokenTypes[\"decorator\"] = \"decorator\";\n})(SemanticTokenTypes || (SemanticTokenTypes = {}));\n/**\n * A set of predefined token modifiers. This set is not fixed\n * an clients can specify additional token types via the\n * corresponding client capabilities.\n *\n * @since 3.16.0\n */\nexport var SemanticTokenModifiers;\n(function (SemanticTokenModifiers) {\n    SemanticTokenModifiers[\"declaration\"] = \"declaration\";\n    SemanticTokenModifiers[\"definition\"] = \"definition\";\n    SemanticTokenModifiers[\"readonly\"] = \"readonly\";\n    SemanticTokenModifiers[\"static\"] = \"static\";\n    SemanticTokenModifiers[\"deprecated\"] = \"deprecated\";\n    SemanticTokenModifiers[\"abstract\"] = \"abstract\";\n    SemanticTokenModifiers[\"async\"] = \"async\";\n    SemanticTokenModifiers[\"modification\"] = \"modification\";\n    SemanticTokenModifiers[\"documentation\"] = \"documentation\";\n    SemanticTokenModifiers[\"defaultLibrary\"] = \"defaultLibrary\";\n})(SemanticTokenModifiers || (SemanticTokenModifiers = {}));\n/**\n * @since 3.16.0\n */\nexport var SemanticTokens;\n(function (SemanticTokens) {\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate) && (candidate.resultId === undefined || typeof candidate.resultId === 'string') &&\n            Array.isArray(candidate.data) && (candidate.data.length === 0 || typeof candidate.data[0] === 'number');\n    }\n    SemanticTokens.is = is;\n})(SemanticTokens || (SemanticTokens = {}));\n/**\n * The InlineValueText namespace provides functions to deal with InlineValueTexts.\n *\n * @since 3.17.0\n */\nexport var InlineValueText;\n(function (InlineValueText) {\n    /**\n     * Creates a new InlineValueText literal.\n     */\n    function create(range, text) {\n        return { range: range, text: text };\n    }\n    InlineValueText.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate !== undefined && candidate !== null && Range.is(candidate.range) && Is.string(candidate.text);\n    }\n    InlineValueText.is = is;\n})(InlineValueText || (InlineValueText = {}));\n/**\n * The InlineValueVariableLookup namespace provides functions to deal with InlineValueVariableLookups.\n *\n * @since 3.17.0\n */\nexport var InlineValueVariableLookup;\n(function (InlineValueVariableLookup) {\n    /**\n     * Creates a new InlineValueText literal.\n     */\n    function create(range, variableName, caseSensitiveLookup) {\n        return { range: range, variableName: variableName, caseSensitiveLookup: caseSensitiveLookup };\n    }\n    InlineValueVariableLookup.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate !== undefined && candidate !== null && Range.is(candidate.range) && Is.boolean(candidate.caseSensitiveLookup)\n            && (Is.string(candidate.variableName) || candidate.variableName === undefined);\n    }\n    InlineValueVariableLookup.is = is;\n})(InlineValueVariableLookup || (InlineValueVariableLookup = {}));\n/**\n * The InlineValueEvaluatableExpression namespace provides functions to deal with InlineValueEvaluatableExpression.\n *\n * @since 3.17.0\n */\nexport var InlineValueEvaluatableExpression;\n(function (InlineValueEvaluatableExpression) {\n    /**\n     * Creates a new InlineValueEvaluatableExpression literal.\n     */\n    function create(range, expression) {\n        return { range: range, expression: expression };\n    }\n    InlineValueEvaluatableExpression.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate !== undefined && candidate !== null && Range.is(candidate.range)\n            && (Is.string(candidate.expression) || candidate.expression === undefined);\n    }\n    InlineValueEvaluatableExpression.is = is;\n})(InlineValueEvaluatableExpression || (InlineValueEvaluatableExpression = {}));\n/**\n * The InlineValueContext namespace provides helper functions to work with\n * [InlineValueContext](#InlineValueContext) literals.\n *\n * @since 3.17.0\n */\nexport var InlineValueContext;\n(function (InlineValueContext) {\n    /**\n     * Creates a new InlineValueContext literal.\n     */\n    function create(frameId, stoppedLocation) {\n        return { frameId: frameId, stoppedLocation: stoppedLocation };\n    }\n    InlineValueContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the [InlineValueContext](#InlineValueContext) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(value.stoppedLocation);\n    }\n    InlineValueContext.is = is;\n})(InlineValueContext || (InlineValueContext = {}));\n/**\n * Inlay hint kinds.\n *\n * @since 3.17.0\n */\nexport var InlayHintKind;\n(function (InlayHintKind) {\n    /**\n     * An inlay hint that for a type annotation.\n     */\n    InlayHintKind.Type = 1;\n    /**\n     * An inlay hint that is for a parameter.\n     */\n    InlayHintKind.Parameter = 2;\n    function is(value) {\n        return value === 1 || value === 2;\n    }\n    InlayHintKind.is = is;\n})(InlayHintKind || (InlayHintKind = {}));\nexport var InlayHintLabelPart;\n(function (InlayHintLabelPart) {\n    function create(value) {\n        return { value: value };\n    }\n    InlayHintLabelPart.create = create;\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate)\n            && (candidate.tooltip === undefined || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip))\n            && (candidate.location === undefined || Location.is(candidate.location))\n            && (candidate.command === undefined || Command.is(candidate.command));\n    }\n    InlayHintLabelPart.is = is;\n})(InlayHintLabelPart || (InlayHintLabelPart = {}));\nexport var InlayHint;\n(function (InlayHint) {\n    function create(position, label, kind) {\n        var result = { position: position, label: label };\n        if (kind !== undefined) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    InlayHint.create = create;\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate) && Position.is(candidate.position)\n            && (Is.string(candidate.label) || Is.typedArray(candidate.label, InlayHintLabelPart.is))\n            && (candidate.kind === undefined || InlayHintKind.is(candidate.kind))\n            && (candidate.textEdits === undefined) || Is.typedArray(candidate.textEdits, TextEdit.is)\n            && (candidate.tooltip === undefined || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip))\n            && (candidate.paddingLeft === undefined || Is.boolean(candidate.paddingLeft))\n            && (candidate.paddingRight === undefined || Is.boolean(candidate.paddingRight));\n    }\n    InlayHint.is = is;\n})(InlayHint || (InlayHint = {}));\nexport var WorkspaceFolder;\n(function (WorkspaceFolder) {\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate) && URI.is(candidate.uri) && Is.string(candidate.name);\n    }\n    WorkspaceFolder.is = is;\n})(WorkspaceFolder || (WorkspaceFolder = {}));\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\n/**\n * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\n */\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new ITextDocument literal from the given uri and content.\n     * @param uri The document's uri.\n     * @param languageId The document's language Id.\n     * @param version The document's version.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.uinteger(candidate.lineCount)\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\n    }\n    TextDocument.is = is;\n    function applyEdits(document, edits) {\n        var text = document.getText();\n        var sortedEdits = mergeSort(edits, function (a, b) {\n            var diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return diff;\n        });\n        var lastModifiedOffset = text.length;\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\n            var e = sortedEdits[i];\n            var startOffset = document.offsetAt(e.range.start);\n            var endOffset = document.offsetAt(e.range.end);\n            if (endOffset <= lastModifiedOffset) {\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\n            }\n            else {\n                throw new Error('Overlapping edit');\n            }\n            lastModifiedOffset = startOffset;\n        }\n        return text;\n    }\n    TextDocument.applyEdits = applyEdits;\n    function mergeSort(data, compare) {\n        if (data.length <= 1) {\n            // sorted\n            return data;\n        }\n        var p = (data.length / 2) | 0;\n        var left = data.slice(0, p);\n        var right = data.slice(p);\n        mergeSort(left, compare);\n        mergeSort(right, compare);\n        var leftIdx = 0;\n        var rightIdx = 0;\n        var i = 0;\n        while (leftIdx < left.length && rightIdx < right.length) {\n            var ret = compare(left[leftIdx], right[rightIdx]);\n            if (ret <= 0) {\n                // smaller_equal -> take left to preserve order\n                data[i++] = left[leftIdx++];\n            }\n            else {\n                // greater -> take right\n                data[i++] = right[rightIdx++];\n            }\n        }\n        while (leftIdx < left.length) {\n            data[i++] = left[leftIdx++];\n        }\n        while (rightIdx < right.length) {\n            data[i++] = right[rightIdx++];\n        }\n        return data;\n    }\n})(TextDocument || (TextDocument = {}));\n/**\n * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\n */\nvar FullTextDocument = /** @class */ (function () {\n    function FullTextDocument(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = undefined;\n    }\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\n        get: function () {\n            return this._uri;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\n        get: function () {\n            return this._languageId;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\n        get: function () {\n            return this._version;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    FullTextDocument.prototype.getText = function (range) {\n        if (range) {\n            var start = this.offsetAt(range.start);\n            var end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    };\n    FullTextDocument.prototype.update = function (event, version) {\n        this._content = event.text;\n        this._version = version;\n        this._lineOffsets = undefined;\n    };\n    FullTextDocument.prototype.getLineOffsets = function () {\n        if (this._lineOffsets === undefined) {\n            var lineOffsets = [];\n            var text = this._content;\n            var isLineStart = true;\n            for (var i = 0; i < text.length; i++) {\n                if (isLineStart) {\n                    lineOffsets.push(i);\n                    isLineStart = false;\n                }\n                var ch = text.charAt(i);\n                isLineStart = (ch === '\\r' || ch === '\\n');\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                    i++;\n                }\n            }\n            if (isLineStart && text.length > 0) {\n                lineOffsets.push(text.length);\n            }\n            this._lineOffsets = lineOffsets;\n        }\n        return this._lineOffsets;\n    };\n    FullTextDocument.prototype.positionAt = function (offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        var lineOffsets = this.getLineOffsets();\n        var low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return Position.create(0, offset);\n        }\n        while (low < high) {\n            var mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        var line = low - 1;\n        return Position.create(line, offset - lineOffsets[line]);\n    };\n    FullTextDocument.prototype.offsetAt = function (position) {\n        var lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        var lineOffset = lineOffsets[position.line];\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n    };\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\n        get: function () {\n            return this.getLineOffsets().length;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return FullTextDocument;\n}());\nvar Is;\n(function (Is) {\n    var toString = Object.prototype.toString;\n    function defined(value) {\n        return typeof value !== 'undefined';\n    }\n    Is.defined = defined;\n    function undefined(value) {\n        return typeof value === 'undefined';\n    }\n    Is.undefined = undefined;\n    function boolean(value) {\n        return value === true || value === false;\n    }\n    Is.boolean = boolean;\n    function string(value) {\n        return toString.call(value) === '[object String]';\n    }\n    Is.string = string;\n    function number(value) {\n        return toString.call(value) === '[object Number]';\n    }\n    Is.number = number;\n    function numberRange(value, min, max) {\n        return toString.call(value) === '[object Number]' && min <= value && value <= max;\n    }\n    Is.numberRange = numberRange;\n    function integer(value) {\n        return toString.call(value) === '[object Number]' && -2147483648 <= value && value <= 2147483647;\n    }\n    Is.integer = integer;\n    function uinteger(value) {\n        return toString.call(value) === '[object Number]' && 0 <= value && value <= 2147483647;\n    }\n    Is.uinteger = uinteger;\n    function func(value) {\n        return toString.call(value) === '[object Function]';\n    }\n    Is.func = func;\n    function objectLiteral(value) {\n        // Strictly speaking class instances pass this check as well. Since the LSP\n        // doesn't use classes we ignore this for now. If we do we need to add something\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\n        return value !== null && typeof value === 'object';\n    }\n    Is.objectLiteral = objectLiteral;\n    function typedArray(value, check) {\n        return Array.isArray(value) && value.every(check);\n    }\n    Is.typedArray = typedArray;\n})(Is || (Is = {}));\n","export default class CharacterStream {\n    constructor(sourceText) {\n        this.getStartOfToken = () => this._start;\n        this.getCurrentPosition = () => this._pos;\n        this.eol = () => this._sourceText.length === this._pos;\n        this.sol = () => this._pos === 0;\n        this.peek = () => {\n            return this._sourceText.charAt(this._pos)\n                ? this._sourceText.charAt(this._pos)\n                : null;\n        };\n        this.next = () => {\n            const char = this._sourceText.charAt(this._pos);\n            this._pos++;\n            return char;\n        };\n        this.eat = (pattern) => {\n            const isMatched = this._testNextCharacter(pattern);\n            if (isMatched) {\n                this._start = this._pos;\n                this._pos++;\n                return this._sourceText.charAt(this._pos - 1);\n            }\n            return undefined;\n        };\n        this.eatWhile = (match) => {\n            let isMatched = this._testNextCharacter(match);\n            let didEat = false;\n            if (isMatched) {\n                didEat = isMatched;\n                this._start = this._pos;\n            }\n            while (isMatched) {\n                this._pos++;\n                isMatched = this._testNextCharacter(match);\n                didEat = true;\n            }\n            return didEat;\n        };\n        this.eatSpace = () => this.eatWhile(/[\\s\\u00a0]/);\n        this.skipToEnd = () => {\n            this._pos = this._sourceText.length;\n        };\n        this.skipTo = (position) => {\n            this._pos = position;\n        };\n        this.match = (pattern, consume = true, caseFold = false) => {\n            let token = null;\n            let match = null;\n            if (typeof pattern === 'string') {\n                const regex = new RegExp(pattern, caseFold ? 'i' : 'g');\n                match = regex.test(this._sourceText.substr(this._pos, pattern.length));\n                token = pattern;\n            }\n            else if (pattern instanceof RegExp) {\n                match = this._sourceText.slice(this._pos).match(pattern);\n                token = match && match[0];\n            }\n            if (match != null) {\n                if (typeof pattern === 'string' ||\n                    (match instanceof Array &&\n                        this._sourceText.startsWith(match[0], this._pos))) {\n                    if (consume) {\n                        this._start = this._pos;\n                        if (token && token.length) {\n                            this._pos += token.length;\n                        }\n                    }\n                    return match;\n                }\n            }\n            return false;\n        };\n        this.backUp = (num) => {\n            this._pos -= num;\n        };\n        this.column = () => this._pos;\n        this.indentation = () => {\n            const match = this._sourceText.match(/\\s*/);\n            let indent = 0;\n            if (match && match.length !== 0) {\n                const whitespaces = match[0];\n                let pos = 0;\n                while (whitespaces.length > pos) {\n                    if (whitespaces.charCodeAt(pos) === 9) {\n                        indent += 2;\n                    }\n                    else {\n                        indent++;\n                    }\n                    pos++;\n                }\n            }\n            return indent;\n        };\n        this.current = () => this._sourceText.slice(this._start, this._pos);\n        this._start = 0;\n        this._pos = 0;\n        this._sourceText = sourceText;\n    }\n    _testNextCharacter(pattern) {\n        const character = this._sourceText.charAt(this._pos);\n        let isMatched = false;\n        if (typeof pattern === 'string') {\n            isMatched = character === pattern;\n        }\n        else {\n            isMatched =\n                pattern instanceof RegExp\n                    ? pattern.test(character)\n                    : pattern(character);\n        }\n        return isMatched;\n    }\n}\n//# sourceMappingURL=CharacterStream.js.map","export function opt(ofRule) {\n    return { ofRule };\n}\nexport function list(ofRule, separator) {\n    return { ofRule, isList: true, separator };\n}\nexport function butNot(rule, exclusions) {\n    const ruleMatch = rule.match;\n    rule.match = token => {\n        let check = false;\n        if (ruleMatch) {\n            check = ruleMatch(token);\n        }\n        return (check &&\n            exclusions.every(exclusion => exclusion.match && !exclusion.match(token)));\n    };\n    return rule;\n}\nexport function t(kind, style) {\n    return { style, match: (token) => token.kind === kind };\n}\nexport function p(value, style) {\n    return {\n        style: style || 'punctuation',\n        match: (token) => token.kind === 'Punctuation' && token.value === value,\n    };\n}\n//# sourceMappingURL=RuleHelpers.js.map","import { opt, list, butNot, t, p } from './RuleHelpers';\nimport { Kind } from 'graphql';\nexport const isIgnored = (ch) => ch === ' ' ||\n    ch === '\\t' ||\n    ch === ',' ||\n    ch === '\\n' ||\n    ch === '\\r' ||\n    ch === '\\uFEFF' ||\n    ch === '\\u00A0';\nexport const LexRules = {\n    Name: /^[_A-Za-z][_0-9A-Za-z]*/,\n    Punctuation: /^(?:!|\\$|\\(|\\)|\\.\\.\\.|:|=|&|@|\\[|]|\\{|\\||\\})/,\n    Number: /^-?(?:0|(?:[1-9][0-9]*))(?:\\.[0-9]*)?(?:[eE][+-]?[0-9]+)?/,\n    String: /^(?:\"\"\"(?:\\\\\"\"\"|[^\"]|\"[^\"]|\"\"[^\"])*(?:\"\"\")?|\"(?:[^\"\\\\]|\\\\(?:\"|\\/|\\\\|b|f|n|r|t|u[0-9a-fA-F]{4}))*\"?)/,\n    Comment: /^#.*/,\n};\nexport const ParseRules = {\n    Document: [list('Definition')],\n    Definition(token) {\n        switch (token.value) {\n            case '{':\n                return 'ShortQuery';\n            case 'query':\n                return 'Query';\n            case 'mutation':\n                return 'Mutation';\n            case 'subscription':\n                return 'Subscription';\n            case 'fragment':\n                return Kind.FRAGMENT_DEFINITION;\n            case 'schema':\n                return 'SchemaDef';\n            case 'scalar':\n                return 'ScalarDef';\n            case 'type':\n                return 'ObjectTypeDef';\n            case 'interface':\n                return 'InterfaceDef';\n            case 'union':\n                return 'UnionDef';\n            case 'enum':\n                return 'EnumDef';\n            case 'input':\n                return 'InputDef';\n            case 'extend':\n                return 'ExtendDef';\n            case 'directive':\n                return 'DirectiveDef';\n        }\n    },\n    ShortQuery: ['SelectionSet'],\n    Query: [\n        word('query'),\n        opt(name('def')),\n        opt('VariableDefinitions'),\n        list('Directive'),\n        'SelectionSet',\n    ],\n    Mutation: [\n        word('mutation'),\n        opt(name('def')),\n        opt('VariableDefinitions'),\n        list('Directive'),\n        'SelectionSet',\n    ],\n    Subscription: [\n        word('subscription'),\n        opt(name('def')),\n        opt('VariableDefinitions'),\n        list('Directive'),\n        'SelectionSet',\n    ],\n    VariableDefinitions: [p('('), list('VariableDefinition'), p(')')],\n    VariableDefinition: ['Variable', p(':'), 'Type', opt('DefaultValue')],\n    Variable: [p('$', 'variable'), name('variable')],\n    DefaultValue: [p('='), 'Value'],\n    SelectionSet: [p('{'), list('Selection'), p('}')],\n    Selection(token, stream) {\n        return token.value === '...'\n            ? stream.match(/[\\s\\u00a0,]*(on\\b|@|{)/, false)\n                ? 'InlineFragment'\n                : 'FragmentSpread'\n            : stream.match(/[\\s\\u00a0,]*:/, false)\n                ? 'AliasedField'\n                : 'Field';\n    },\n    AliasedField: [\n        name('property'),\n        p(':'),\n        name('qualifier'),\n        opt('Arguments'),\n        list('Directive'),\n        opt('SelectionSet'),\n    ],\n    Field: [\n        name('property'),\n        opt('Arguments'),\n        list('Directive'),\n        opt('SelectionSet'),\n    ],\n    Arguments: [p('('), list('Argument'), p(')')],\n    Argument: [name('attribute'), p(':'), 'Value'],\n    FragmentSpread: [p('...'), name('def'), list('Directive')],\n    InlineFragment: [\n        p('...'),\n        opt('TypeCondition'),\n        list('Directive'),\n        'SelectionSet',\n    ],\n    FragmentDefinition: [\n        word('fragment'),\n        opt(butNot(name('def'), [word('on')])),\n        'TypeCondition',\n        list('Directive'),\n        'SelectionSet',\n    ],\n    TypeCondition: [word('on'), 'NamedType'],\n    Value(token) {\n        switch (token.kind) {\n            case 'Number':\n                return 'NumberValue';\n            case 'String':\n                return 'StringValue';\n            case 'Punctuation':\n                switch (token.value) {\n                    case '[':\n                        return 'ListValue';\n                    case '{':\n                        return 'ObjectValue';\n                    case '$':\n                        return 'Variable';\n                    case '&':\n                        return 'NamedType';\n                }\n                return null;\n            case 'Name':\n                switch (token.value) {\n                    case 'true':\n                    case 'false':\n                        return 'BooleanValue';\n                }\n                if (token.value === 'null') {\n                    return 'NullValue';\n                }\n                return 'EnumValue';\n        }\n    },\n    NumberValue: [t('Number', 'number')],\n    StringValue: [\n        {\n            style: 'string',\n            match: token => token.kind === 'String',\n            update(state, token) {\n                if (token.value.startsWith('\"\"\"')) {\n                    state.inBlockstring = !token.value.slice(3).endsWith('\"\"\"');\n                }\n            },\n        },\n    ],\n    BooleanValue: [t('Name', 'builtin')],\n    NullValue: [t('Name', 'keyword')],\n    EnumValue: [name('string-2')],\n    ListValue: [p('['), list('Value'), p(']')],\n    ObjectValue: [p('{'), list('ObjectField'), p('}')],\n    ObjectField: [name('attribute'), p(':'), 'Value'],\n    Type(token) {\n        return token.value === '[' ? 'ListType' : 'NonNullType';\n    },\n    ListType: [p('['), 'Type', p(']'), opt(p('!'))],\n    NonNullType: ['NamedType', opt(p('!'))],\n    NamedType: [type('atom')],\n    Directive: [p('@', 'meta'), name('meta'), opt('Arguments')],\n    DirectiveDef: [\n        word('directive'),\n        p('@', 'meta'),\n        name('meta'),\n        opt('ArgumentsDef'),\n        word('on'),\n        list('DirectiveLocation', p('|')),\n    ],\n    InterfaceDef: [\n        word('interface'),\n        name('atom'),\n        opt('Implements'),\n        list('Directive'),\n        p('{'),\n        list('FieldDef'),\n        p('}'),\n    ],\n    Implements: [word('implements'), list('NamedType', p('&'))],\n    DirectiveLocation: [name('string-2')],\n    SchemaDef: [\n        word('schema'),\n        list('Directive'),\n        p('{'),\n        list('OperationTypeDef'),\n        p('}'),\n    ],\n    OperationTypeDef: [name('keyword'), p(':'), name('atom')],\n    ScalarDef: [word('scalar'), name('atom'), list('Directive')],\n    ObjectTypeDef: [\n        word('type'),\n        name('atom'),\n        opt('Implements'),\n        list('Directive'),\n        p('{'),\n        list('FieldDef'),\n        p('}'),\n    ],\n    FieldDef: [\n        name('property'),\n        opt('ArgumentsDef'),\n        p(':'),\n        'Type',\n        list('Directive'),\n    ],\n    ArgumentsDef: [p('('), list('InputValueDef'), p(')')],\n    InputValueDef: [\n        name('attribute'),\n        p(':'),\n        'Type',\n        opt('DefaultValue'),\n        list('Directive'),\n    ],\n    UnionDef: [\n        word('union'),\n        name('atom'),\n        list('Directive'),\n        p('='),\n        list('UnionMember', p('|')),\n    ],\n    UnionMember: ['NamedType'],\n    EnumDef: [\n        word('enum'),\n        name('atom'),\n        list('Directive'),\n        p('{'),\n        list('EnumValueDef'),\n        p('}'),\n    ],\n    EnumValueDef: [name('string-2'), list('Directive')],\n    InputDef: [\n        word('input'),\n        name('atom'),\n        list('Directive'),\n        p('{'),\n        list('InputValueDef'),\n        p('}'),\n    ],\n    ExtendDef: [word('extend'), 'ObjectTypeDef'],\n};\nfunction word(value) {\n    return {\n        style: 'keyword',\n        match: (token) => token.kind === 'Name' && token.value === value,\n    };\n}\nfunction name(style) {\n    return {\n        style,\n        match: (token) => token.kind === 'Name',\n        update(state, token) {\n            state.name = token.value;\n        },\n    };\n}\nfunction type(style) {\n    return {\n        style,\n        match: (token) => token.kind === 'Name',\n        update(state, token) {\n            if (state.prevState && state.prevState.prevState) {\n                state.name = token.value;\n                state.prevState.prevState.type = token.value;\n            }\n        },\n    };\n}\n//# sourceMappingURL=Rules.js.map","import { LexRules, ParseRules, isIgnored } from './Rules';\nimport { Kind } from 'graphql';\nexport default function onlineParser(options = {\n    eatWhitespace: stream => stream.eatWhile(isIgnored),\n    lexRules: LexRules,\n    parseRules: ParseRules,\n    editorConfig: {},\n}) {\n    return {\n        startState() {\n            const initialState = {\n                level: 0,\n                step: 0,\n                name: null,\n                kind: null,\n                type: null,\n                rule: null,\n                needsSeperator: false,\n                prevState: null,\n            };\n            pushRule(options.parseRules, initialState, Kind.DOCUMENT);\n            return initialState;\n        },\n        token(stream, state) {\n            return getToken(stream, state, options);\n        },\n    };\n}\nfunction getToken(stream, state, options) {\n    if (state.inBlockstring) {\n        if (stream.match(/.*\"\"\"/)) {\n            state.inBlockstring = false;\n            return 'string';\n        }\n        else {\n            stream.skipToEnd();\n            return 'string';\n        }\n    }\n    const { lexRules, parseRules, eatWhitespace, editorConfig } = options;\n    if (state.rule && state.rule.length === 0) {\n        popRule(state);\n    }\n    else if (state.needsAdvance) {\n        state.needsAdvance = false;\n        advanceRule(state, true);\n    }\n    if (stream.sol()) {\n        const tabSize = (editorConfig && editorConfig.tabSize) || 2;\n        state.indentLevel = Math.floor(stream.indentation() / tabSize);\n    }\n    if (eatWhitespace(stream)) {\n        return 'ws';\n    }\n    const token = lex(lexRules, stream);\n    if (!token) {\n        const matchedSomething = stream.match(/\\S+/);\n        if (!matchedSomething) {\n            stream.match(/\\s/);\n        }\n        pushRule(SpecialParseRules, state, 'Invalid');\n        return 'invalidchar';\n    }\n    if (token.kind === 'Comment') {\n        pushRule(SpecialParseRules, state, 'Comment');\n        return 'comment';\n    }\n    const backupState = assign({}, state);\n    if (token.kind === 'Punctuation') {\n        if (/^[{([]/.test(token.value)) {\n            if (state.indentLevel !== undefined) {\n                state.levels = (state.levels || []).concat(state.indentLevel + 1);\n            }\n        }\n        else if (/^[})\\]]/.test(token.value)) {\n            const levels = (state.levels = (state.levels || []).slice(0, -1));\n            if (state.indentLevel) {\n                if (levels.length > 0 &&\n                    levels[levels.length - 1] < state.indentLevel) {\n                    state.indentLevel = levels[levels.length - 1];\n                }\n            }\n        }\n    }\n    while (state.rule) {\n        let expected = typeof state.rule === 'function'\n            ? state.step === 0\n                ? state.rule(token, stream)\n                : null\n            : state.rule[state.step];\n        if (state.needsSeperator) {\n            expected = expected && (expected === null || expected === void 0 ? void 0 : expected.separator);\n        }\n        if (expected) {\n            if (expected.ofRule) {\n                expected = expected.ofRule;\n            }\n            if (typeof expected === 'string') {\n                pushRule(parseRules, state, expected);\n                continue;\n            }\n            if (expected.match && expected.match(token)) {\n                if (expected.update) {\n                    expected.update(state, token);\n                }\n                if (token.kind === 'Punctuation') {\n                    advanceRule(state, true);\n                }\n                else {\n                    state.needsAdvance = true;\n                }\n                return expected.style;\n            }\n        }\n        unsuccessful(state);\n    }\n    assign(state, backupState);\n    pushRule(SpecialParseRules, state, 'Invalid');\n    return 'invalidchar';\n}\nfunction assign(to, from) {\n    const keys = Object.keys(from);\n    for (let i = 0; i < keys.length; i++) {\n        to[keys[i]] = from[keys[i]];\n    }\n    return to;\n}\nconst SpecialParseRules = {\n    Invalid: [],\n    Comment: [],\n};\nfunction pushRule(rules, state, ruleKind) {\n    if (!rules[ruleKind]) {\n        throw new TypeError('Unknown rule: ' + ruleKind);\n    }\n    state.prevState = Object.assign({}, state);\n    state.kind = ruleKind;\n    state.name = null;\n    state.type = null;\n    state.rule = rules[ruleKind];\n    state.step = 0;\n    state.needsSeperator = false;\n}\nfunction popRule(state) {\n    if (!state.prevState) {\n        return;\n    }\n    state.kind = state.prevState.kind;\n    state.name = state.prevState.name;\n    state.type = state.prevState.type;\n    state.rule = state.prevState.rule;\n    state.step = state.prevState.step;\n    state.needsSeperator = state.prevState.needsSeperator;\n    state.prevState = state.prevState.prevState;\n}\nfunction advanceRule(state, successful) {\n    if (isList(state) && state.rule) {\n        const step = state.rule[state.step];\n        if (step.separator) {\n            const separator = step.separator;\n            state.needsSeperator = !state.needsSeperator;\n            if (!state.needsSeperator && separator.ofRule) {\n                return;\n            }\n        }\n        if (successful) {\n            return;\n        }\n    }\n    state.needsSeperator = false;\n    state.step++;\n    while (state.rule &&\n        !(Array.isArray(state.rule) && state.step < state.rule.length)) {\n        popRule(state);\n        if (state.rule) {\n            if (isList(state)) {\n                if (state.rule && state.rule[state.step].separator) {\n                    state.needsSeperator = !state.needsSeperator;\n                }\n            }\n            else {\n                state.needsSeperator = false;\n                state.step++;\n            }\n        }\n    }\n}\nfunction isList(state) {\n    const step = Array.isArray(state.rule) &&\n        typeof state.rule[state.step] !== 'string' &&\n        state.rule[state.step];\n    return step && step.isList;\n}\nfunction unsuccessful(state) {\n    while (state.rule &&\n        !(Array.isArray(state.rule) && state.rule[state.step].ofRule)) {\n        popRule(state);\n    }\n    if (state.rule) {\n        advanceRule(state, false);\n    }\n}\nfunction lex(lexRules, stream) {\n    const kinds = Object.keys(lexRules);\n    for (let i = 0; i < kinds.length; i++) {\n        const match = stream.match(lexRules[kinds[i]]);\n        if (match && match instanceof Array) {\n            return { kind: kinds[i], value: match[0] };\n        }\n    }\n}\n//# sourceMappingURL=onlineParser.js.map","import { Kind } from 'graphql';\nexport const AdditionalRuleKinds = {\n    ALIASED_FIELD: 'AliasedField',\n    ARGUMENTS: 'Arguments',\n    SHORT_QUERY: 'ShortQuery',\n    QUERY: 'Query',\n    MUTATION: 'Mutation',\n    SUBSCRIPTION: 'Subscription',\n    TYPE_CONDITION: 'TypeCondition',\n    INVALID: 'Invalid',\n    COMMENT: 'Comment',\n    SCHEMA_DEF: 'SchemaDef',\n    SCALAR_DEF: 'ScalarDef',\n    OBJECT_TYPE_DEF: 'ObjectTypeDef',\n    OBJECT_VALUE: 'ObjectValue',\n    LIST_VALUE: 'ListValue',\n    INTERFACE_DEF: 'InterfaceDef',\n    UNION_DEF: 'UnionDef',\n    ENUM_DEF: 'EnumDef',\n    ENUM_VALUE: 'EnumValue',\n    FIELD_DEF: 'FieldDef',\n    INPUT_DEF: 'InputDef',\n    INPUT_VALUE_DEF: 'InputValueDef',\n    ARGUMENTS_DEF: 'ArgumentsDef',\n    EXTEND_DEF: 'ExtendDef',\n    DIRECTIVE_DEF: 'DirectiveDef',\n    IMPLEMENTS: 'Implements',\n    VARIABLE_DEFINITIONS: 'VariableDefinitions',\n    TYPE: 'Type',\n};\nexport const RuleKinds = Object.assign(Object.assign({}, Kind), AdditionalRuleKinds);\n//# sourceMappingURL=types.js.map","import { CompletionItemKind, InsertTextFormat, } from 'vscode-languageserver-types';\nimport { isInterfaceType, GraphQLInterfaceType, GraphQLObjectType, Kind, DirectiveLocation, isListType, isNonNullType, } from 'graphql';\nimport { GraphQLBoolean, GraphQLEnumType, GraphQLInputObjectType, GraphQLList, SchemaMetaFieldDef, TypeMetaFieldDef, TypeNameMetaFieldDef, assertAbstractType, doTypesOverlap, getNamedType, getNullableType, isAbstractType, isCompositeType, isInputType, visit, parse, } from 'graphql';\nimport { CharacterStream, onlineParser, RuleKinds, } from 'graphql-language-service-parser';\nimport { forEachState, getDefinitionState, getFieldDef, hintList, objectValues, } from './autocompleteUtils';\nexport const SuggestionCommand = {\n    command: 'editor.action.triggerSuggest',\n    title: 'Suggestions',\n};\nconst collectFragmentDefs = (op) => {\n    const externalFragments = [];\n    if (op) {\n        visit(parse(op), {\n            FragmentDefinition(def) {\n                externalFragments.push(def);\n            },\n        });\n    }\n    return externalFragments;\n};\nexport function getAutocompleteSuggestions(schema, queryText, cursor, contextToken, fragmentDefs, options) {\n    var _a;\n    const opts = Object.assign(Object.assign({}, options), { schema });\n    const token = contextToken || getTokenAtPosition(queryText, cursor);\n    const state = token.state.kind === 'Invalid' ? token.state.prevState : token.state;\n    if (!state) {\n        return [];\n    }\n    const kind = state.kind;\n    const step = state.step;\n    const typeInfo = getTypeInfo(schema, token.state);\n    if (kind === RuleKinds.DOCUMENT) {\n        return hintList(token, [\n            { label: 'query', kind: CompletionItemKind.Function },\n            { label: 'mutation', kind: CompletionItemKind.Function },\n            { label: 'subscription', kind: CompletionItemKind.Function },\n            { label: 'fragment', kind: CompletionItemKind.Function },\n            { label: '{', kind: CompletionItemKind.Constructor },\n        ]);\n    }\n    if (kind === RuleKinds.IMPLEMENTS ||\n        (kind === RuleKinds.NAMED_TYPE &&\n            ((_a = state.prevState) === null || _a === void 0 ? void 0 : _a.kind) === RuleKinds.IMPLEMENTS)) {\n        return getSuggestionsForImplements(token, state, schema, queryText, typeInfo);\n    }\n    if (kind === RuleKinds.SELECTION_SET ||\n        kind === RuleKinds.FIELD ||\n        kind === RuleKinds.ALIASED_FIELD) {\n        return getSuggestionsForFieldNames(token, typeInfo, opts);\n    }\n    if (kind === RuleKinds.ARGUMENTS ||\n        (kind === RuleKinds.ARGUMENT && step === 0)) {\n        const argDefs = typeInfo.argDefs;\n        if (argDefs) {\n            return hintList(token, argDefs.map((argDef) => {\n                var _a;\n                return ({\n                    label: argDef.name,\n                    insertText: argDef.name + ': ',\n                    command: SuggestionCommand,\n                    detail: String(argDef.type),\n                    documentation: (_a = argDef.description) !== null && _a !== void 0 ? _a : undefined,\n                    kind: CompletionItemKind.Variable,\n                    type: argDef.type,\n                });\n            }));\n        }\n    }\n    if (kind === RuleKinds.OBJECT_VALUE ||\n        (kind === RuleKinds.OBJECT_FIELD && step === 0)) {\n        if (typeInfo.objectFieldDefs) {\n            const objectFields = objectValues(typeInfo.objectFieldDefs);\n            const completionKind = kind === RuleKinds.OBJECT_VALUE\n                ? CompletionItemKind.Value\n                : CompletionItemKind.Field;\n            return hintList(token, objectFields.map(field => {\n                var _a;\n                return ({\n                    label: field.name,\n                    detail: String(field.type),\n                    documentation: (_a = field.description) !== null && _a !== void 0 ? _a : undefined,\n                    kind: completionKind,\n                    type: field.type,\n                });\n            }));\n        }\n    }\n    if (kind === RuleKinds.ENUM_VALUE ||\n        (kind === RuleKinds.LIST_VALUE && step === 1) ||\n        (kind === RuleKinds.OBJECT_FIELD && step === 2) ||\n        (kind === RuleKinds.ARGUMENT && step === 2)) {\n        return getSuggestionsForInputValues(token, typeInfo, queryText, schema);\n    }\n    if (kind === RuleKinds.VARIABLE && step === 1) {\n        const namedInputType = getNamedType(typeInfo.inputType);\n        const variableDefinitions = getVariableCompletions(queryText, schema, token);\n        return hintList(token, variableDefinitions.filter(v => v.detail === (namedInputType === null || namedInputType === void 0 ? void 0 : namedInputType.name)));\n    }\n    if ((kind === RuleKinds.TYPE_CONDITION && step === 1) ||\n        (kind === RuleKinds.NAMED_TYPE &&\n            state.prevState != null &&\n            state.prevState.kind === RuleKinds.TYPE_CONDITION)) {\n        return getSuggestionsForFragmentTypeConditions(token, typeInfo, schema, kind);\n    }\n    if (kind === RuleKinds.FRAGMENT_SPREAD && step === 1) {\n        return getSuggestionsForFragmentSpread(token, typeInfo, schema, queryText, Array.isArray(fragmentDefs)\n            ? fragmentDefs\n            : collectFragmentDefs(fragmentDefs));\n    }\n    if ((kind === RuleKinds.VARIABLE_DEFINITION && step === 2) ||\n        (kind === RuleKinds.LIST_TYPE && step === 1) ||\n        (kind === RuleKinds.NAMED_TYPE &&\n            state.prevState &&\n            (state.prevState.kind === RuleKinds.VARIABLE_DEFINITION ||\n                state.prevState.kind === RuleKinds.LIST_TYPE ||\n                state.prevState.kind === RuleKinds.NON_NULL_TYPE))) {\n        return getSuggestionsForVariableDefinition(token, schema, kind);\n    }\n    if (kind === RuleKinds.DIRECTIVE) {\n        return getSuggestionsForDirective(token, state, schema, kind);\n    }\n    return [];\n}\nconst insertSuffix = ` {\\n  $1\\n}`;\nconst getInsertText = (field) => {\n    const type = field.type;\n    if (isCompositeType(type)) {\n        return insertSuffix;\n    }\n    if (isListType(type) && isCompositeType(type.ofType)) {\n        return insertSuffix;\n    }\n    if (isNonNullType(type)) {\n        if (isCompositeType(type.ofType)) {\n            return insertSuffix;\n        }\n        if (isListType(type.ofType) && isCompositeType(type.ofType.ofType)) {\n            return insertSuffix;\n        }\n    }\n    return null;\n};\nfunction getSuggestionsForFieldNames(token, typeInfo, options) {\n    var _a;\n    if (typeInfo.parentType) {\n        const parentType = typeInfo.parentType;\n        let fields = [];\n        if ('getFields' in parentType) {\n            fields = objectValues(parentType.getFields());\n        }\n        if (isCompositeType(parentType)) {\n            fields.push(TypeNameMetaFieldDef);\n        }\n        if (parentType === ((_a = options === null || options === void 0 ? void 0 : options.schema) === null || _a === void 0 ? void 0 : _a.getQueryType())) {\n            fields.push(SchemaMetaFieldDef, TypeMetaFieldDef);\n        }\n        return hintList(token, fields.map((field, index) => {\n            var _a;\n            const suggestion = {\n                sortText: String(index) + field.name,\n                label: field.name,\n                detail: String(field.type),\n                documentation: (_a = field.description) !== null && _a !== void 0 ? _a : undefined,\n                deprecated: Boolean(field.deprecationReason),\n                isDeprecated: Boolean(field.deprecationReason),\n                deprecationReason: field.deprecationReason,\n                kind: CompletionItemKind.Field,\n                type: field.type,\n            };\n            const insertText = getInsertText(field);\n            if (insertText) {\n                suggestion.insertText = field.name + insertText;\n                suggestion.insertTextFormat = InsertTextFormat.Snippet;\n                suggestion.command = SuggestionCommand;\n            }\n            return suggestion;\n        }));\n    }\n    return [];\n}\nfunction getSuggestionsForInputValues(token, typeInfo, queryText, schema) {\n    const namedInputType = getNamedType(typeInfo.inputType);\n    const queryVariables = getVariableCompletions(queryText, schema, token).filter(v => v.detail === namedInputType.name);\n    if (namedInputType instanceof GraphQLEnumType) {\n        const values = namedInputType.getValues();\n        return hintList(token, values\n            .map((value) => {\n            var _a;\n            return ({\n                label: value.name,\n                detail: String(namedInputType),\n                documentation: (_a = value.description) !== null && _a !== void 0 ? _a : undefined,\n                deprecated: Boolean(value.deprecationReason),\n                isDeprecated: Boolean(value.deprecationReason),\n                deprecationReason: value.deprecationReason,\n                kind: CompletionItemKind.EnumMember,\n                type: namedInputType,\n            });\n        })\n            .concat(queryVariables));\n    }\n    else if (namedInputType === GraphQLBoolean) {\n        return hintList(token, queryVariables.concat([\n            {\n                label: 'true',\n                detail: String(GraphQLBoolean),\n                documentation: 'Not false.',\n                kind: CompletionItemKind.Variable,\n                type: GraphQLBoolean,\n            },\n            {\n                label: 'false',\n                detail: String(GraphQLBoolean),\n                documentation: 'Not true.',\n                kind: CompletionItemKind.Variable,\n                type: GraphQLBoolean,\n            },\n        ]));\n    }\n    return queryVariables;\n}\nfunction getSuggestionsForImplements(token, tokenState, schema, documentText, typeInfo) {\n    if (tokenState.needsSeperator) {\n        return [];\n    }\n    const typeMap = schema.getTypeMap();\n    const schemaInterfaces = objectValues(typeMap).filter(isInterfaceType);\n    const schemaInterfaceNames = schemaInterfaces.map(({ name }) => name);\n    const inlineInterfaces = new Set();\n    runOnlineParser(documentText, (_, state) => {\n        var _a, _b, _c, _d, _e;\n        if (state.name) {\n            if (state.kind === RuleKinds.INTERFACE_DEF &&\n                !schemaInterfaceNames.includes(state.name)) {\n                inlineInterfaces.add(state.name);\n            }\n            if (state.kind === RuleKinds.NAMED_TYPE &&\n                ((_a = state.prevState) === null || _a === void 0 ? void 0 : _a.kind) === RuleKinds.IMPLEMENTS) {\n                if (typeInfo.interfaceDef) {\n                    const existingType = (_b = typeInfo.interfaceDef) === null || _b === void 0 ? void 0 : _b.getInterfaces().find(({ name }) => name === state.name);\n                    if (existingType) {\n                        return;\n                    }\n                    const type = schema.getType(state.name);\n                    const interfaceConfig = (_c = typeInfo.interfaceDef) === null || _c === void 0 ? void 0 : _c.toConfig();\n                    typeInfo.interfaceDef = new GraphQLInterfaceType(Object.assign(Object.assign({}, interfaceConfig), { interfaces: [\n                            ...interfaceConfig.interfaces,\n                            type ||\n                                new GraphQLInterfaceType({ name: state.name, fields: {} }),\n                        ] }));\n                }\n                else if (typeInfo.objectTypeDef) {\n                    const existingType = (_d = typeInfo.objectTypeDef) === null || _d === void 0 ? void 0 : _d.getInterfaces().find(({ name }) => name === state.name);\n                    if (existingType) {\n                        return;\n                    }\n                    const type = schema.getType(state.name);\n                    const objectTypeConfig = (_e = typeInfo.objectTypeDef) === null || _e === void 0 ? void 0 : _e.toConfig();\n                    typeInfo.objectTypeDef = new GraphQLObjectType(Object.assign(Object.assign({}, objectTypeConfig), { interfaces: [\n                            ...objectTypeConfig.interfaces,\n                            type ||\n                                new GraphQLInterfaceType({ name: state.name, fields: {} }),\n                        ] }));\n                }\n            }\n        }\n    });\n    const currentTypeToExtend = typeInfo.interfaceDef || typeInfo.objectTypeDef;\n    const siblingInterfaces = (currentTypeToExtend === null || currentTypeToExtend === void 0 ? void 0 : currentTypeToExtend.getInterfaces()) || [];\n    const siblingInterfaceNames = siblingInterfaces.map(({ name }) => name);\n    const possibleInterfaces = schemaInterfaces\n        .concat([...inlineInterfaces].map(name => ({ name })))\n        .filter(({ name }) => name !== (currentTypeToExtend === null || currentTypeToExtend === void 0 ? void 0 : currentTypeToExtend.name) &&\n        !siblingInterfaceNames.includes(name));\n    return hintList(token, possibleInterfaces.map(type => {\n        const result = {\n            label: type.name,\n            kind: CompletionItemKind.Interface,\n            type,\n        };\n        if (type === null || type === void 0 ? void 0 : type.description) {\n            result.documentation = type.description;\n        }\n        return result;\n    }));\n}\nfunction getSuggestionsForFragmentTypeConditions(token, typeInfo, schema, _kind) {\n    let possibleTypes;\n    if (typeInfo.parentType) {\n        if (isAbstractType(typeInfo.parentType)) {\n            const abstractType = assertAbstractType(typeInfo.parentType);\n            const possibleObjTypes = schema.getPossibleTypes(abstractType);\n            const possibleIfaceMap = Object.create(null);\n            possibleObjTypes.forEach(type => {\n                type.getInterfaces().forEach(iface => {\n                    possibleIfaceMap[iface.name] = iface;\n                });\n            });\n            possibleTypes = possibleObjTypes.concat(objectValues(possibleIfaceMap));\n        }\n        else {\n            possibleTypes = [typeInfo.parentType];\n        }\n    }\n    else {\n        const typeMap = schema.getTypeMap();\n        possibleTypes = objectValues(typeMap).filter(isCompositeType);\n    }\n    return hintList(token, possibleTypes.map(type => {\n        const namedType = getNamedType(type);\n        return {\n            label: String(type),\n            documentation: (namedType && namedType.description) || '',\n            kind: CompletionItemKind.Field,\n        };\n    }));\n}\nfunction getSuggestionsForFragmentSpread(token, typeInfo, schema, queryText, fragmentDefs) {\n    if (!queryText) {\n        return [];\n    }\n    const typeMap = schema.getTypeMap();\n    const defState = getDefinitionState(token.state);\n    const fragments = getFragmentDefinitions(queryText);\n    if (fragmentDefs && fragmentDefs.length > 0) {\n        fragments.push(...fragmentDefs);\n    }\n    const relevantFrags = fragments.filter(frag => typeMap[frag.typeCondition.name.value] &&\n        !(defState &&\n            defState.kind === RuleKinds.FRAGMENT_DEFINITION &&\n            defState.name === frag.name.value) &&\n        isCompositeType(typeInfo.parentType) &&\n        isCompositeType(typeMap[frag.typeCondition.name.value]) &&\n        doTypesOverlap(schema, typeInfo.parentType, typeMap[frag.typeCondition.name.value]));\n    return hintList(token, relevantFrags.map(frag => ({\n        label: frag.name.value,\n        detail: String(typeMap[frag.typeCondition.name.value]),\n        documentation: `fragment ${frag.name.value} on ${frag.typeCondition.name.value}`,\n        kind: CompletionItemKind.Field,\n        type: typeMap[frag.typeCondition.name.value],\n    })));\n}\nconst getParentDefinition = (state, kind) => {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n    if (((_a = state.prevState) === null || _a === void 0 ? void 0 : _a.kind) === kind) {\n        return state.prevState;\n    }\n    if (((_c = (_b = state.prevState) === null || _b === void 0 ? void 0 : _b.prevState) === null || _c === void 0 ? void 0 : _c.kind) === kind) {\n        return state.prevState.prevState;\n    }\n    if (((_f = (_e = (_d = state.prevState) === null || _d === void 0 ? void 0 : _d.prevState) === null || _e === void 0 ? void 0 : _e.prevState) === null || _f === void 0 ? void 0 : _f.kind) === kind) {\n        return state.prevState.prevState.prevState;\n    }\n    if (((_k = (_j = (_h = (_g = state.prevState) === null || _g === void 0 ? void 0 : _g.prevState) === null || _h === void 0 ? void 0 : _h.prevState) === null || _j === void 0 ? void 0 : _j.prevState) === null || _k === void 0 ? void 0 : _k.kind) === kind) {\n        return state.prevState.prevState.prevState.prevState;\n    }\n};\nexport function getVariableCompletions(queryText, schema, token) {\n    let variableName = null;\n    let variableType;\n    const definitions = Object.create({});\n    runOnlineParser(queryText, (_, state) => {\n        if ((state === null || state === void 0 ? void 0 : state.kind) === RuleKinds.VARIABLE && state.name) {\n            variableName = state.name;\n        }\n        if ((state === null || state === void 0 ? void 0 : state.kind) === RuleKinds.NAMED_TYPE && variableName) {\n            const parentDefinition = getParentDefinition(state, RuleKinds.TYPE);\n            if (parentDefinition === null || parentDefinition === void 0 ? void 0 : parentDefinition.type) {\n                variableType = schema.getType(parentDefinition === null || parentDefinition === void 0 ? void 0 : parentDefinition.type);\n            }\n        }\n        if (variableName && variableType) {\n            if (!definitions[variableName]) {\n                definitions[variableName] = {\n                    detail: variableType.toString(),\n                    insertText: token.string === '$' ? variableName : '$' + variableName,\n                    label: variableName,\n                    type: variableType,\n                    kind: CompletionItemKind.Variable,\n                };\n                variableName = null;\n                variableType = null;\n            }\n        }\n    });\n    return objectValues(definitions);\n}\nexport function getFragmentDefinitions(queryText) {\n    const fragmentDefs = [];\n    runOnlineParser(queryText, (_, state) => {\n        if (state.kind === RuleKinds.FRAGMENT_DEFINITION &&\n            state.name &&\n            state.type) {\n            fragmentDefs.push({\n                kind: RuleKinds.FRAGMENT_DEFINITION,\n                name: {\n                    kind: Kind.NAME,\n                    value: state.name,\n                },\n                selectionSet: {\n                    kind: RuleKinds.SELECTION_SET,\n                    selections: [],\n                },\n                typeCondition: {\n                    kind: RuleKinds.NAMED_TYPE,\n                    name: {\n                        kind: Kind.NAME,\n                        value: state.type,\n                    },\n                },\n            });\n        }\n    });\n    return fragmentDefs;\n}\nfunction getSuggestionsForVariableDefinition(token, schema, _kind) {\n    const inputTypeMap = schema.getTypeMap();\n    const inputTypes = objectValues(inputTypeMap).filter(isInputType);\n    return hintList(token, inputTypes.map((type) => ({\n        label: type.name,\n        documentation: type.description,\n        kind: CompletionItemKind.Variable,\n    })));\n}\nfunction getSuggestionsForDirective(token, state, schema, _kind) {\n    if (state.prevState && state.prevState.kind) {\n        const directives = schema\n            .getDirectives()\n            .filter(directive => canUseDirective(state.prevState, directive));\n        return hintList(token, directives.map(directive => ({\n            label: directive.name,\n            documentation: directive.description || '',\n            kind: CompletionItemKind.Function,\n        })));\n    }\n    return [];\n}\nexport function getTokenAtPosition(queryText, cursor) {\n    let styleAtCursor = null;\n    let stateAtCursor = null;\n    let stringAtCursor = null;\n    const token = runOnlineParser(queryText, (stream, state, style, index) => {\n        if (index === cursor.line) {\n            if (stream.getCurrentPosition() >= cursor.character) {\n                styleAtCursor = style;\n                stateAtCursor = Object.assign({}, state);\n                stringAtCursor = stream.current();\n                return 'BREAK';\n            }\n        }\n    });\n    return {\n        start: token.start,\n        end: token.end,\n        string: stringAtCursor || token.string,\n        state: stateAtCursor || token.state,\n        style: styleAtCursor || token.style,\n    };\n}\nexport function runOnlineParser(queryText, callback) {\n    const lines = queryText.split('\\n');\n    const parser = onlineParser();\n    let state = parser.startState();\n    let style = '';\n    let stream = new CharacterStream('');\n    for (let i = 0; i < lines.length; i++) {\n        stream = new CharacterStream(lines[i]);\n        while (!stream.eol()) {\n            style = parser.token(stream, state);\n            const code = callback(stream, state, style, i);\n            if (code === 'BREAK') {\n                break;\n            }\n        }\n        callback(stream, state, style, i);\n        if (!state.kind) {\n            state = parser.startState();\n        }\n    }\n    return {\n        start: stream.getStartOfToken(),\n        end: stream.getCurrentPosition(),\n        string: stream.current(),\n        state,\n        style,\n    };\n}\nexport function canUseDirective(state, directive) {\n    if (!state || !state.kind) {\n        return false;\n    }\n    const kind = state.kind;\n    const locations = directive.locations;\n    switch (kind) {\n        case RuleKinds.QUERY:\n            return locations.indexOf(DirectiveLocation.QUERY) !== -1;\n        case RuleKinds.MUTATION:\n            return locations.indexOf(DirectiveLocation.MUTATION) !== -1;\n        case RuleKinds.SUBSCRIPTION:\n            return locations.indexOf(DirectiveLocation.SUBSCRIPTION) !== -1;\n        case RuleKinds.FIELD:\n        case RuleKinds.ALIASED_FIELD:\n            return locations.indexOf(DirectiveLocation.FIELD) !== -1;\n        case RuleKinds.FRAGMENT_DEFINITION:\n            return locations.indexOf(DirectiveLocation.FRAGMENT_DEFINITION) !== -1;\n        case RuleKinds.FRAGMENT_SPREAD:\n            return locations.indexOf(DirectiveLocation.FRAGMENT_SPREAD) !== -1;\n        case RuleKinds.INLINE_FRAGMENT:\n            return locations.indexOf(DirectiveLocation.INLINE_FRAGMENT) !== -1;\n        case RuleKinds.SCHEMA_DEF:\n            return locations.indexOf(DirectiveLocation.SCHEMA) !== -1;\n        case RuleKinds.SCALAR_DEF:\n            return locations.indexOf(DirectiveLocation.SCALAR) !== -1;\n        case RuleKinds.OBJECT_TYPE_DEF:\n            return locations.indexOf(DirectiveLocation.OBJECT) !== -1;\n        case RuleKinds.FIELD_DEF:\n            return locations.indexOf(DirectiveLocation.FIELD_DEFINITION) !== -1;\n        case RuleKinds.INTERFACE_DEF:\n            return locations.indexOf(DirectiveLocation.INTERFACE) !== -1;\n        case RuleKinds.UNION_DEF:\n            return locations.indexOf(DirectiveLocation.UNION) !== -1;\n        case RuleKinds.ENUM_DEF:\n            return locations.indexOf(DirectiveLocation.ENUM) !== -1;\n        case RuleKinds.ENUM_VALUE:\n            return locations.indexOf(DirectiveLocation.ENUM_VALUE) !== -1;\n        case RuleKinds.INPUT_DEF:\n            return locations.indexOf(DirectiveLocation.INPUT_OBJECT) !== -1;\n        case RuleKinds.INPUT_VALUE_DEF:\n            const prevStateKind = state.prevState && state.prevState.kind;\n            switch (prevStateKind) {\n                case RuleKinds.ARGUMENTS_DEF:\n                    return (locations.indexOf(DirectiveLocation.ARGUMENT_DEFINITION) !== -1);\n                case RuleKinds.INPUT_DEF:\n                    return (locations.indexOf(DirectiveLocation.INPUT_FIELD_DEFINITION) !== -1);\n            }\n    }\n    return false;\n}\nexport function getTypeInfo(schema, tokenState) {\n    let argDef;\n    let argDefs;\n    let directiveDef;\n    let enumValue;\n    let fieldDef;\n    let inputType;\n    let objectTypeDef;\n    let objectFieldDefs;\n    let parentType;\n    let type;\n    let interfaceDef;\n    forEachState(tokenState, state => {\n        switch (state.kind) {\n            case RuleKinds.QUERY:\n            case 'ShortQuery':\n                type = schema.getQueryType();\n                break;\n            case RuleKinds.MUTATION:\n                type = schema.getMutationType();\n                break;\n            case RuleKinds.SUBSCRIPTION:\n                type = schema.getSubscriptionType();\n                break;\n            case RuleKinds.INLINE_FRAGMENT:\n            case RuleKinds.FRAGMENT_DEFINITION:\n                if (state.type) {\n                    type = schema.getType(state.type);\n                }\n                break;\n            case RuleKinds.FIELD:\n            case RuleKinds.ALIASED_FIELD: {\n                if (!type || !state.name) {\n                    fieldDef = null;\n                }\n                else {\n                    fieldDef = parentType\n                        ? getFieldDef(schema, parentType, state.name)\n                        : null;\n                    type = fieldDef ? fieldDef.type : null;\n                }\n                break;\n            }\n            case RuleKinds.SELECTION_SET:\n                parentType = getNamedType(type);\n                break;\n            case RuleKinds.DIRECTIVE:\n                directiveDef = state.name ? schema.getDirective(state.name) : null;\n                break;\n            case RuleKinds.INTERFACE_DEF:\n                if (state.name) {\n                    objectTypeDef = null;\n                    interfaceDef = new GraphQLInterfaceType({\n                        name: state.name,\n                        interfaces: [],\n                        fields: {},\n                    });\n                }\n                break;\n            case RuleKinds.OBJECT_TYPE_DEF:\n                if (state.name) {\n                    interfaceDef = null;\n                    objectTypeDef = new GraphQLObjectType({\n                        name: state.name,\n                        interfaces: [],\n                        fields: {},\n                    });\n                }\n                break;\n            case RuleKinds.ARGUMENTS: {\n                if (!state.prevState) {\n                    argDefs = null;\n                }\n                else {\n                    switch (state.prevState.kind) {\n                        case RuleKinds.FIELD:\n                            argDefs = fieldDef && fieldDef.args;\n                            break;\n                        case RuleKinds.DIRECTIVE:\n                            argDefs =\n                                directiveDef && directiveDef.args;\n                            break;\n                        case RuleKinds.ALIASED_FIELD: {\n                            const name = state.prevState && state.prevState.name;\n                            if (!name) {\n                                argDefs = null;\n                                break;\n                            }\n                            const field = parentType\n                                ? getFieldDef(schema, parentType, name)\n                                : null;\n                            if (!field) {\n                                argDefs = null;\n                                break;\n                            }\n                            argDefs = field.args;\n                            break;\n                        }\n                        default:\n                            argDefs = null;\n                            break;\n                    }\n                }\n                break;\n            }\n            case RuleKinds.ARGUMENT:\n                if (argDefs) {\n                    for (let i = 0; i < argDefs.length; i++) {\n                        if (argDefs[i].name === state.name) {\n                            argDef = argDefs[i];\n                            break;\n                        }\n                    }\n                }\n                inputType = argDef && argDef.type;\n                break;\n            case RuleKinds.ENUM_VALUE:\n                const enumType = getNamedType(inputType);\n                enumValue =\n                    enumType instanceof GraphQLEnumType\n                        ? enumType\n                            .getValues()\n                            .find((val) => val.value === state.name)\n                        : null;\n                break;\n            case RuleKinds.LIST_VALUE:\n                const nullableType = getNullableType(inputType);\n                inputType =\n                    nullableType instanceof GraphQLList ? nullableType.ofType : null;\n                break;\n            case RuleKinds.OBJECT_VALUE:\n                const objectType = getNamedType(inputType);\n                objectFieldDefs =\n                    objectType instanceof GraphQLInputObjectType\n                        ? objectType.getFields()\n                        : null;\n                break;\n            case RuleKinds.OBJECT_FIELD:\n                const objectField = state.name && objectFieldDefs ? objectFieldDefs[state.name] : null;\n                inputType = objectField && objectField.type;\n                break;\n            case RuleKinds.NAMED_TYPE:\n                if (state.name) {\n                    type = schema.getType(state.name);\n                }\n                break;\n        }\n    });\n    return {\n        argDef,\n        argDefs,\n        directiveDef,\n        enumValue,\n        fieldDef,\n        inputType,\n        objectFieldDefs,\n        parentType,\n        type,\n        interfaceDef,\n        objectTypeDef,\n    };\n}\n//# sourceMappingURL=getAutocompleteSuggestions.js.map","'use strict';\n\nfunction nullthrows(x, message) {\n  if (x != null) {\n    return x;\n  }\n  var error = new Error(message !== undefined ? message : 'Got unexpected ' + x);\n  error.framesToPop = 1; // Skip nullthrows's own stack frame.\n  throw error;\n}\n\nmodule.exports = nullthrows;\nmodule.exports.default = nullthrows;\n\nObject.defineProperty(module.exports, '__esModule', {value: true});\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { locToRange, offsetToPosition, } from 'graphql-language-service-utils';\nexport const LANGUAGE = 'GraphQL';\nfunction assert(value, message) {\n    if (!value) {\n        throw new Error(message);\n    }\n}\nfunction getRange(text, node) {\n    const location = node.loc;\n    assert(location, 'Expected ASTNode to have a location.');\n    return locToRange(text, location);\n}\nfunction getPosition(text, node) {\n    const location = node.loc;\n    assert(location, 'Expected ASTNode to have a location.');\n    return offsetToPosition(text, location.start);\n}\nexport function getDefinitionQueryResultForNamedType(text, node, dependencies) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const name = node.name.value;\n        const defNodes = dependencies.filter(({ definition }) => definition.name && definition.name.value === name);\n        if (defNodes.length === 0) {\n            throw Error(`Definition not found for GraphQL type ${name}`);\n        }\n        const definitions = defNodes.map(({ filePath, content, definition }) => getDefinitionForNodeDefinition(filePath || '', content, definition));\n        return {\n            definitions,\n            queryRange: definitions.map(_ => getRange(text, node)),\n        };\n    });\n}\nexport function getDefinitionQueryResultForFragmentSpread(text, fragment, dependencies) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const name = fragment.name.value;\n        const defNodes = dependencies.filter(({ definition }) => definition.name.value === name);\n        if (defNodes.length === 0) {\n            throw Error(`Definition not found for GraphQL fragment ${name}`);\n        }\n        const definitions = defNodes.map(({ filePath, content, definition }) => getDefinitionForFragmentDefinition(filePath || '', content, definition));\n        return {\n            definitions,\n            queryRange: definitions.map(_ => getRange(text, fragment)),\n        };\n    });\n}\nexport function getDefinitionQueryResultForDefinitionNode(path, text, definition) {\n    return {\n        definitions: [getDefinitionForFragmentDefinition(path, text, definition)],\n        queryRange: definition.name ? [getRange(text, definition.name)] : [],\n    };\n}\nfunction getDefinitionForFragmentDefinition(path, text, definition) {\n    const name = definition.name;\n    if (!name) {\n        throw Error('Expected ASTNode to have a Name.');\n    }\n    return {\n        path,\n        position: getPosition(text, definition),\n        range: getRange(text, definition),\n        name: name.value || '',\n        language: LANGUAGE,\n        projectRoot: path,\n    };\n}\nfunction getDefinitionForNodeDefinition(path, text, definition) {\n    const name = definition.name;\n    assert(name, 'Expected ASTNode to have a Name.');\n    return {\n        path,\n        position: getPosition(text, definition),\n        range: getRange(text, definition),\n        name: name.value || '',\n        language: LANGUAGE,\n        projectRoot: path,\n    };\n}\n//# sourceMappingURL=getDefinition.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { SymbolKind, } from 'vscode-languageserver-types';\nimport { Kind, parse, print } from 'graphql';\nimport { getAutocompleteSuggestions } from './getAutocompleteSuggestions';\nimport { getHoverInformation } from './getHoverInformation';\nimport { validateQuery, getRange, DIAGNOSTIC_SEVERITY } from './getDiagnostics';\nimport { getDefinitionQueryResultForFragmentSpread, getDefinitionQueryResultForDefinitionNode, getDefinitionQueryResultForNamedType, } from './getDefinition';\nimport { getOutline } from './getOutline';\nimport { getASTNodeAtPosition } from 'graphql-language-service-utils';\nconst { FRAGMENT_DEFINITION, OBJECT_TYPE_DEFINITION, INTERFACE_TYPE_DEFINITION, ENUM_TYPE_DEFINITION, UNION_TYPE_DEFINITION, SCALAR_TYPE_DEFINITION, INPUT_OBJECT_TYPE_DEFINITION, SCALAR_TYPE_EXTENSION, OBJECT_TYPE_EXTENSION, INTERFACE_TYPE_EXTENSION, UNION_TYPE_EXTENSION, ENUM_TYPE_EXTENSION, INPUT_OBJECT_TYPE_EXTENSION, DIRECTIVE_DEFINITION, FRAGMENT_SPREAD, OPERATION_DEFINITION, NAMED_TYPE, } = Kind;\nconst KIND_TO_SYMBOL_KIND = {\n    [Kind.FIELD]: SymbolKind.Field,\n    [Kind.OPERATION_DEFINITION]: SymbolKind.Class,\n    [Kind.FRAGMENT_DEFINITION]: SymbolKind.Class,\n    [Kind.FRAGMENT_SPREAD]: SymbolKind.Struct,\n    [Kind.OBJECT_TYPE_DEFINITION]: SymbolKind.Class,\n    [Kind.ENUM_TYPE_DEFINITION]: SymbolKind.Enum,\n    [Kind.ENUM_VALUE_DEFINITION]: SymbolKind.EnumMember,\n    [Kind.INPUT_OBJECT_TYPE_DEFINITION]: SymbolKind.Class,\n    [Kind.INPUT_VALUE_DEFINITION]: SymbolKind.Field,\n    [Kind.FIELD_DEFINITION]: SymbolKind.Field,\n    [Kind.INTERFACE_TYPE_DEFINITION]: SymbolKind.Interface,\n    [Kind.DOCUMENT]: SymbolKind.File,\n    FieldWithArguments: SymbolKind.Method,\n};\nfunction getKind(tree) {\n    if (tree.kind === 'FieldDefinition' &&\n        tree.children &&\n        tree.children.length > 0) {\n        return KIND_TO_SYMBOL_KIND.FieldWithArguments;\n    }\n    return KIND_TO_SYMBOL_KIND[tree.kind];\n}\nexport class GraphQLLanguageService {\n    constructor(cache) {\n        this._graphQLCache = cache;\n        this._graphQLConfig = cache.getGraphQLConfig();\n    }\n    getConfigForURI(uri) {\n        const config = this._graphQLCache.getProjectForFile(uri);\n        if (config) {\n            return config;\n        }\n        throw Error(`No config found for uri: ${uri}`);\n    }\n    getDiagnostics(query, uri, isRelayCompatMode) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let queryHasExtensions = false;\n            const projectConfig = this.getConfigForURI(uri);\n            if (!projectConfig) {\n                return [];\n            }\n            const { schema: schemaPath, name: projectName, extensions } = projectConfig;\n            try {\n                const queryAST = parse(query);\n                if (!schemaPath || uri !== schemaPath) {\n                    queryHasExtensions = queryAST.definitions.some(definition => {\n                        switch (definition.kind) {\n                            case OBJECT_TYPE_DEFINITION:\n                            case INTERFACE_TYPE_DEFINITION:\n                            case ENUM_TYPE_DEFINITION:\n                            case UNION_TYPE_DEFINITION:\n                            case SCALAR_TYPE_DEFINITION:\n                            case INPUT_OBJECT_TYPE_DEFINITION:\n                            case SCALAR_TYPE_EXTENSION:\n                            case OBJECT_TYPE_EXTENSION:\n                            case INTERFACE_TYPE_EXTENSION:\n                            case UNION_TYPE_EXTENSION:\n                            case ENUM_TYPE_EXTENSION:\n                            case INPUT_OBJECT_TYPE_EXTENSION:\n                            case DIRECTIVE_DEFINITION:\n                                return true;\n                        }\n                        return false;\n                    });\n                }\n            }\n            catch (error) {\n                const range = getRange(error.locations[0], query);\n                return [\n                    {\n                        severity: DIAGNOSTIC_SEVERITY.Error,\n                        message: error.message,\n                        source: 'GraphQL: Syntax',\n                        range,\n                    },\n                ];\n            }\n            let source = query;\n            const fragmentDefinitions = yield this._graphQLCache.getFragmentDefinitions(projectConfig);\n            const fragmentDependencies = yield this._graphQLCache.getFragmentDependencies(query, fragmentDefinitions);\n            const dependenciesSource = fragmentDependencies.reduce((prev, cur) => `${prev} ${print(cur.definition)}`, '');\n            source = `${source} ${dependenciesSource}`;\n            let validationAst = null;\n            try {\n                validationAst = parse(source);\n            }\n            catch (error) {\n                return [];\n            }\n            let customRules = null;\n            if ((extensions === null || extensions === void 0 ? void 0 : extensions.customValidationRules) &&\n                typeof extensions.customValidationRules === 'function') {\n                customRules = extensions.customValidationRules(this._graphQLConfig);\n            }\n            const schema = yield this._graphQLCache.getSchema(projectName, queryHasExtensions);\n            if (!schema) {\n                return [];\n            }\n            return validateQuery(validationAst, schema, customRules, isRelayCompatMode);\n        });\n    }\n    getAutocompleteSuggestions(query, position, filePath) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const projectConfig = this.getConfigForURI(filePath);\n            const schema = yield this._graphQLCache.getSchema(projectConfig.name);\n            const fragmentDefinitions = yield this._graphQLCache.getFragmentDefinitions(projectConfig);\n            const fragmentInfo = Array.from(fragmentDefinitions).map(([, info]) => info.definition);\n            if (schema) {\n                return getAutocompleteSuggestions(schema, query, position, undefined, fragmentInfo);\n            }\n            return [];\n        });\n    }\n    getHoverInformation(query, position, filePath, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const projectConfig = this.getConfigForURI(filePath);\n            const schema = yield this._graphQLCache.getSchema(projectConfig.name);\n            if (schema) {\n                return getHoverInformation(schema, query, position, undefined, options);\n            }\n            return '';\n        });\n    }\n    getDefinition(query, position, filePath) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const projectConfig = this.getConfigForURI(filePath);\n            let ast;\n            try {\n                ast = parse(query);\n            }\n            catch (error) {\n                return null;\n            }\n            const node = getASTNodeAtPosition(query, ast, position);\n            if (node) {\n                switch (node.kind) {\n                    case FRAGMENT_SPREAD:\n                        return this._getDefinitionForFragmentSpread(query, ast, node, filePath, projectConfig);\n                    case FRAGMENT_DEFINITION:\n                    case OPERATION_DEFINITION:\n                        return getDefinitionQueryResultForDefinitionNode(filePath, query, node);\n                    case NAMED_TYPE:\n                        return this._getDefinitionForNamedType(query, ast, node, filePath, projectConfig);\n                }\n            }\n            return null;\n        });\n    }\n    getDocumentSymbols(document, filePath) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const outline = yield this.getOutline(document);\n            if (!outline) {\n                return [];\n            }\n            const output = [];\n            const input = outline.outlineTrees.map((tree) => [null, tree]);\n            while (input.length > 0) {\n                const res = input.pop();\n                if (!res) {\n                    return [];\n                }\n                const [parent, tree] = res;\n                if (!tree) {\n                    return [];\n                }\n                output.push({\n                    name: tree.representativeName,\n                    kind: getKind(tree),\n                    location: {\n                        uri: filePath,\n                        range: {\n                            start: tree.startPosition,\n                            end: tree.endPosition,\n                        },\n                    },\n                    containerName: parent ? parent.representativeName : undefined,\n                });\n                input.push(...tree.children.map(child => [tree, child]));\n            }\n            return output;\n        });\n    }\n    _getDefinitionForNamedType(query, ast, node, filePath, projectConfig) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const objectTypeDefinitions = yield this._graphQLCache.getObjectTypeDefinitions(projectConfig);\n            const dependencies = yield this._graphQLCache.getObjectTypeDependenciesForAST(ast, objectTypeDefinitions);\n            const localObjectTypeDefinitions = ast.definitions.filter(definition => definition.kind === OBJECT_TYPE_DEFINITION ||\n                definition.kind === INPUT_OBJECT_TYPE_DEFINITION ||\n                definition.kind === ENUM_TYPE_DEFINITION ||\n                definition.kind === SCALAR_TYPE_DEFINITION ||\n                definition.kind === INTERFACE_TYPE_DEFINITION);\n            const typeCastedDefs = localObjectTypeDefinitions;\n            const localOperationDefinationInfos = typeCastedDefs.map((definition) => ({\n                filePath,\n                content: query,\n                definition,\n            }));\n            const result = yield getDefinitionQueryResultForNamedType(query, node, dependencies.concat(localOperationDefinationInfos));\n            return result;\n        });\n    }\n    _getDefinitionForFragmentSpread(query, ast, node, filePath, projectConfig) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const fragmentDefinitions = yield this._graphQLCache.getFragmentDefinitions(projectConfig);\n            const dependencies = yield this._graphQLCache.getFragmentDependenciesForAST(ast, fragmentDefinitions);\n            const localFragDefinitions = ast.definitions.filter(definition => definition.kind === FRAGMENT_DEFINITION);\n            const typeCastedDefs = localFragDefinitions;\n            const localFragInfos = typeCastedDefs.map((definition) => ({\n                filePath,\n                content: query,\n                definition,\n            }));\n            const result = yield getDefinitionQueryResultForFragmentSpread(query, node, dependencies.concat(localFragInfos));\n            return result;\n        });\n    }\n    getOutline(documentText) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return getOutline(documentText);\n        });\n    }\n}\n//# sourceMappingURL=GraphQLLanguageService.js.map","import { Ref } from \"vue\"\nimport { GraphQLSchema } from \"graphql\"\nimport { getAutocompleteSuggestions } from \"graphql-language-service-interface\"\nimport { Completer, CompleterResult, CompletionEntry } from \".\"\n\nconst completer: (schemaRef: Ref<GraphQLSchema | null>) => Completer =\n  (schemaRef: Ref<GraphQLSchema | null>) => (text, completePos) => {\n    if (!schemaRef.value) return Promise.resolve(null)\n\n    const completions = getAutocompleteSuggestions(schemaRef.value, text, {\n      line: completePos.line,\n      character: completePos.ch,\n    } as any)\n\n    return Promise.resolve(<CompleterResult>{\n      completions: completions.map(\n        (x, i) =>\n          <CompletionEntry>{\n            text: x.label!,\n            meta: x.detail!,\n            score: completions.length - i,\n          }\n      ),\n    })\n  }\n\nexport default completer\n","<template>\n  <div class=\"flex flex-col flex-1 h-full\">\n    <SmartTabs\n      v-model=\"selectedOptionTab\"\n      styles=\"sticky overflow-x-auto flex-shrink-0 bg-primary top-upperPrimaryStickyFold z-10\"\n      render-inactive-tabs\n    >\n      <SmartTab\n        :id=\"'query'\"\n        :label=\"`${t('tab.query')}`\"\n        :indicator=\"gqlQueryString && gqlQueryString.length > 0 ? true : false\"\n      >\n        <div\n          class=\"sticky z-10 flex items-center justify-between flex-shrink-0 pl-4 overflow-x-auto border-b bg-primary border-dividerLight top-upperSecondaryStickyFold gqlRunQuery\"\n        >\n          <label class=\"font-semibold truncate text-secondaryLight\">\n            {{ t(\"request.query\") }}\n          </label>\n          <div class=\"flex\">\n            <ButtonSecondary\n              v-tippy=\"{ theme: 'tooltip', delay: [500, 20], allowHTML: true }\"\n              :title=\"`${t(\n                'request.run'\n              )} <kbd>${getSpecialKey()}</kbd><kbd>↩</kbd>`\"\n              :label=\"`${t('request.run')}`\"\n              :icon=\"IconPlay\"\n              class=\"rounded-none !text-accent !hover:text-accentDark\"\n              @click=\"runQuery()\"\n            />\n            <ButtonSecondary\n              v-tippy=\"{ theme: 'tooltip', delay: [500, 20], allowHTML: true }\"\n              :title=\"`${t(\n                'request.save'\n              )} <kbd>${getSpecialKey()}</kbd><kbd>S</kbd>`\"\n              :label=\"`${t('request.save')}`\"\n              :icon=\"IconSave\"\n              class=\"rounded-none\"\n              @click=\"saveRequest\"\n            />\n            <ButtonSecondary\n              v-tippy=\"{ theme: 'tooltip' }\"\n              to=\"https://docs.hoppscotch.io/graphql\"\n              blank\n              :title=\"t('app.wiki')\"\n              :icon=\"IconHelpCircle\"\n            />\n            <ButtonSecondary\n              v-tippy=\"{ theme: 'tooltip' }\"\n              :title=\"t('action.clear_all')\"\n              :icon=\"IconTrash2\"\n              @click=\"clearGQLQuery()\"\n            />\n            <ButtonSecondary\n              v-tippy=\"{ theme: 'tooltip' }\"\n              :title=\"t('state.linewrap')\"\n              :class=\"{ '!text-accent': linewrapEnabledQuery }\"\n              :icon=\"IconWrapText\"\n              @click.prevent=\"linewrapEnabledQuery = !linewrapEnabledQuery\"\n            />\n            <ButtonSecondary\n              v-tippy=\"{ theme: 'tooltip' }\"\n              :title=\"t('action.prettify')\"\n              :icon=\"prettifyQueryIcon\"\n              @click=\"prettifyQuery\"\n            />\n            <ButtonSecondary\n              v-tippy=\"{ theme: 'tooltip' }\"\n              :title=\"t('action.copy')\"\n              :icon=\"copyQueryIcon\"\n              @click=\"copyQuery\"\n            />\n          </div>\n        </div>\n        <div ref=\"queryEditor\" class=\"flex flex-col flex-1\"></div>\n      </SmartTab>\n      <SmartTab\n        :id=\"'variables'\"\n        :label=\"`${t('tab.variables')}`\"\n        :indicator=\"variableString && variableString.length > 0 ? true : false\"\n      >\n        <div\n          class=\"sticky z-10 flex items-center justify-between flex-shrink-0 pl-4 overflow-x-auto border-b bg-primary border-dividerLight top-upperSecondaryStickyFold\"\n        >\n          <label class=\"font-semibold truncate text-secondaryLight\">\n            {{ t(\"request.variables\") }}\n          </label>\n          <div class=\"flex\">\n            <ButtonSecondary\n              v-tippy=\"{ theme: 'tooltip' }\"\n              to=\"https://docs.hoppscotch.io/graphql\"\n              blank\n              :title=\"t('app.wiki')\"\n              :icon=\"IconHelpCircle\"\n            />\n            <ButtonSecondary\n              v-tippy=\"{ theme: 'tooltip' }\"\n              :title=\"t('action.clear_all')\"\n              :icon=\"IconTrash2\"\n              @click=\"clearGQLVariables()\"\n            />\n            <ButtonSecondary\n              v-tippy=\"{ theme: 'tooltip' }\"\n              :title=\"t('state.linewrap')\"\n              :class=\"{ '!text-accent': linewrapEnabledVariable }\"\n              :icon=\"IconWrapText\"\n              @click.prevent=\"\n                linewrapEnabledVariable = !linewrapEnabledVariable\n              \"\n            />\n            <ButtonSecondary\n              v-tippy=\"{ theme: 'tooltip' }\"\n              :title=\"t('action.prettify')\"\n              :icon=\"prettifyVariablesIcon\"\n              @click=\"prettifyVariableString\"\n            />\n            <ButtonSecondary\n              v-tippy=\"{ theme: 'tooltip' }\"\n              :title=\"t('action.copy')\"\n              :icon=\"copyVariablesIcon\"\n              @click=\"copyVariables\"\n            />\n          </div>\n        </div>\n        <div ref=\"variableEditor\" class=\"flex flex-col flex-1\"></div>\n      </SmartTab>\n      <SmartTab\n        :id=\"'headers'\"\n        :label=\"`${t('tab.headers')}`\"\n        :info=\"activeGQLHeadersCount === 0 ? null : `${activeGQLHeadersCount}`\"\n      >\n        <div\n          class=\"sticky z-10 flex items-center justify-between flex-shrink-0 pl-4 overflow-x-auto border-b bg-primary border-dividerLight top-upperSecondaryStickyFold\"\n        >\n          <label class=\"font-semibold truncate text-secondaryLight\">\n            {{ t(\"tab.headers\") }}\n          </label>\n          <div class=\"flex\">\n            <ButtonSecondary\n              v-tippy=\"{ theme: 'tooltip' }\"\n              to=\"https://docs.hoppscotch.io/graphql\"\n              blank\n              :title=\"t('app.wiki')\"\n              :icon=\"IconHelpCircle\"\n            />\n            <ButtonSecondary\n              v-tippy=\"{ theme: 'tooltip' }\"\n              :title=\"t('action.clear_all')\"\n              :icon=\"IconTrash2\"\n              @click=\"clearContent()\"\n            />\n            <ButtonSecondary\n              v-tippy=\"{ theme: 'tooltip' }\"\n              :title=\"t('state.linewrap')\"\n              :class=\"{ '!text-accent': linewrapEnabled }\"\n              :icon=\"IconWrapText\"\n              @click.prevent=\"linewrapEnabled = !linewrapEnabled\"\n            />\n            <ButtonSecondary\n              v-tippy=\"{ theme: 'tooltip' }\"\n              :title=\"t('state.bulk_mode')\"\n              :icon=\"IconEdit\"\n              :class=\"{ '!text-accent': bulkMode }\"\n              @click=\"bulkMode = !bulkMode\"\n            />\n            <ButtonSecondary\n              v-tippy=\"{ theme: 'tooltip' }\"\n              :title=\"t('add.new')\"\n              :icon=\"IconPlus\"\n              :disabled=\"bulkMode\"\n              @click=\"addHeader\"\n            />\n          </div>\n        </div>\n        <div\n          v-if=\"bulkMode\"\n          ref=\"bulkEditor\"\n          class=\"flex flex-col flex-1\"\n        ></div>\n        <div v-else>\n          <draggable\n            v-model=\"workingHeaders\"\n            :item-key=\"(header) => `header-${header.id}`\"\n            animation=\"250\"\n            handle=\".draggable-handle\"\n            draggable=\".draggable-content\"\n            ghost-class=\"cursor-move\"\n            chosen-class=\"bg-primaryLight\"\n            drag-class=\"cursor-grabbing\"\n          >\n            <template #item=\"{ element: header, index }\">\n              <div\n                class=\"flex border-b divide-x divide-dividerLight border-dividerLight draggable-content group\"\n              >\n                <span>\n                  <ButtonSecondary\n                    v-tippy=\"{\n                      theme: 'tooltip',\n                      delay: [500, 20],\n                      content:\n                        index !== workingHeaders?.length - 1\n                          ? t('action.drag_to_reorder')\n                          : null,\n                    }\"\n                    :icon=\"IconGripVertical\"\n                    class=\"cursor-auto text-primary hover:text-primary\"\n                    :class=\"{\n                      'draggable-handle group-hover:text-secondaryLight !cursor-grab':\n                        index !== workingHeaders?.length - 1,\n                    }\"\n                    tabindex=\"-1\"\n                  />\n                </span>\n                <SmartAutoComplete\n                  :placeholder=\"`${t('count.header', { count: index + 1 })}`\"\n                  :source=\"commonHeaders\"\n                  :spellcheck=\"false\"\n                  :value=\"header.key\"\n                  autofocus\n                  styles=\"\n                bg-transparent\n                flex\n                flex-1\n                py-1\n                px-4\n                truncate\n              \"\n                  class=\"flex-1 !flex\"\n                  @input=\"\n                    updateHeader(index, {\n                      id: header.id,\n                      key: $event,\n                      value: header.value,\n                      active: header.active,\n                    })\n                  \"\n                />\n                <input\n                  class=\"flex flex-1 px-4 py-2 bg-transparent\"\n                  :placeholder=\"`${t('count.value', { count: index + 1 })}`\"\n                  :name=\"`value ${String(index)}`\"\n                  :value=\"header.value\"\n                  autofocus\n                  @change=\"\n                    updateHeader(index, {\n                      id: header.id,\n                      key: header.key,\n                      value: ($event!.target! as HTMLInputElement).value,\n                      active: header.active,\n                    })\n                  \"\n                />\n                <span>\n                  <ButtonSecondary\n                    v-tippy=\"{ theme: 'tooltip' }\"\n                    :title=\"\n                      header.hasOwnProperty('active')\n                        ? header.active\n                          ? t('action.turn_off')\n                          : t('action.turn_on')\n                        : t('action.turn_off')\n                    \"\n                    :icon=\"\n                      header.hasOwnProperty('active')\n                        ? header.active\n                          ? IconCheckCircle\n                          : IconCircle\n                        : IconCheckCircle\n                    \"\n                    color=\"green\"\n                    @click=\"\n                      updateHeader(index, {\n                        id: header.id,\n                        key: header.key,\n                        value: header.value,\n                        active: !header.active,\n                      })\n                    \"\n                  />\n                </span>\n                <span>\n                  <ButtonSecondary\n                    v-tippy=\"{ theme: 'tooltip' }\"\n                    :title=\"t('action.remove')\"\n                    :icon=\"IconTrash\"\n                    color=\"red\"\n                    @click=\"deleteHeader(index)\"\n                  />\n                </span>\n              </div>\n            </template>\n          </draggable>\n          <div\n            v-if=\"workingHeaders.length === 0\"\n            class=\"flex flex-col items-center justify-center p-4 text-secondaryLight\"\n          >\n            <img\n              :src=\"`/images/states/${colorMode.value}/add_category.svg`\"\n              loading=\"lazy\"\n              class=\"inline-flex flex-col object-contain object-center w-16 h-16 my-4\"\n              :alt=\"`${t('empty.headers')}`\"\n            />\n            <span class=\"pb-4 text-center\">\n              {{ t(\"empty.headers\") }}\n            </span>\n            <ButtonSecondary\n              :label=\"`${t('add.new')}`\"\n              filled\n              :icon=\"IconPlus\"\n              class=\"mb-4\"\n              @click=\"addHeader\"\n            />\n          </div>\n        </div>\n      </SmartTab>\n      <SmartTab :id=\"'authorization'\" :label=\"`${t('tab.authorization')}`\">\n        <GraphqlAuthorization />\n      </SmartTab>\n    </SmartTabs>\n    <CollectionsSaveRequest\n      mode=\"graphql\"\n      :show=\"showSaveRequestModal\"\n      @hide-modal=\"hideRequestModal\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport IconPlay from \"~icons/lucide/play\"\nimport IconSave from \"~icons/lucide/save\"\nimport IconHelpCircle from \"~icons/lucide/help-circle\"\nimport IconTrash2 from \"~icons/lucide/trash-2\"\nimport IconEdit from \"~icons/lucide/edit\"\nimport IconPlus from \"~icons/lucide/plus\"\nimport IconGripVertical from \"~icons/lucide/grip-vertical\"\nimport IconCheckCircle from \"~icons/lucide/check-circle\"\nimport IconTrash from \"~icons/lucide/trash\"\nimport IconCircle from \"~icons/lucide/circle\"\nimport IconCopy from \"~icons/lucide/copy\"\nimport IconCheck from \"~icons/lucide/check\"\nimport IconInfo from \"~icons/lucide/info\"\nimport IconWand2 from \"~icons/lucide/wand-2\"\nimport IconWrapText from \"~icons/lucide/wrap-text\"\nimport { Ref, computed, reactive, ref, watch } from \"vue\"\nimport * as gql from \"graphql\"\nimport * as E from \"fp-ts/Either\"\nimport * as O from \"fp-ts/Option\"\nimport * as A from \"fp-ts/Array\"\nimport * as RA from \"fp-ts/ReadonlyArray\"\nimport { pipe, flow } from \"fp-ts/function\"\nimport {\n  GQLHeader,\n  makeGQLRequest,\n  rawKeyValueEntriesToString,\n  parseRawKeyValueEntriesE,\n  RawKeyValueEntry,\n} from \"@hoppscotch/data\"\nimport draggable from \"vuedraggable\"\nimport { clone, cloneDeep, isEqual } from \"lodash-es\"\nimport { refAutoReset } from \"@vueuse/core\"\nimport { copyToClipboard } from \"~/helpers/utils/clipboard\"\nimport { useReadonlyStream, useStream } from \"@composables/stream\"\nimport { useColorMode } from \"@composables/theming\"\nimport { useI18n } from \"@composables/i18n\"\nimport { useToast } from \"@composables/toast\"\nimport { startPageProgress, completePageProgress } from \"@modules/loadingbar\"\nimport {\n  gqlAuth$,\n  gqlHeaders$,\n  gqlQuery$,\n  gqlResponse$,\n  gqlURL$,\n  gqlVariables$,\n  setGQLAuth,\n  setGQLHeaders,\n  setGQLQuery,\n  setGQLResponse,\n  setGQLVariables,\n} from \"~/newstore/GQLSession\"\nimport { commonHeaders } from \"~/helpers/headers\"\nimport { GQLConnection } from \"~/helpers/GQLConnection\"\nimport { makeGQLHistoryEntry, addGraphqlHistoryEntry } from \"~/newstore/history\"\nimport { logHoppRequestRunToAnalytics } from \"~/helpers/fb/analytics\"\nimport { getCurrentStrategyID } from \"~/helpers/network\"\nimport { useCodemirror } from \"@composables/codemirror\"\nimport jsonLinter from \"~/helpers/editor/linting/json\"\nimport { createGQLQueryLinter } from \"~/helpers/editor/linting/gqlQuery\"\nimport queryCompleter from \"~/helpers/editor/completion/gqlQuery\"\nimport { defineActionHandler } from \"~/helpers/actions\"\nimport { getPlatformSpecialKey as getSpecialKey } from \"~/helpers/platformutils\"\nimport { objRemoveKey } from \"~/helpers/functional/object\"\n\ntype OptionTabs = \"query\" | \"headers\" | \"variables\" | \"authorization\"\n\nconst colorMode = useColorMode()\n\nconst selectedOptionTab = ref<OptionTabs>(\"query\")\n\nconst t = useI18n()\n\nconst props = defineProps<{\n  conn: GQLConnection\n}>()\n\nconst toast = useToast()\n\nconst url = useReadonlyStream(gqlURL$, \"\")\nconst gqlQueryString = useStream(gqlQuery$, \"\", setGQLQuery)\nconst variableString = useStream(gqlVariables$, \"\", setGQLVariables)\n\nconst idTicker = ref(0)\n\nconst bulkMode = ref(false)\nconst bulkHeaders = ref(\"\")\nconst bulkEditor = ref<any | null>(null)\nconst linewrapEnabled = ref(true)\n\nconst deletionToast = ref<{ goAway: (delay: number) => void } | null>(null)\n\nuseCodemirror(\n  bulkEditor,\n  bulkHeaders,\n  reactive({\n    extendedEditorConfig: {\n      mode: \"text/x-yaml\",\n      placeholder: `${t(\"state.bulk_mode_placeholder\")}`,\n      lineWrapping: linewrapEnabled,\n    },\n    linter: null,\n    completer: null,\n    environmentHighlights: false,\n  })\n)\n\n// The functional headers list (the headers actually in the system)\nconst headers = useStream(gqlHeaders$, [], setGQLHeaders) as Ref<GQLHeader[]>\n\nconst auth = useStream(\n  gqlAuth$,\n  { authType: \"none\", authActive: true },\n  setGQLAuth\n)\n\n// The UI representation of the headers list (has the empty end header)\nconst workingHeaders = ref<Array<GQLHeader & { id: number }>>([\n  {\n    id: idTicker.value++,\n    key: \"\",\n    value: \"\",\n    active: true,\n  },\n])\n\n// Rule: Working Headers always have one empty header or the last element is always an empty header\nwatch(workingHeaders, (headersList) => {\n  if (\n    headersList.length > 0 &&\n    headersList[headersList.length - 1].key !== \"\"\n  ) {\n    workingHeaders.value.push({\n      id: idTicker.value++,\n      key: \"\",\n      value: \"\",\n      active: true,\n    })\n  }\n})\n\n// Sync logic between headers and working headers\nwatch(\n  headers,\n  (newHeadersList) => {\n    // Sync should overwrite working headers\n    const filteredWorkingHeaders = pipe(\n      workingHeaders.value,\n      A.filterMap(\n        flow(\n          O.fromPredicate((e) => e.key !== \"\"),\n          O.map(objRemoveKey(\"id\"))\n        )\n      )\n    )\n\n    const filteredBulkHeaders = pipe(\n      parseRawKeyValueEntriesE(bulkHeaders.value),\n      E.map(\n        flow(\n          RA.filter((e) => e.key !== \"\"),\n          RA.toArray\n        )\n      ),\n      E.getOrElse(() => [] as RawKeyValueEntry[])\n    )\n\n    if (!isEqual(newHeadersList, filteredWorkingHeaders)) {\n      workingHeaders.value = pipe(\n        newHeadersList,\n        A.map((x) => ({ id: idTicker.value++, ...x }))\n      )\n    }\n\n    if (!isEqual(newHeadersList, filteredBulkHeaders)) {\n      bulkHeaders.value = rawKeyValueEntriesToString(newHeadersList)\n    }\n  },\n  { immediate: true }\n)\n\nwatch(workingHeaders, (newWorkingHeaders) => {\n  const fixedHeaders = pipe(\n    newWorkingHeaders,\n    A.filterMap(\n      flow(\n        O.fromPredicate((e) => e.key !== \"\"),\n        O.map(objRemoveKey(\"id\"))\n      )\n    )\n  )\n\n  if (!isEqual(headers.value, fixedHeaders)) {\n    headers.value = cloneDeep(fixedHeaders)\n  }\n})\n\n// Bulk Editor Syncing with Working Headers\nwatch(bulkHeaders, (newBulkHeaders) => {\n  const filteredBulkHeaders = pipe(\n    parseRawKeyValueEntriesE(newBulkHeaders),\n    E.map(\n      flow(\n        RA.filter((e) => e.key !== \"\"),\n        RA.toArray\n      )\n    ),\n    E.getOrElse(() => [] as RawKeyValueEntry[])\n  )\n\n  if (!isEqual(headers.value, filteredBulkHeaders)) {\n    headers.value = filteredBulkHeaders\n  }\n})\n\nwatch(workingHeaders, (newHeadersList) => {\n  // If we are in bulk mode, don't apply direct changes\n  if (bulkMode.value) return\n\n  try {\n    const currentBulkHeaders = bulkHeaders.value.split(\"\\n\").map((item) => ({\n      key: item.substring(0, item.indexOf(\":\")).trimLeft().replace(/^#/, \"\"),\n      value: item.substring(item.indexOf(\":\") + 1).trimLeft(),\n      active: !item.trim().startsWith(\"#\"),\n    }))\n\n    const filteredHeaders = newHeadersList.filter((x) => x.key !== \"\")\n\n    if (!isEqual(currentBulkHeaders, filteredHeaders)) {\n      bulkHeaders.value = rawKeyValueEntriesToString(filteredHeaders)\n    }\n  } catch (e) {\n    toast.error(`${t(\"error.something_went_wrong\")}`)\n    console.error(e)\n  }\n})\n\nconst addHeader = () => {\n  workingHeaders.value.push({\n    id: idTicker.value++,\n    key: \"\",\n    value: \"\",\n    active: true,\n  })\n}\n\nconst updateHeader = (index: number, header: GQLHeader & { id: number }) => {\n  workingHeaders.value = workingHeaders.value.map((h, i) =>\n    i === index ? header : h\n  )\n}\n\nconst deleteHeader = (index: number) => {\n  const headersBeforeDeletion = clone(workingHeaders.value)\n\n  if (\n    !(\n      headersBeforeDeletion.length > 0 &&\n      index === headersBeforeDeletion.length - 1\n    )\n  ) {\n    if (deletionToast.value) {\n      deletionToast.value.goAway(0)\n      deletionToast.value = null\n    }\n\n    deletionToast.value = toast.success(`${t(\"state.deleted\")}`, {\n      action: [\n        {\n          text: `${t(\"action.undo\")}`,\n          onClick: (_, toastObject) => {\n            workingHeaders.value = headersBeforeDeletion\n            toastObject.goAway(0)\n            deletionToast.value = null\n          },\n        },\n      ],\n\n      onComplete: () => {\n        deletionToast.value = null\n      },\n    })\n  }\n\n  workingHeaders.value.splice(index, 1)\n}\n\nconst clearContent = () => {\n  // set headers list to the initial state\n  workingHeaders.value = [\n    {\n      id: idTicker.value++,\n      key: \"\",\n      value: \"\",\n      active: true,\n    },\n  ]\n\n  bulkHeaders.value = \"\"\n}\n\nconst activeGQLHeadersCount = computed(\n  () =>\n    headers.value.filter((x) => x.active && (x.key !== \"\" || x.value !== \"\"))\n      .length\n)\n\nconst variableEditor = ref<any | null>(null)\nconst linewrapEnabledVariable = ref(true)\n\nuseCodemirror(\n  variableEditor,\n  variableString,\n  reactive({\n    extendedEditorConfig: {\n      mode: \"application/ld+json\",\n      placeholder: `${t(\"request.variables\")}`,\n      lineWrapping: linewrapEnabledVariable,\n    },\n    linter: computed(() =>\n      variableString.value.length > 0 ? jsonLinter : null\n    ),\n    completer: null,\n    environmentHighlights: false,\n  })\n)\n\nconst queryEditor = ref<any | null>(null)\nconst schema = useReadonlyStream(props.conn.schema$, null, \"noclone\")\nconst linewrapEnabledQuery = ref(true)\n\nuseCodemirror(\n  queryEditor,\n  gqlQueryString,\n  reactive({\n    extendedEditorConfig: {\n      mode: \"graphql\",\n      placeholder: `${t(\"request.query\")}`,\n      lineWrapping: linewrapEnabledQuery,\n    },\n    linter: createGQLQueryLinter(schema),\n    completer: queryCompleter(schema),\n    environmentHighlights: false,\n  })\n)\n\nconst copyQueryIcon = refAutoReset<typeof IconCopy | typeof IconCheck>(\n  IconCopy,\n  1000\n)\nconst copyVariablesIcon = refAutoReset<typeof IconCopy | typeof IconCheck>(\n  IconCopy,\n  1000\n)\nconst prettifyQueryIcon = refAutoReset<\n  typeof IconWand2 | typeof IconCheck | typeof IconInfo\n>(IconWand2, 1000)\nconst prettifyVariablesIcon = refAutoReset<\n  typeof IconWand2 | typeof IconCheck | typeof IconInfo\n>(IconWand2, 1000)\n\nconst showSaveRequestModal = ref(false)\n\nconst copyQuery = () => {\n  copyToClipboard(gqlQueryString.value)\n  copyQueryIcon.value = IconCheck\n  toast.success(`${t(\"state.copied_to_clipboard\")}`)\n}\n\nconst response = useStream(gqlResponse$, \"\", setGQLResponse)\n\nconst runQuery = async () => {\n  const startTime = Date.now()\n\n  startPageProgress()\n  response.value = \"loading\"\n\n  try {\n    const runURL = clone(url.value)\n    const runHeaders = clone(headers.value)\n    const runQuery = clone(gqlQueryString.value)\n    const runVariables = clone(variableString.value)\n    const runAuth = clone(auth.value)\n\n    const responseText = await props.conn.runQuery(\n      runURL,\n      runHeaders,\n      runQuery,\n      runVariables,\n      runAuth\n    )\n    const duration = Date.now() - startTime\n\n    completePageProgress()\n\n    response.value = JSON.stringify(JSON.parse(responseText), null, 2)\n\n    addGraphqlHistoryEntry(\n      makeGQLHistoryEntry({\n        request: makeGQLRequest({\n          name: \"\",\n          url: runURL,\n          query: runQuery,\n          headers: runHeaders,\n          variables: runVariables,\n          auth: runAuth,\n        }),\n        response: response.value,\n        star: false,\n      })\n    )\n\n    toast.success(`${t(\"state.finished_in\", { duration })}`)\n  } catch (e: any) {\n    response.value = `${e}`\n    completePageProgress()\n\n    toast.error(\n      `${t(\"error.something_went_wrong\")}. ${t(\"error.check_console_details\")}`,\n      {}\n    )\n    console.error(e)\n  }\n\n  logHoppRequestRunToAnalytics({\n    platform: \"graphql-query\",\n    strategy: getCurrentStrategyID(),\n  })\n}\n\nconst hideRequestModal = () => {\n  showSaveRequestModal.value = false\n}\n\nconst prettifyQuery = () => {\n  try {\n    gqlQueryString.value = gql.print(gql.parse(gqlQueryString.value))\n    prettifyQueryIcon.value = IconCheck\n  } catch (e) {\n    toast.error(`${t(\"error.gql_prettify_invalid_query\")}`)\n    prettifyQueryIcon.value = IconInfo\n  }\n}\n\nconst saveRequest = () => {\n  showSaveRequestModal.value = true\n}\n\nconst copyVariables = () => {\n  copyToClipboard(variableString.value)\n  copyVariablesIcon.value = IconCheck\n  toast.success(`${t(\"state.copied_to_clipboard\")}`)\n}\n\nconst prettifyVariableString = () => {\n  try {\n    const jsonObj = JSON.parse(variableString.value)\n    variableString.value = JSON.stringify(jsonObj, null, 2)\n    prettifyVariablesIcon.value = IconCheck\n  } catch (e) {\n    console.error(e)\n    prettifyVariablesIcon.value = IconInfo\n    toast.error(`${t(\"error.json_prettify_invalid_body\")}`)\n  }\n}\n\nconst clearGQLQuery = () => {\n  gqlQueryString.value = \"\"\n}\n\nconst clearGQLVariables = () => {\n  variableString.value = \"\"\n}\n\ndefineActionHandler(\"request.send-cancel\", runQuery)\ndefineActionHandler(\"request.save\", saveRequest)\ndefineActionHandler(\"request.reset\", clearGQLQuery)\n</script>\n","<template>\n  <div\n    class=\"sticky top-0 z-10 flex flex-shrink-0 p-4 overflow-x-auto space-x-2 bg-primary\"\n  >\n    <div class=\"inline-flex flex-1 space-x-2\">\n      <input\n        id=\"url\"\n        v-model=\"url\"\n        type=\"url\"\n        autocomplete=\"off\"\n        spellcheck=\"false\"\n        class=\"w-full px-4 py-2 border rounded bg-primaryLight border-divider text-secondaryDark\"\n        :placeholder=\"`${t('request.url')}`\"\n        :disabled=\"connected\"\n        @keyup.enter=\"onConnectClick\"\n      />\n      <ButtonPrimary\n        id=\"get\"\n        name=\"get\"\n        :label=\"!connected ? t('action.connect') : t('action.disconnect')\"\n        class=\"w-32\"\n        @click=\"onConnectClick\"\n      />\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { logHoppRequestRunToAnalytics } from \"~/helpers/fb/analytics\"\nimport { GQLConnection } from \"~/helpers/GQLConnection\"\nimport { getCurrentStrategyID } from \"~/helpers/network\"\nimport { useReadonlyStream, useStream } from \"@composables/stream\"\nimport { useI18n } from \"@composables/i18n\"\nimport { gqlHeaders$, gqlURL$, setGQLURL } from \"~/newstore/GQLSession\"\n\nconst t = useI18n()\n\nconst props = defineProps<{\n  conn: GQLConnection\n}>()\n\nconst connected = useReadonlyStream(props.conn.connected$, false)\nconst headers = useReadonlyStream(gqlHeaders$, [])\n\nconst url = useStream(gqlURL$, \"\", setGQLURL)\n\nconst onConnectClick = () => {\n  if (!connected.value) {\n    props.conn.connect(url.value, headers.value as any)\n\n    logHoppRequestRunToAnalytics({\n      platform: \"graphql-schema\",\n      strategy: getCurrentStrategyID(),\n    })\n  } else {\n    props.conn.disconnect()\n  }\n}\n</script>\n","import { BehaviorSubject } from \"rxjs\"\nimport {\n  getIntrospectionQuery,\n  buildClientSchema,\n  GraphQLSchema,\n  printSchema,\n  GraphQLObjectType,\n  GraphQLInputObjectType,\n  GraphQLEnumType,\n  GraphQLInterfaceType,\n} from \"graphql\"\nimport { distinctUntilChanged, map } from \"rxjs/operators\"\nimport { GQLHeader, HoppGQLAuth } from \"@hoppscotch/data\"\nimport { sendNetworkRequest } from \"./network\"\n\nconst GQL_SCHEMA_POLL_INTERVAL = 7000\n\n/**\n  GQLConnection deals with all the operations (like polling, schema extraction) that runs\n  when a connection is made to a GraphQL server.\n*/\nexport class GQLConnection {\n  public isLoading$ = new BehaviorSubject<boolean>(false)\n  public connected$ = new BehaviorSubject<boolean>(false)\n  public schema$ = new BehaviorSubject<GraphQLSchema | null>(null)\n\n  public schemaString$ = this.schema$.pipe(\n    distinctUntilChanged(),\n    map((schema) => {\n      if (!schema) return null\n\n      return printSchema(schema, {\n        commentDescriptions: true,\n      })\n    })\n  )\n\n  public queryFields$ = this.schema$.pipe(\n    distinctUntilChanged(),\n    map((schema) => {\n      if (!schema) return null\n\n      const fields = schema.getQueryType()?.getFields()\n      if (!fields) return null\n\n      return Object.values(fields)\n    })\n  )\n\n  public mutationFields$ = this.schema$.pipe(\n    distinctUntilChanged(),\n    map((schema) => {\n      if (!schema) return null\n\n      const fields = schema.getMutationType()?.getFields()\n      if (!fields) return null\n\n      return Object.values(fields)\n    })\n  )\n\n  public subscriptionFields$ = this.schema$.pipe(\n    distinctUntilChanged(),\n    map((schema) => {\n      if (!schema) return null\n\n      const fields = schema.getSubscriptionType()?.getFields()\n      if (!fields) return null\n\n      return Object.values(fields)\n    })\n  )\n\n  public graphqlTypes$ = this.schema$.pipe(\n    distinctUntilChanged(),\n    map((schema) => {\n      if (!schema) return null\n\n      const typeMap = schema.getTypeMap()\n\n      const queryTypeName = schema.getQueryType()?.name ?? \"\"\n      const mutationTypeName = schema.getMutationType()?.name ?? \"\"\n      const subscriptionTypeName = schema.getSubscriptionType()?.name ?? \"\"\n\n      return Object.values(typeMap).filter((type) => {\n        return (\n          !type.name.startsWith(\"__\") &&\n          ![queryTypeName, mutationTypeName, subscriptionTypeName].includes(\n            type.name\n          ) &&\n          (type instanceof GraphQLObjectType ||\n            type instanceof GraphQLInputObjectType ||\n            type instanceof GraphQLEnumType ||\n            type instanceof GraphQLInterfaceType)\n        )\n      })\n    })\n  )\n\n  private timeoutSubscription: any\n\n  public connect(url: string, headers: GQLHeader[]) {\n    if (this.connected$.value) {\n      throw new Error(\n        \"A connection is already running. Close it before starting another.\"\n      )\n    }\n\n    // Polling\n    this.connected$.next(true)\n\n    const poll = async () => {\n      await this.getSchema(url, headers)\n      this.timeoutSubscription = setTimeout(() => {\n        poll()\n      }, GQL_SCHEMA_POLL_INTERVAL)\n    }\n    poll()\n  }\n\n  public disconnect() {\n    if (!this.connected$.value) {\n      throw new Error(\"No connections are running to be disconnected\")\n    }\n\n    clearTimeout(this.timeoutSubscription)\n    this.connected$.next(false)\n  }\n\n  public reset() {\n    if (this.connected$.value) this.disconnect()\n\n    this.isLoading$.next(false)\n    this.connected$.next(false)\n    this.schema$.next(null)\n  }\n\n  private async getSchema(url: string, headers: GQLHeader[]) {\n    try {\n      this.isLoading$.next(true)\n\n      const introspectionQuery = JSON.stringify({\n        query: getIntrospectionQuery(),\n      })\n\n      const finalHeaders: Record<string, string> = {}\n      headers\n        .filter((x) => x.active && x.key !== \"\")\n        .forEach((x) => (finalHeaders[x.key] = x.value))\n\n      const reqOptions = {\n        method: \"POST\",\n        url,\n        headers: {\n          ...finalHeaders,\n          \"content-type\": \"application/json\",\n        },\n        data: introspectionQuery,\n      }\n\n      const data = await sendNetworkRequest(reqOptions)\n\n      // HACK : Temporary trailing null character issue from the extension fix\n      const response = new TextDecoder(\"utf-8\")\n        .decode(data.data)\n        .replace(/\\0+$/, \"\")\n\n      const introspectResponse = JSON.parse(response)\n\n      const schema = buildClientSchema(introspectResponse.data)\n\n      this.schema$.next(schema)\n\n      this.isLoading$.next(false)\n    } catch (e: any) {\n      console.error(e)\n      this.disconnect()\n    }\n  }\n\n  public async runQuery(\n    url: string,\n    headers: GQLHeader[],\n    query: string,\n    variables: string,\n    auth: HoppGQLAuth\n  ) {\n    const finalHeaders: Record<string, string> = {}\n\n    const parsedVariables = JSON.parse(variables || \"{}\")\n\n    const params: Record<string, string> = {}\n\n    if (auth.authActive) {\n      if (auth.authType === \"basic\") {\n        const username = auth.username\n        const password = auth.password\n        finalHeaders.Authorization = `Basic ${btoa(`${username}:${password}`)}`\n      } else if (auth.authType === \"bearer\" || auth.authType === \"oauth-2\") {\n        finalHeaders.Authorization = `Bearer ${auth.token}`\n      } else if (auth.authType === \"api-key\") {\n        const { key, value, addTo } = auth\n        if (addTo === \"Headers\") {\n          finalHeaders[key] = value\n        } else if (addTo === \"Query params\") {\n          params[key] = value\n        }\n      }\n    }\n\n    headers\n      .filter((item) => item.active && item.key !== \"\")\n      .forEach(({ key, value }) => (finalHeaders[key] = value))\n\n    const reqOptions = {\n      method: \"POST\",\n      url,\n      headers: {\n        ...finalHeaders,\n        \"content-type\": \"application/json\",\n      },\n      data: JSON.stringify({\n        query,\n        variables: parsedVariables,\n      }),\n      params: {\n        ...params,\n      },\n    }\n\n    const res = await sendNetworkRequest(reqOptions)\n\n    // HACK: Temporary trailing null character issue from the extension fix\n    const responseText = new TextDecoder(\"utf-8\")\n      .decode(res.data)\n      .replace(/\\0+$/, \"\")\n\n    return responseText\n  }\n}\n","<template>\n  <AppPaneLayout layout-id=\"graphql\">\n    <template #primary>\n      <GraphqlRequest :conn=\"gqlConn\" />\n      <GraphqlRequestOptions :conn=\"gqlConn\" />\n    </template>\n    <template #secondary>\n      <GraphqlResponse :conn=\"gqlConn\" />\n    </template>\n    <template #sidebar>\n      <GraphqlSidebar :conn=\"gqlConn\" />\n    </template>\n  </AppPaneLayout>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, onBeforeUnmount, watch } from \"vue\"\nimport { useReadonlyStream } from \"@composables/stream\"\nimport { useI18n } from \"@composables/i18n\"\nimport { usePageHead } from \"@composables/head\"\nimport { startPageProgress, completePageProgress } from \"@modules/loadingbar\"\nimport { GQLConnection } from \"@helpers/GQLConnection\"\n\nconst t = useI18n()\n\nusePageHead({\n  title: computed(() => t(\"navigation.graphql\")),\n})\n\nconst gqlConn = new GQLConnection()\nconst isLoading = useReadonlyStream(gqlConn.isLoading$, false)\n\nonBeforeUnmount(() => {\n  if (gqlConn.connected$.value) {\n    gqlConn.disconnect()\n  }\n})\n\nwatch(isLoading, () => {\n  if (isLoading.value) startPageProgress()\n  else completePageProgress()\n})\n</script>\n"],"names":["find","list","predicate","_i2","value","find$1","objectValues","obj","key","objectValues$2","locatedError","rawOriginalError","nodes","path","_nodes","originalError","inspect","GraphQLError","NAME_RX","isValidNameError","name","devAssert","objectEntries","objectEntries$1","keyMap","keyFn","map","item","mapValue","fn","result","_objectEntries2","_ref2","_key","_value","toObjMap","keyValMap","valFn","MAX_SUGGESTIONS","didYouMean","firstArg","secondArg","_ref","subMessage","suggestionsArg","message","suggestions","x","selected","lastItem","identityFunc","naturalCompare","aStr","bStr","aIdx","bIdx","aChar","bChar","isDigit","aNum","DIGIT_0","bNum","DIGIT_9","code","suggestionList","input","options","optionsByDistance","lexicalDistance","LexicalDistance","threshold","option","distance","a","b","distanceDiff","stringToArray","_proto","optionLowerCase","tmp","aLength","bLength","rows","j","i","upRow","currentRow","smallestCell","_j","cost","currentCell","doubleDiagonalCell","str","strLength","array","valueFromASTUntyped","valueNode","variables","Kind","node","field","invariant","_defineProperties","target","props","descriptor","_createClass","Constructor","protoProps","staticProps","isType","type","isScalarType","isObjectType","isInterfaceType","isUnionType","isEnumType","isInputObjectType","isListType","isNonNullType","assertType","instanceOf","GraphQLScalarType","GraphQLObjectType","assertObjectType","GraphQLInterfaceType","assertInterfaceType","GraphQLUnionType","GraphQLEnumType","GraphQLInputObjectType","GraphQLList","GraphQLNonNull","isInputType","isWrappingType","isOutputType","isLeafType","isCompositeType","isAbstractType","assertAbstractType","ofType","SYMBOL_TO_STRING_TAG","defineInspect","assertNullableType","isNullableType","getNullableType","isNamedType","getNamedType","unwrappedType","resolveThunk","thunk","undefineIfEmpty","arr","config","_config$parseValue","_config$serialize","_config$parseLiteral","parseValue","_this$extensionASTNod","defineFieldMap","defineInterfaces","_proto2","fieldsToFieldsConfig","_resolveThunk","interfaces","fieldMap","isPlainObj","fieldConfig","fieldName","_fieldConfig$args","argsConfig","args","argName","argConfig","isObjectLike","fields","argsToArgsConfig","arg","isRequiredArgument","_proto3","_this$extensionASTNod2","defineTypes","_proto4","_this$extensionASTNod3","types","defineEnumValues","enumValue","_proto5","outputValue","inputValue","valueStr","didYouMeanEnumValue","_variables","print","_valueStr","_this$extensionASTNod4","values","enumType","unknownValueStr","allNames","suggestedValues","typeName","valueMap","valueName","valueConfig","defineInputFieldMap","_proto6","_this$extensionASTNod5","isRequiredInputField","isEqualType","typeA","typeB","isTypeSubTypeOf","schema","maybeSubType","superType","doTypesOverlap","arrayFrom","mapFn","thisArg","iteratorMethod","SYMBOL_ITERATOR","iterator","step","length","_result","_i","arrayFrom$1","isFinitePolyfill","isFinite$1","_typeof","safeArrayFrom","collection","isInteger","isInteger$1","MAX_INT","MIN_INT","serializeInt","coercedValue","serializeObject","num","coerceInt","GraphQLInt","serializeFloat","isFinite","coerceFloat","GraphQLFloat","valueOfResult","serializeString","coerceString","GraphQLString","serializeBoolean","coerceBoolean","GraphQLBoolean","serializeID","coerceID","GraphQLID","specifiedScalarTypes","isSpecifiedScalarType","astFromValue","astValue","itemType","items","valuesNodes","itemNode","fieldNodes","_i4","_objectValues2","fieldValue","serialized","stringNum","integerStringRegExp","__Schema","__Type","__Directive","directive","__DirectiveLocation","__InputValue","includeDeprecated","DirectiveLocation","__TypeKind","TypeKind","__Field","_args","_context","_ref3","__EnumValue","_ref4","_ref5","_ref6","defaultValue","valueAST","SchemaMetaFieldDef","_source","_ref7","TypeMetaFieldDef","_ref8","_ref9","TypeNameMetaFieldDef","_ref10","parentType","introspectionTypes","isIntrospectionType","_ref11","isDirective","GraphQLDirective","_config$isRepeatable","_config$args","GraphQLIncludeDirective","GraphQLSkipDirective","DEFAULT_DEPRECATION_REASON","GraphQLDeprecatedDirective","GraphQLSpecifiedByDirective","specifiedDirectives","isSpecifiedDirective","isSchema","GraphQLSchema","assertSchema","_config$directives","allReferencedTypes","_config$types2","collectReferencedTypes","_this$_directives2","_i6","_directive$args2","_i8","_arrayFrom2","namedType","_i10","_namedType$getInterfa2","iface","implementations","_i12","_namedType$getInterfa4","_iface","_implementations","abstractType","interfaceType","possibleType","_i14","_abstractType$getType2","_i16","_implementations$obje2","_type","_i18","_implementations$inte2","_type2","typeSet","_i20","_namedType$getTypes2","memberType","_i22","_namedType$getInterfa6","_i24","_i26","_field$args2","_i28","_objectValues4","_field","validateSchema","context","SchemaValidationContext","validateRootTypes","validateDirectives","validateTypes","errors","assertValidSchema","error","queryType","_getOperationTypeNode","getOperationTypeNode","mutationType","_getOperationTypeNode2","subscriptionType","_getOperationTypeNode3","operation","operationNodes","getAllSubNodes","_context$schema$getDi2","validateName","_arg$astNode","getDeprecatedDirectiveNode","validateInputObjectCircularRefs","createInputObjectCircularRefsValidator","typeMap","validateFields","validateInterfaces","validateUnionMembers","validateEnumValues","validateInputFields","getAllNodes","_field$astNode","_arg$astNode2","_arg$astNode3","ifaceTypeNames","_type$getInterfaces2","getAllImplementsInterfaceNodes","validateTypeImplementsAncestors","validateTypeImplementsInterface","typeFieldMap","ifaceField","typeField","_ifaceField$astNode","_typeField$astNode","_loop","_ifaceField$args2","ifaceArg","typeArg","_ifaceArg$astNode","_typeArg$astNode","_ret","_loop2","_typeField$args2","ifaceInterfaces","_iface$getInterfaces2","transitive","union","memberTypes","includedTypeNames","getUnionMemberTypeNodes","enumValues","inputObj","_field$astNode2","_field$astNode3","visitedTypes","fieldPath","fieldPathIndexByTypeName","detectCycleRecursive","_i30","fieldType","cycleIndex","cyclePath","pathStr","fieldObj","object","astNode","extensionASTNodes","getter","subNodes","_i32","_getAllNodes2","_getter","typeNode","ifaceNode","unionNode","definitionNode","_definitionNode$direc","typeFromAST","innerType","TypeInfo","getFieldDefFn","initialType","getFieldDef","fieldDef","typeConditionAST","outputType","inputType","_this$getDirective","argDef","argType","fieldOrDirective","listType","objectType","inputFieldType","inputField","fieldNode","visitWithTypeInfo","typeInfo","visitor","getVisitFn","isNode","isExecutableDefinitionNode","isTypeSystemDefinitionNode","isTypeDefinitionNode","isTypeSystemExtensionNode","isTypeExtensionNode","ExecutableDefinitionsRule","_node$definitions2","definition","defName","UniqueOperationNamesRule","knownOperationNames","operationName","LoneAnonymousOperationRule","operationCount","SingleFieldSubscriptionsRule","KnownTypeNamesRule","existingTypesMap","definedTypes","_context$getDocument$2","def","typeNames","_1","parent","_2","ancestors","_ancestors$","isSDL","isSDLNode","isStandardTypeName","suggestedTypes","standardTypeNames","FragmentsOnCompositeTypesRule","typeCondition","typeStr","VariablesAreInputTypesRule","variableName","ScalarLeafsRule","selectionSet","_fieldName","_typeStr","FieldsOnCorrectTypeRule","suggestion","getSuggestedTypeNames","getSuggestedFieldNames","usageCount","_schema$getPossibleTy2","_possibleType$getInte2","_usageCount$possibleI","possibleInterface","usageCountDiff","possibleFieldNames","UniqueFragmentNamesRule","knownFragmentNames","fragmentName","KnownFragmentNamesRule","fragment","NoUnusedFragmentsRule","operationDefs","fragmentDefs","fragmentNameUsed","_context$getRecursive2","fragmentDef","fragName","PossibleFragmentSpreadsRule","fragType","parentTypeStr","fragTypeStr","getFragmentType","frag","NoFragmentCyclesRule","visitedFrags","spreadPath","spreadPathIndexByName","spreadNodes","spreadNode","spreadName","spreadFragment","viaPath","s","UniqueVariableNamesRule","knownVariableNames","NoUndefinedVariablesRule","variableNameDefined","usages","varName","NoUnusedVariablesRule","variableDefs","variableNameUsed","_variableDefs2","variableDef","KnownDirectivesRule","locationsMap","definedDirectives","astDefinitions","_parent","_path","locations","candidateLocation","getDirectiveLocationForASTPath","appliedTo","getDirectiveLocationForOperation","parentNode","UniqueDirectivesPerLocationRule","uniqueDirectiveMap","schemaDirectives","typeDirectivesMap","seenDirectives","_node$directives2","_directive","directiveName","ownKeys","enumerableOnly","keys","symbols","sym","_objectSpread","source","_defineProperty","KnownArgumentNamesRule","KnownArgumentNamesOnDirectivesRule","argNode","knownArgsNames","directiveArgs","_def$arguments","argsNodes","directiveNode","knownArgs","_directiveNode$argume2","UniqueArgumentNamesRule","knownArgNames","ValuesOfCorrectTypeRule","isValidValueNode","fieldNodeMap","locationType","parseResult","_typeStr2","ProvidedRequiredArgumentsRule","ProvidedRequiredArgumentsOnDirectivesRule","_fieldNode$arguments","argNodes","argNodeMap","_fieldDef$args2","argTypeStr","requiredArgsMap","isRequiredArgumentNode","requiredArgs","_directiveNode$argume","_argNodes","_Object$keys2","VariablesInAllowedPositionRule","varDefMap","varDef","varType","allowedVariableUsage","varTypeStr","varDefaultValue","locationDefaultValue","hasNonNullVariableDefaultValue","hasLocationDefaultValue","nullableLocationType","reasonMessage","reason","responseName","subReason","OverlappingFieldsCanBeMergedRule","comparedFragmentPairs","PairSet","cachedFieldsAndFragmentNames","conflicts","findConflictsWithinSelectionSet","_ref2$","fields1","fields2","reasonMsg","_getFieldsAndFragment","getFieldsAndFragmentNames","fragmentNames","collectConflictsWithin","collectConflictsBetweenFieldsAndFragment","collectConflictsBetweenFragments","areMutuallyExclusive","_getReferencedFieldsA","getReferencedFieldsAndFragmentNames","fieldMap2","fragmentNames2","collectConflictsBetween","fragmentName1","fragmentName2","fragment1","fragment2","_getReferencedFieldsA2","fieldMap1","fragmentNames1","_getReferencedFieldsA3","findConflictsBetweenSubSelectionSets","parentType1","selectionSet1","parentType2","selectionSet2","_getFieldsAndFragment2","_getFieldsAndFragment3","_i3","_i5","conflict","findConflict","parentFieldsAreMutuallyExclusive","_i7","field1","field2","node1","def1","node2","def2","_node1$arguments","_node2$arguments","name1","name2","args1","args2","sameArguments","type1","type2","doTypesConflict","subfieldConflicts","arguments1","arguments2","argument1","argument2","argument","sameValue","value1","value2","cached","nodeAndDefs","_collectFieldsAndFragmentNames","fragmentType","_i9","_selectionSet$selecti2","selection","inlineFragmentType","allFields","first","UniqueInputFieldNamesRule","knownNameStack","knownNames","LoneSchemaDefinitionRule","_oldSchema$astNode","oldSchema","alreadyDefined","schemaDefinitionsCount","UniqueOperationTypesRule","definedOperationTypes","existingOperationTypes","checkOperationTypes","_node$operationTypes","operationTypesNodes","operationType","alreadyDefinedOperationType","UniqueTypeNamesRule","knownTypeNames","checkTypeName","UniqueEnumValueNamesRule","existingTypeMap","knownValueNames","checkValueUniqueness","_node$values","valueNodes","valueNames","valueDef","existingType","UniqueFieldDefinitionNamesRule","knownFieldNames","checkFieldUniqueness","_node$fields","fieldNames","hasField","UniqueDirectiveNamesRule","knownDirectiveNames","_defKindToExtKind","PossibleTypeExtensionsRule","checkExtension","defNode","expectedKind","defKindToExtKind","typeToExtKind","kindStr","extensionKindToTypeName","allTypeNames","kind","specifiedRules","_inheritsLoose","subClass","superClass","ASTValidationContext","ast","onError","fragments","frags","statement","spreads","setsToVisit","set","_set$selections2","collectedNames","nodesToVisit","_this$getFragmentSpre2","spread","ValidationContext","_ASTValidationContext2","_this2","newUsages","visit","variable","_this$getRecursivelyR2","validate","documentAST","rules","abortObj","visitInParallel","rule","e","valueFromAST","variableValue","coercedValues","_valueNode$values2","isMissingVariable","itemValue","coercedObj","getIntrospectionQuery","optionsWithDefault","descriptions","specifiedByUrl","directiveIsRepeatable","schemaDescription","inputDeprecation","buildClientSchema","introspection","schemaIntrospection","typeIntrospection","buildType","stdType","getObjectType","directives","buildDirective","getType","typeRef","itemRef","nullableRef","nullableType","getInterfaceType","buildScalarDef","buildObjectDef","buildInterfaceDef","buildUnionDef","buildEnumDef","buildInputObjectDef","scalarIntrospection","buildImplementationsList","implementingIntrospection","implementingIntrospectionStr","objectIntrospection","buildFieldDefMap","interfaceIntrospection","unionIntrospection","unionIntrospectionStr","enumIntrospection","enumIntrospectionStr","valueIntrospection","inputObjectIntrospection","inputObjectIntrospectionStr","buildInputValueDefMap","fieldIntrospection","buildField","fieldIntrospectionStr","inputValueIntrospections","buildInputValue","inputValueIntrospection","directiveIntrospection","directiveIntrospectionStr","_directiveIntrospectionStr","printSchema","printFilteredSchema","isDefinedType","directiveFilter","typeFilter","printSchemaDefinition","printDirective","printType","isSchemaOfCommonNames","operationTypes","printDescription","printScalar","printObject","printInterface","printUnion","printEnum","printInputObject","printSpecifiedByUrl","printImplementedInterfaces","printFields","possibleTypes","printDeprecated","printBlock","f","printInputValue","printArgs","indentation","defaultAST","argDecl","reasonAST","scalar","url","urlAST","firstInBlock","description","printDescriptionWithComments","preferMultipleLines","blockString","printBlockString","prefix","comment","line","_sfc_main$8","defineComponent","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","_normalizeClass","_sfc_main","_hoisted_6","_withScopeId","_createElementVNode","_hoisted_7","_createTextVNode","_toDisplayString","_openBlock","_createElementBlock","_Fragment","_renderList","index","_hoisted_2","_hoisted_3","_hoisted_8","_hoisted_9","_hoisted_11","_hoisted_13","_hoisted_5","gqlInterface","child","selectedNavigationTab","ref","selectedGqlTab","t","useI18n","colorMode","useColorMode","isTextFoundInGraphqlFieldObject","text","normalizedText","isFilterTextFoundInDescription","isFilterTextFoundInName","getFilteredGraphqlFields","filterText","getFilteredGraphqlTypes","resolveRootType","t2","toast","useToast","queryFields","useReadonlyStream","mutationFields","subscriptionFields","graphqlTypes","downloadSchemaIcon","refAutoReset","IconDownload","copySchemaIcon","IconCopy","graphqlFieldsFilterText","filteredQueryFields","computed","filteredMutationFields","filteredSubscriptionFields","filteredGraphqlTypes","isGqlTypeHighlighted","gqlType","getGqlTypeHighlightedFields","handleJumpToType","nextTick","rootTypeName","schemaString","schemaEditor","linewrapEnabled","useCodemirror","reactive","downloadSchema","dataToWrite","file","IconCheck","copySchema","copyToClipboard","handleUseHistory","entry","headers","gqlQueryString","variableString","responseText","setGQLURL","setGQLHeaders","setGQLQuery","setGQLVariables","setGQLResponse","setGQLAuth","responseString","gqlResponse$","downloadResponseIcon","copyResponseIcon","copyResponse","downloadResponse","defineActionHandler","auth","useStream","gqlAuth$","authType","pluckRef","authName","authActive","basicUsername","basicPassword","bearerToken","oauth2Token","apiKey","apiValue","addTo","clearContent","tippyActions","authTippyActions","createGQLQueryLinter","doc","gqlParse","results","gqlValidate","err","getDefinitionState","tokenState","definitionState","forEachState","state","stack","reverseStateStack","len","hintList","token","filterAndSortList","normalizeText","filterNonEmpty","byProximity","getProximity","pair","filtered","proximity","d","DocumentUri","is","URI","integer","uinteger","Position","create","character","candidate","Is","Range","one","two","three","four","Location","uri","range","LocationLink","targetUri","targetRange","targetSelectionRange","originSelectionRange","Color","red","green","blue","alpha","ColorInformation","color","ColorPresentation","label","textEdit","additionalTextEdits","TextEdit","FoldingRangeKind","FoldingRange","startLine","endLine","startCharacter","endCharacter","collapsedText","DiagnosticRelatedInformation","location","DiagnosticSeverity","DiagnosticTag","CodeDescription","Diagnostic","severity","relatedInformation","_a","Command","title","command","replace","newText","insert","position","del","ChangeAnnotation","needsConfirmation","ChangeAnnotationIdentifier","AnnotatedTextEdit","annotation","TextDocumentEdit","textDocument","edits","OptionalVersionedTextDocumentIdentifier","CreateFile","RenameFile","oldUri","newUri","DeleteFile","WorkspaceEdit","change","TextEditChangeImpl","changeAnnotations","edit","id","ChangeAnnotations","annotations","idOrAnnotation","WorkspaceChange","workspaceEdit","_this","textEditChange","textDocumentEdit","optionsOrAnnotation","TextDocumentIdentifier","VersionedTextDocumentIdentifier","version","TextDocumentItem","languageId","MarkupKind","MarkupContent","CompletionItemKind","InsertTextFormat","CompletionItemTag","InsertReplaceEdit","InsertTextMode","CompletionItemLabelDetails","CompletionItem","CompletionList","isIncomplete","MarkedString","fromPlainText","plainText","Hover","ParameterInformation","documentation","SignatureInformation","parameters","DocumentHighlightKind","DocumentHighlight","SymbolKind","SymbolTag","SymbolInformation","containerName","WorkspaceSymbol","DocumentSymbol","detail","selectionRange","children","CodeActionKind","CodeActionTriggerKind","CodeActionContext","diagnostics","only","triggerKind","CodeAction","kindOrCommandOrEdit","checkKind","CodeLens","data","FormattingOptions","tabSize","insertSpaces","DocumentLink","SelectionRange","SemanticTokenTypes","SemanticTokenModifiers","SemanticTokens","InlineValueText","InlineValueVariableLookup","caseSensitiveLookup","InlineValueEvaluatableExpression","expression","InlineValueContext","frameId","stoppedLocation","InlayHintKind","InlayHintLabelPart","InlayHint","WorkspaceFolder","TextDocument","content","FullTextDocument","applyEdits","document","sortedEdits","mergeSort","diff","lastModifiedOffset","startOffset","endOffset","compare","p","left","right","leftIdx","rightIdx","ret","start","end","event","lineOffsets","isLineStart","ch","offset","low","high","mid","lineOffset","nextLineOffset","toString","defined","undefined","boolean","string","number","numberRange","min","max","func","objectLiteral","typedArray","check","CharacterStream","sourceText","char","pattern","match","isMatched","didEat","consume","caseFold","indent","whitespaces","pos","opt","ofRule","separator","butNot","exclusions","ruleMatch","exclusion","style","isIgnored","LexRules","ParseRules","word","stream","onlineParser","initialState","pushRule","getToken","lexRules","parseRules","eatWhitespace","editorConfig","popRule","advanceRule","lex","SpecialParseRules","backupState","assign","levels","expected","unsuccessful","to","from","ruleKind","successful","isList","kinds","AdditionalRuleKinds","RuleKinds","SuggestionCommand","collectFragmentDefs","op","externalFragments","parse","getAutocompleteSuggestions","queryText","cursor","contextToken","opts","getTokenAtPosition","getTypeInfo","getSuggestionsForImplements","getSuggestionsForFieldNames","argDefs","objectFields","completionKind","getSuggestionsForInputValues","namedInputType","variableDefinitions","getVariableCompletions","v","getSuggestionsForFragmentTypeConditions","getSuggestionsForFragmentSpread","getSuggestionsForVariableDefinition","getSuggestionsForDirective","insertSuffix","getInsertText","insertText","queryVariables","documentText","schemaInterfaces","schemaInterfaceNames","inlineInterfaces","runOnlineParser","_","_b","_c","_d","_e","interfaceConfig","objectTypeConfig","currentTypeToExtend","siblingInterfaceNames","possibleInterfaces","_kind","possibleObjTypes","possibleIfaceMap","defState","getFragmentDefinitions","relevantFrags","getParentDefinition","_f","_g","_h","_k","variableType","definitions","parentDefinition","inputTypeMap","inputTypes","canUseDirective","styleAtCursor","stateAtCursor","stringAtCursor","callback","lines","parser","directiveDef","objectTypeDef","objectFieldDefs","interfaceDef","val","objectField","nullthrows","nullthrowsModule","nullthrows_1","this","completer","schemaRef","completePos","completions","selectedOptionTab","gqlURL$","gqlQuery$","gqlVariables$","idTicker","bulkMode","bulkHeaders","bulkEditor","deletionToast","gqlHeaders$","workingHeaders","watch","headersList","newHeadersList","filteredWorkingHeaders","pipe","A.filterMap","flow","O.fromPredicate","O.map","objRemoveKey","filteredBulkHeaders","parseRawKeyValueEntriesE","E.map","RA.filter","RA.toArray","E.getOrElse","isEqual","A.map","rawKeyValueEntriesToString","newWorkingHeaders","fixedHeaders","cloneDeep","newBulkHeaders","currentBulkHeaders","filteredHeaders","addHeader","updateHeader","header","h","deleteHeader","headersBeforeDeletion","clone","toastObject","activeGQLHeadersCount","variableEditor","linewrapEnabledVariable","jsonLinter","queryEditor","linewrapEnabledQuery","queryCompleter","copyQueryIcon","copyVariablesIcon","prettifyQueryIcon","IconWand2","prettifyVariablesIcon","showSaveRequestModal","copyQuery","response","runQuery","startTime","startPageProgress","runURL","runHeaders","runQuery2","runVariables","runAuth","duration","completePageProgress","addGraphqlHistoryEntry","makeGQLHistoryEntry","makeGQLRequest","logHoppRequestRunToAnalytics","getCurrentStrategyID","hideRequestModal","prettifyQuery","gql.print","gql.parse","IconInfo","saveRequest","copyVariables","prettifyVariableString","jsonObj","clearGQLQuery","clearGQLVariables","connected","onConnectClick","GQL_SCHEMA_POLL_INTERVAL","GQLConnection","__publicField","BehaviorSubject","distinctUntilChanged","queryTypeName","mutationTypeName","subscriptionTypeName","poll","introspectionQuery","finalHeaders","reqOptions","sendNetworkRequest","introspectResponse","query","parsedVariables","params","username","password","res","usePageHead","gqlConn","isLoading","onBeforeUnmount"],"mappings":"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"}