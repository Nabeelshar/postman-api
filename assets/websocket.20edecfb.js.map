{"version":3,"file":"websocket.20edecfb.js","sources":["../../../hoppscotch-common/src/pages/realtime/websocket.vue"],"sourcesContent":["<template>\n  <AppPaneLayout layout-id=\"websocket\">\n    <template #primary>\n      <div\n        class=\"sticky top-0 z-10 flex flex-shrink-0 p-4 space-x-2 overflow-x-auto bg-primary\"\n      >\n        <div class=\"inline-flex flex-1 space-x-2\">\n          <input\n            id=\"websocket-url\"\n            v-model=\"url\"\n            class=\"w-full px-4 py-2 border rounded bg-primaryLight border-divider text-secondaryDark\"\n            type=\"url\"\n            autocomplete=\"off\"\n            spellcheck=\"false\"\n            :class=\"{ error: !isUrlValid }\"\n            :placeholder=\"`${t('websocket.url')}`\"\n            :disabled=\"\n              connectionState === 'CONNECTED' ||\n              connectionState === 'CONNECTING'\n            \"\n            @keyup.enter=\"isUrlValid ? toggleConnection() : null\"\n          />\n          <ButtonPrimary\n            id=\"connect\"\n            :disabled=\"!isUrlValid\"\n            class=\"w-32\"\n            name=\"connect\"\n            :label=\"\n              connectionState === 'CONNECTING'\n                ? t('action.connecting')\n                : connectionState === 'DISCONNECTED'\n                ? t('action.connect')\n                : t('action.disconnect')\n            \"\n            :loading=\"connectionState === 'CONNECTING'\"\n            @click=\"toggleConnection\"\n          />\n        </div>\n      </div>\n      <SmartTabs\n        v-model=\"selectedTab\"\n        styles=\"sticky overflow-x-auto flex-shrink-0 bg-primary top-upperPrimaryStickyFold z-10\"\n        render-inactive-tabs\n      >\n        <SmartTab\n          :id=\"'communication'\"\n          :label=\"`${t('websocket.communication')}`\"\n        >\n          <RealtimeCommunication\n            :is-connected=\"connectionState === 'CONNECTED'\"\n            sticky-header-styles=\"top-upperSecondaryStickyFold\"\n            @send-message=\"sendMessage($event)\"\n          />\n        </SmartTab>\n        <SmartTab :id=\"'protocols'\" :label=\"`${t('websocket.protocols')}`\">\n          <div\n            class=\"sticky z-10 flex items-center justify-between flex-shrink-0 pl-4 overflow-x-auto border-b bg-primary border-dividerLight top-upperSecondaryStickyFold\"\n          >\n            <label class=\"font-semibold truncate text-secondaryLight\">\n              {{ t(\"websocket.protocols\") }}\n            </label>\n            <div class=\"flex\">\n              <ButtonSecondary\n                v-tippy=\"{ theme: 'tooltip' }\"\n                :title=\"t('action.clear_all')\"\n                :icon=\"IconTrash2\"\n                @click=\"clearContent\"\n              />\n              <ButtonSecondary\n                v-tippy=\"{ theme: 'tooltip' }\"\n                :title=\"t('add.new')\"\n                :icon=\"IconPlus\"\n                @click=\"addProtocol\"\n              />\n            </div>\n          </div>\n          <draggable\n            v-model=\"protocolsWithID\"\n            item-key=\"id\"\n            animation=\"250\"\n            handle=\".draggable-handle\"\n            draggable=\".draggable-content\"\n            ghost-class=\"cursor-move\"\n            chosen-class=\"bg-primaryLight\"\n            drag-class=\"cursor-grabbing\"\n          >\n            <template #item=\"{ element: { protocol }, index }\">\n              <div\n                class=\"flex border-b divide-x divide-dividerLight border-dividerLight draggable-content group\"\n              >\n                <span>\n                  <ButtonSecondary\n                    v-tippy=\"{\n                      theme: 'tooltip',\n                      delay: [500, 20],\n                      content:\n                        index !== protocols?.length - 1\n                          ? t('action.drag_to_reorder')\n                          : null,\n                    }\"\n                    :icon=\"IconGripVertical\"\n                    class=\"cursor-auto text-primary hover:text-primary\"\n                    :class=\"{\n                      'draggable-handle group-hover:text-secondaryLight !cursor-grab':\n                        index !== protocols?.length - 1,\n                    }\"\n                    tabindex=\"-1\"\n                  />\n                </span>\n                <input\n                  v-model=\"protocol.value\"\n                  class=\"flex flex-1 px-4 py-2 bg-transparent\"\n                  :placeholder=\"`${t('count.protocol', { count: index + 1 })}`\"\n                  name=\"message\"\n                  type=\"text\"\n                  autocomplete=\"off\"\n                  @change=\"\n                    updateProtocol(index, {\n                      value: ($event.target as HTMLInputElement).value,\n                      active: protocol.active,\n                    })\n                  \"\n                />\n                <span>\n                  <ButtonSecondary\n                    v-tippy=\"{ theme: 'tooltip' }\"\n                    :title=\"\n                      protocol.hasOwnProperty('active')\n                        ? protocol.active\n                          ? t('action.turn_off')\n                          : t('action.turn_on')\n                        : t('action.turn_off')\n                    \"\n                    :icon=\"\n                      protocol.hasOwnProperty('active')\n                        ? protocol.active\n                          ? IconCheckCircle\n                          : IconCircle\n                        : IconCheckCircle\n                    \"\n                    color=\"green\"\n                    @click=\"\n                      updateProtocol(index, {\n                        value: protocol.value,\n                        active: !protocol.active,\n                      })\n                    \"\n                  />\n                </span>\n                <span>\n                  <ButtonSecondary\n                    v-tippy=\"{ theme: 'tooltip' }\"\n                    :title=\"t('action.remove')\"\n                    :icon=\"IconTrash\"\n                    color=\"red\"\n                    @click=\"deleteProtocol(index)\"\n                  />\n                </span>\n              </div>\n            </template>\n          </draggable>\n          <div\n            v-if=\"protocols.length === 0\"\n            class=\"flex flex-col items-center justify-center p-4 text-secondaryLight\"\n          >\n            <img\n              :src=\"`/images/states/${colorMode.value}/add_category.svg`\"\n              loading=\"lazy\"\n              class=\"inline-flex flex-col object-contain object-center w-16 h-16 my-4\"\n              :alt=\"`${t('empty.protocols')}`\"\n            />\n            <span class=\"mb-4 text-center\">\n              {{ t(\"empty.protocols\") }}\n            </span>\n          </div>\n        </SmartTab>\n      </SmartTabs>\n    </template>\n    <template #secondary>\n      <RealtimeLog\n        :title=\"t('websocket.log')\"\n        :log=\"(log as LogEntryData[])\"\n        @delete=\"clearLogEntries()\"\n      />\n    </template>\n  </AppPaneLayout>\n</template>\n<script setup lang=\"ts\">\nimport { ref, watch, onUnmounted, onMounted, computed } from \"vue\"\nimport { debounce } from \"lodash-es\"\nimport IconTrash2 from \"~icons/lucide/trash-2\"\nimport IconPlus from \"~icons/lucide/plus\"\nimport IconCheckCircle from \"~icons/lucide/check-circle\"\nimport IconCircle from \"~icons/lucide/circle\"\nimport IconGripVertical from \"~icons/lucide/grip-vertical\"\nimport IconTrash from \"~icons/lucide/trash\"\nimport draggable from \"vuedraggable\"\nimport {\n  setWSEndpoint,\n  WSEndpoint$,\n  WSProtocols$,\n  setWSProtocols,\n  addWSProtocol,\n  deleteWSProtocol,\n  updateWSProtocol,\n  deleteAllWSProtocols,\n  addWSLogLine,\n  WSLog$,\n  setWSLog,\n  HoppWSProtocol,\n  setWSSocket,\n  WSSocket$,\n} from \"~/newstore/WebSocketSession\"\nimport { useI18n } from \"@composables/i18n\"\nimport {\n  useStream,\n  useStreamSubscriber,\n  useReadonlyStream,\n} from \"@composables/stream\"\nimport { useToast } from \"@composables/toast\"\nimport { useColorMode } from \"@composables/theming\"\nimport { WSConnection, WSErrorMessage } from \"@helpers/realtime/WSConnection\"\nimport RegexWorker from \"@workers/regex?worker\"\nimport { LogEntryData } from \"~/components/realtime/Log.vue\"\n\nconst t = useI18n()\nconst toast = useToast()\nconst colorMode = useColorMode()\nconst { subscribeToStream } = useStreamSubscriber()\n\nconst selectedTab = ref<\"communication\" | \"protocols\">(\"communication\")\nconst url = useStream(WSEndpoint$, \"\", setWSEndpoint)\nconst protocols = useStream(WSProtocols$, [], setWSProtocols)\n\n/**\n * Protocols but with ID inbuilt\n */\nconst protocolsWithID = computed({\n  get() {\n    return protocols.value.map((protocol, index) => ({\n      id: `protocol-${index}-${protocol.value}`,\n      protocol,\n    }))\n  },\n  set(newData) {\n    protocols.value = newData.map(({ protocol }) => protocol)\n  },\n})\n\nconst socket = useStream(WSSocket$, new WSConnection(), setWSSocket)\n\nconst connectionState = useReadonlyStream(\n  socket.value.connectionState$,\n  \"DISCONNECTED\"\n)\n\nconst log = useStream(WSLog$, [], setWSLog)\n// DATA\nconst isUrlValid = ref(true)\n\nconst activeProtocols = ref<string[]>([])\n\nlet worker: Worker\n\nwatch(url, (newUrl) => {\n  if (newUrl) debouncer()\n})\n\nwatch(\n  protocols,\n  (newProtocols) => {\n    activeProtocols.value = newProtocols\n      .filter((item) =>\n        Object.prototype.hasOwnProperty.call(item, \"active\")\n          ? item.active === true\n          : true\n      )\n      .map(({ value }) => value)\n  },\n  { deep: true }\n)\nconst workerResponseHandler = ({\n  data,\n}: {\n  data: { url: string; result: boolean }\n}) => {\n  if (data.url === url.value) isUrlValid.value = data.result\n}\n\nconst getErrorPayload = (error: WSErrorMessage): string => {\n  if (error instanceof SyntaxError) {\n    return error.message\n  }\n  return t(\"error.something_went_wrong\").toString()\n}\n\nonMounted(() => {\n  worker = new RegexWorker()\n  worker.addEventListener(\"message\", workerResponseHandler)\n\n  subscribeToStream(socket.value.event$, (event) => {\n    switch (event?.type) {\n      case \"CONNECTING\":\n        log.value = [\n          {\n            payload: `${t(\"state.connecting_to\", { name: url.value })}`,\n            source: \"info\",\n            color: \"var(--accent-color)\",\n            ts: undefined,\n          },\n        ]\n        break\n\n      case \"CONNECTED\":\n        log.value = [\n          {\n            payload: `${t(\"state.connected_to\", { name: url.value })}`,\n            source: \"info\",\n            color: \"var(--accent-color)\",\n            ts: Date.now(),\n          },\n        ]\n        toast.success(`${t(\"state.connected\")}`)\n        break\n\n      case \"MESSAGE_SENT\":\n        addWSLogLine({\n          payload: event.message,\n          source: \"client\",\n          ts: Date.now(),\n        })\n        break\n\n      case \"MESSAGE_RECEIVED\":\n        addWSLogLine({\n          payload: event.message,\n          source: \"server\",\n          ts: event.time,\n        })\n        break\n\n      case \"ERROR\":\n        addWSLogLine({\n          payload: getErrorPayload(event.error),\n          source: \"info\",\n          color: \"#ff5555\",\n          ts: event.time,\n        })\n        break\n\n      case \"DISCONNECTED\":\n        addWSLogLine({\n          payload: t(\"state.disconnected_from\", { name: url.value }).toString(),\n          source: \"disconnected\",\n          color: \"#ff5555\",\n          ts: event.time,\n        })\n        toast.error(`${t(\"state.disconnected\")}`)\n        break\n    }\n  })\n})\n\nonUnmounted(() => {\n  if (worker) worker.terminate()\n})\nconst clearContent = () => {\n  deleteAllWSProtocols()\n}\nconst debouncer = debounce(function () {\n  worker.postMessage({ type: \"ws\", url: url.value })\n}, 1000)\n\nconst toggleConnection = () => {\n  // If it is connecting:\n  if (connectionState.value === \"DISCONNECTED\") {\n    return socket.value.connect(url.value, activeProtocols.value)\n  }\n  // Otherwise, it's disconnecting.\n  socket.value.disconnect()\n}\n\nconst sendMessage = (event: { message: string; eventName: string }) => {\n  socket.value.sendMessage(event)\n}\nconst addProtocol = () => {\n  addWSProtocol({ value: \"\", active: true })\n}\nconst deleteProtocol = (index: number) => {\n  const oldProtocols = protocols.value.slice()\n  deleteWSProtocol(index)\n  toast.success(`${t(\"state.deleted\")}`, {\n    duration: 4000,\n    action: {\n      text: `${t(\"action.undo\")}`,\n      onClick: (_, toastObject) => {\n        protocols.value = oldProtocols\n        toastObject.goAway()\n      },\n    },\n  })\n}\nconst updateProtocol = (index: number, updated: HoppWSProtocol) => {\n  updateWSProtocol(index, updated)\n}\nconst clearLogEntries = () => {\n  log.value = []\n}\n</script>\n"],"names":["t","useI18n","toast","useToast","colorMode","useColorMode","subscribeToStream","useStreamSubscriber","selectedTab","ref","url","useStream","WSEndpoint$","setWSEndpoint","protocols","WSProtocols$","setWSProtocols","protocolsWithID","computed","protocol","index","newData","socket","WSSocket$","WSConnection","setWSSocket","connectionState","useReadonlyStream","log","WSLog$","setWSLog","isUrlValid","activeProtocols","worker","watch","newUrl","debouncer","newProtocols","item","value","workerResponseHandler","data","getErrorPayload","error","onMounted","RegexWorker","event","addWSLogLine","onUnmounted","clearContent","deleteAllWSProtocols","debounce","toggleConnection","sendMessage","addProtocol","addWSProtocol","deleteProtocol","oldProtocols","deleteWSProtocol","_","toastObject","updateProtocol","updated","updateWSProtocol","clearLogEntries"],"mappings":"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"}